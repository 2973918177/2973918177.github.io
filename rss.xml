<?xml version="1.0"?>
<rss version="2.0">
    <channel>
        <title>月落星沉</title>
        <subtitle></subtitle>
        <icon>https://www.asxe.vip/images/favicon.ico</icon>
        <link>https://www.asxe.vip</link>
        <author>
          <name>ASXE</name>
        </author>
        <description>斯人如彩虹，遇上方知有</description>
        <language>zh-CN</language>
        <pubDate>Sun, 28 May 2023 11:29:01 +0800</pubDate>
        <lastBuildDate>Sun, 28 May 2023 11:29:01 +0800</lastBuildDate>
        <item>
            <guid isPermalink="true">https://www.asxe.vip/2023/05/28/%E7%8C%BF%E4%BA%BA%E5%AD%A6%E7%AC%AC%E4%BA%8C%E5%B1%8A%E7%AC%AC%E4%B8%80%E9%A2%98-%E5%88%9D%E8%AF%86/</guid>
            <title>猿人学第二届第一题-初识</title>
            <link>https://www.asxe.vip/2023/05/28/%E7%8C%BF%E4%BA%BA%E5%AD%A6%E7%AC%AC%E4%BA%8C%E5%B1%8A%E7%AC%AC%E4%B8%80%E9%A2%98-%E5%88%9D%E8%AF%86/</link>
            <category term="Python" scheme="https://www.asxe.vip/categories/python/" />
            <category term="爬虫" scheme="https://www.asxe.vip/categories/python/spider/" />
            <category term="python" scheme="https://www.asxe.vip/tags/python/" />
            <category term="爬虫" scheme="https://www.asxe.vip/tags/%E7%88%AC%E8%99%AB/" />
            <category term="js逆向" scheme="https://www.asxe.vip/tags/js%E9%80%86%E5%90%91/" />
            <pubDate>Sun, 28 May 2023 11:29:01 +0800</pubDate>
            <description><![CDATA[ &lt;h2 id=&#34;开篇&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#开篇&#34;&gt;#&lt;/a&gt; 开篇&lt;/h2&gt;
&lt;p&gt;猿人学第二届已于 2023 年 5 月 19 开始，目前赛事已结束，来看看题？&lt;/p&gt;
&lt;h2 id=&#34;正文&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#正文&#34;&gt;#&lt;/a&gt; 正文&lt;/h2&gt;
&lt;h3 id=&#34;加密分析&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#加密分析&#34;&gt;#&lt;/a&gt; 加密分析&lt;/h3&gt;
&lt;p&gt;F12 请求一下页面，找到 api，直接观察其负载，如下&lt;br /&gt;
&lt;img data-src=&#34;https://i.imgloc.com/2023/05/28/VnFUTp.png&#34; alt=&#34;VnFUTp.png&#34; /&gt;&lt;br /&gt;
 可以发现有三个参数，分别是 page（当前页数），token，now（或许是时间戳？）&lt;br /&gt;
废话不多说，直接看它的发起程序，如下&lt;br /&gt;
&lt;img data-src=&#34;https://i.imgloc.com/2023/05/28/VnFtkU.png&#34; alt=&#34;VnFtkU.png&#34; /&gt;&lt;br /&gt;
 第一个和第二个是 send 和 ajax，这里已经属于发送了，直接点第三个&lt;br /&gt;
可以清晰的看到这三个参数：&lt;br /&gt;
&lt;img data-src=&#34;https://i.imgloc.com/2023/05/28/VnFWpv.png&#34; alt=&#34;VnFWpv.png&#34; /&gt;&lt;br /&gt;
 可以知道，page 是当前页数，now 是当前时间戳，token 则是进行了一个什么 MD5 加密&lt;br /&gt;
但是！这个 MD5 不是普通的 MD5，它是经过了魔改的，因此打上断点，转到其生成的地方看看&lt;br /&gt;
&lt;img data-src=&#34;https://i.imgloc.com/2023/05/28/VnFk93.png&#34; alt=&#34;VnFk93.png&#34; /&gt;&lt;br /&gt;
 我们把这里面的所有代码复制拿出来&lt;br /&gt;
&lt;img data-src=&#34;https://i.imgloc.com/2023/05/28/VnFHZZ.png&#34; alt=&#34;VnFHZZ.png&#34; /&gt;&lt;br /&gt;
 简单分析发现这是个类似&lt;span class=&#34;label info&#34;&gt; webpack&lt;/span&gt; 的一段代码，是自执行的&lt;br /&gt;
那么我们就执行一下这段代码，看看会发生什么&lt;br /&gt;
结果报错了，如下&lt;br /&gt;
&lt;img data-src=&#34;https://i.imgloc.com/2023/05/28/VnFbeH.png&#34; alt=&#34;VnFbeH.png&#34; /&gt;&lt;br /&gt;
 我们转到报错位置&lt;br /&gt;
发现这是个 i 函数发起的报错，i 函数的上面则是一堆检测 h 值的东西，如下&lt;br /&gt;
&lt;img data-src=&#34;https://i.imgloc.com/2023/05/28/VnFjTQ.png&#34; alt=&#34;VnFjTQ.png&#34; /&gt;&lt;br /&gt;
ide 显示这个 i 函数只有一个调用用法，那么去浏览器打上断点看看这个 i 返回的到底是个什么&lt;br /&gt;
&lt;img data-src=&#34;https://i.imgloc.com/2023/05/28/VnFNBC.png&#34; alt=&#34;VnFNBC.png&#34; /&gt;&lt;br /&gt;
 进入控制台，输入 i () 看看 i 返回的什么&lt;br /&gt;
&lt;img data-src=&#34;https://i.imgloc.com/2023/05/28/VnFr9P.png&#34; alt=&#34;VnFr9P.png&#34; /&gt;&lt;br /&gt;
 可以看到，i () 就是第一个 return 返回的值，那么我们便可以直接将 i 函数进行改写，并将上面的一个检测 h 值的删掉，如下&lt;br /&gt;
&lt;img data-src=&#34;https://i.imgloc.com/2023/05/28/VnFzJb.png&#34; alt=&#34;VnFzJb.png&#34; /&gt;&lt;br /&gt;
 然后继续执行，又报错&lt;br /&gt;
&lt;img data-src=&#34;https://i.imgloc.com/2023/05/28/VnFE0V.jpeg&#34; alt=&#34;VnFE0V.jpeg&#34; /&gt;&lt;br /&gt;
 跳转查看，发现原来是 Ajax 啊，那直接把这段给删了，因为这里是属于发送了，我们用不着。&lt;br /&gt;
然后在上面打印一下这个 j，可以看到 j 已经生成了，但是，现在生成的并不是准确的（你自己拿个浏览器的时间戳固定后看看你的和浏览器生成的是否一样就知道了，这里不演示，只讲如何去掉环境检测）&lt;/p&gt;
&lt;h3 id=&#34;去除检测&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#去除检测&#34;&gt;#&lt;/a&gt; 去除检测&lt;/h3&gt;
&lt;p&gt;一般常见的浏览器环境检测是：&lt;span class=&#34;label info&#34;&gt;window,document,global,navigator,location 以及 node 环境检测&lt;/span&gt;&lt;br /&gt;
这里我们便一个一个找&lt;br /&gt;
先 window，这里有一处，还有个三元表达式，这种如何修改？直接浏览器打上断点，然后看第一个值是 true 还是 false，将第一个值修改后，pycharm 便会提示简化，简化即可。（这里&lt;span class=&#34;label info&#34;&gt; window 对象肯定是存在的&lt;/span&gt;，直接改成 true 然后简化就行了）&lt;br /&gt;
&lt;img data-src=&#34;https://i.imgloc.com/2023/05/28/VnFGrz.png&#34; alt=&#34;VnFGrz.png&#34; /&gt;&lt;br /&gt;
 修改后&lt;br /&gt;
&lt;img data-src=&#34;https://i.imgloc.com/2023/05/28/VnFT55.png&#34; alt=&#34;VnFT55.png&#34; /&gt;&lt;br /&gt;
 然后 document，这里有一处&lt;br /&gt;
&lt;img data-src=&#34;https://i.imgloc.com/2023/05/28/VnF5Za.png&#34; alt=&#34;VnF5Za.png&#34; /&gt;&lt;br /&gt;
 直接浏览器打上断点&lt;br /&gt;
&lt;img data-src=&#34;https://i.imgloc.com/2023/05/28/VnFSOx.png&#34; alt=&#34;VnFSOx.png&#34; /&gt;&lt;br /&gt;
 简化修改后&lt;br /&gt;
&lt;img data-src=&#34;https://i.imgloc.com/2023/05/28/VnFozk.png&#34; alt=&#34;VnFozk.png&#34; /&gt;&lt;br /&gt;
 其他的几个值也用这种方法操作，唯有一处我要提示一下&lt;br /&gt;
&lt;img data-src=&#34;https://i.imgloc.com/2023/05/28/VnFsaL.png&#34; alt=&#34;VnFsaL.png&#34; /&gt;&lt;br /&gt;
 这个地方简化后得到的是 self，而在浏览器中选中这一段显示的确实 window，原因是 node 环境中是不存在 self 的，浏览器环境中 self 就是 window 对象，因此直接改成 window 就行了，如下（记得在全局中添加 window = {}）&lt;br /&gt;
&lt;a href=&#34;https://imgloc.com/i/VnF90p&#34;&gt;&lt;img data-src=&#34;https://i.imgloc.com/2023/05/28/VnF90p.png&#34; alt=&#34;VnF90p.png&#34; /&gt;&lt;/a&gt;&lt;br /&gt;
 环境补完后，就可以生成正确的值了，下面是完整 js 代码&lt;/p&gt;
&lt;h3 id=&#34;完整js代码&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#完整js代码&#34;&gt;#&lt;/a&gt; 完整 js 代码&lt;/h3&gt;
&lt;p&gt;代码过长，无法高亮显示，有问题请在评论区提出。&lt;br /&gt;
&lt;pre class=&#34;line-numbers language-JavaScript&#34; data-language=&#34;JavaScript&#34;&gt;&lt;code class=&#34;language-JavaScript&#34;&gt;var asxe;
window &amp;#x3D; &amp;#123;&amp;#125;;

(function () &amp;#123;
    function a(b, c, d) &amp;#123;
        function f(j, k) &amp;#123;
            if (!c[j]) &amp;#123;
                if (!b[j]) &amp;#123;
                    var l &amp;#x3D; &amp;#39;function&amp;#39; &amp;#x3D;&amp;#x3D; typeof require &amp;amp;&amp;amp; require;
                    if (!k &amp;amp;&amp;amp; l)
                        return l(j, !0x0);
                    if (g)
                        return g(j, !0x0);
                    var m &amp;#x3D; new Error(&amp;#39;Cannot\x20find\x20module\x20\x27&amp;#39; + j + &amp;#39;\x27&amp;#39;);
                    throw m[&amp;#39;code&amp;#39;] &amp;#x3D; &amp;#39;MODULE_NOT_FOUND&amp;#39;,
                        m;
                &amp;#125;
                var q &amp;#x3D; c[j] &amp;#x3D; &amp;#123;
                    &amp;#39;exports&amp;#39;: &amp;#123;&amp;#125;
                &amp;#125;;
                b[j][0x0][&amp;#39;call&amp;#39;](q[&amp;#39;exports&amp;#39;], function (s) &amp;#123;
                    var v &amp;#x3D; b[j][0x1][s];
                    return f(v || s);
                &amp;#125;, q, q[&amp;#39;exports&amp;#39;], a, b, c, d);
            &amp;#125;
            return c[j][&amp;#39;exports&amp;#39;];
        &amp;#125;

        for (var g &amp;#x3D; &amp;#39;function&amp;#39; &amp;#x3D;&amp;#x3D; typeof require &amp;amp;&amp;amp; require, h &amp;#x3D; 0x0; h &amp;lt; d[&amp;#39;length&amp;#39;]; h++)
            f(d[h]);
        return f;
    &amp;#125;

    return a;
&amp;#125;()(&amp;#123;
    0x1: [function (a, b, c) &amp;#123;
    &amp;#125;
        , &amp;#123;&amp;#125;],
    0x2: [function (a, b, c) &amp;#123;
        call &amp;#x3D; function (d) &amp;#123;
            asxe &amp;#x3D; a; &amp;#x2F;&amp;#x2F;这里设置全局变量为a函数，方便调用，因为要传入一个page!
        &amp;#125;
            ,
            call(0x1);
    &amp;#125;
        , &amp;#123;
            &amp;#39;crypto-js&amp;#39;: 0xc
        &amp;#125;],
    0x3: [function (a, b, c) &amp;#123;
        ;(function (d, e, f) &amp;#123;
            if (typeof c &amp;#x3D;&amp;#x3D;&amp;#x3D; &amp;#39;object&amp;#39;)
                b[&amp;#39;exports&amp;#39;] &amp;#x3D; c &amp;#x3D; e(a(&amp;#39;.&amp;#x2F;core&amp;#39;), a(&amp;#39;.&amp;#x2F;enc-base64&amp;#39;), a(&amp;#39;.&amp;#x2F;md5&amp;#39;), a(&amp;#39;.&amp;#x2F;evpkdf&amp;#39;), a(&amp;#39;.&amp;#x2F;cipher-core&amp;#39;));
            else
                typeof define &amp;#x3D;&amp;#x3D;&amp;#x3D; &amp;#39;function&amp;#39; &amp;amp;&amp;amp; define[&amp;#39;amd&amp;#39;] ? define([&amp;#39;.&amp;#x2F;core&amp;#39;, &amp;#39;.&amp;#x2F;enc-base64&amp;#39;, &amp;#39;.&amp;#x2F;md5&amp;#39;, &amp;#39;.&amp;#x2F;evpkdf&amp;#39;, &amp;#39;.&amp;#x2F;cipher-core&amp;#39;], e) : e(d[&amp;#39;CryptoJS&amp;#39;]);
        &amp;#125;(this, function (d) &amp;#123;
            return (function () &amp;#123;
                var e &amp;#x3D; d
                    , f &amp;#x3D; e[&amp;#39;lib&amp;#39;]
                    , g &amp;#x3D; f[&amp;#39;BlockCipher&amp;#39;]
                    , h &amp;#x3D; e[&amp;#39;algo&amp;#39;]
                    , i &amp;#x3D; []
                    , j &amp;#x3D; []
                    , k &amp;#x3D; []
                    , l &amp;#x3D; []
                    , m &amp;#x3D; []
                    , n &amp;#x3D; []
                    , o &amp;#x3D; []
                    , p &amp;#x3D; []
                    , q &amp;#x3D; []
                    , r &amp;#x3D; [];
                (function () &amp;#123;
                    var u &amp;#x3D; [];
                    for (var v &amp;#x3D; 0x0; v &amp;lt; 0x100; v++) &amp;#123;
                        v &amp;lt; 0x80 ? u[v] &amp;#x3D; v &amp;lt;&amp;lt; 0x1 : u[v] &amp;#x3D; v &amp;lt;&amp;lt; 0x1 ^ 0x11b;
                    &amp;#125;
                    var w &amp;#x3D; 0x0
                        , y &amp;#x3D; 0x0;
                    for (var v &amp;#x3D; 0x0; v &amp;lt; 0x100; v++) &amp;#123;
                        var z &amp;#x3D; y ^ y &amp;lt;&amp;lt; 0x1 ^ y &amp;lt;&amp;lt; 0x2 ^ y &amp;lt;&amp;lt; 0x3 ^ y &amp;lt;&amp;lt; 0x4;
                        z &amp;#x3D; z &amp;gt;&amp;gt;&amp;gt; 0x8 ^ z &amp;amp; 0xff ^ 0x63,
                            i[w] &amp;#x3D; z,
                            j[z] &amp;#x3D; w;
                        var A &amp;#x3D; u[w]
                            , B &amp;#x3D; u[A]
                            , D &amp;#x3D; u[B]
                            , E &amp;#x3D; u[z] * 0x101 ^ z * 0x1010100;
                        k[w] &amp;#x3D; E &amp;lt;&amp;lt; 0x18 | E &amp;gt;&amp;gt;&amp;gt; 0x8,
                            l[w] &amp;#x3D; E &amp;lt;&amp;lt; 0x10 | E &amp;gt;&amp;gt;&amp;gt; 0x10,
                            m[w] &amp;#x3D; E &amp;lt;&amp;lt; 0x8 | E &amp;gt;&amp;gt;&amp;gt; 0x18,
                            n[w] &amp;#x3D; E;
                        var E &amp;#x3D; D * 0x1010101 ^ B * 0x10001 ^ A * 0x101 ^ w * 0x1010100;
                        o[z] &amp;#x3D; E &amp;lt;&amp;lt; 0x18 | E &amp;gt;&amp;gt;&amp;gt; 0x8,
                            p[z] &amp;#x3D; E &amp;lt;&amp;lt; 0x10 | E &amp;gt;&amp;gt;&amp;gt; 0x10,
                            q[z] &amp;#x3D; E &amp;lt;&amp;lt; 0x8 | E &amp;gt;&amp;gt;&amp;gt; 0x18,
                            r[z] &amp;#x3D; E,
                            !w ? w &amp;#x3D; y &amp;#x3D; 0x1 : (w &amp;#x3D; A ^ u[u[u[D ^ A]]],
                                y ^&amp;#x3D; u[u[y]]);
                    &amp;#125;
                &amp;#125;());
                var s &amp;#x3D; [0x0, 0x1, 0x2, 0x4, 0x80, 0x1b, 0x36, 0x8, 0x10, 0x20, 0x40]
                    , t &amp;#x3D; h[&amp;#39;AES&amp;#39;] &amp;#x3D; g[&amp;#39;extend&amp;#39;](&amp;#123;
                    &amp;#39;_doReset&amp;#39;: function () &amp;#123;
                        var u;
                        if (this[&amp;#39;_nRounds&amp;#39;] &amp;amp;&amp;amp; this[&amp;#39;_keyPriorReset&amp;#39;] &amp;#x3D;&amp;#x3D;&amp;#x3D; this[&amp;#39;_key&amp;#39;])
                            return;
                        var v &amp;#x3D; this[&amp;#39;_keyPriorReset&amp;#39;] &amp;#x3D; this[&amp;#39;_key&amp;#39;]
                            , w &amp;#x3D; v[&amp;#39;words&amp;#39;]
                            , x &amp;#x3D; v[&amp;#39;sigBytes&amp;#39;] &amp;#x2F; 0x4
                            , y &amp;#x3D; this[&amp;#39;_nRounds&amp;#39;] &amp;#x3D; x + 0x6
                            , z &amp;#x3D; (y + 0x1) * 0x4
                            , A &amp;#x3D; this[&amp;#39;_keySchedule&amp;#39;] &amp;#x3D; [];
                        for (var B &amp;#x3D; 0x0; B &amp;lt; z; B++) &amp;#123;
                            if (B &amp;lt; x)
                                A[B] &amp;#x3D; w[B];
                            else &amp;#123;
                                u &amp;#x3D; A[B - 0x1];
                                if (!(B % x))
                                    u &amp;#x3D; u &amp;lt;&amp;lt; 0x8 | u &amp;gt;&amp;gt;&amp;gt; 0x18,
                                        u &amp;#x3D; i[u &amp;gt;&amp;gt;&amp;gt; 0x18] &amp;lt;&amp;lt; 0x18 | i[u &amp;gt;&amp;gt;&amp;gt; 0x10 &amp;amp; 0xff] &amp;lt;&amp;lt; 0x10 | i[u &amp;gt;&amp;gt;&amp;gt; 0x8 &amp;amp; 0xff] &amp;lt;&amp;lt; 0x8 | i[u &amp;amp; 0xff],
                                        u ^&amp;#x3D; s[B &amp;#x2F; x | 0x0] &amp;lt;&amp;lt; 0x18;
                                else
                                    x &amp;gt; 0x6 &amp;amp;&amp;amp; B % x &amp;#x3D;&amp;#x3D; 0x4 &amp;amp;&amp;amp; (u &amp;#x3D; i[u &amp;gt;&amp;gt;&amp;gt; 0x1a] &amp;lt;&amp;lt; 0x18 | i[u &amp;gt;&amp;gt;&amp;gt; 0x10 &amp;amp; 0xff] &amp;lt;&amp;lt; 0x10 | i[u &amp;gt;&amp;gt;&amp;gt; 0x8 &amp;amp; 0xff] &amp;lt;&amp;lt; 0x8 | i[u &amp;amp; 0xff]);
                                A[B] &amp;#x3D; A[B - x] ^ u;
                            &amp;#125;
                        &amp;#125;
                        var D &amp;#x3D; this[&amp;#39;_invKeySchedule&amp;#39;] &amp;#x3D; [];
                        for (var E &amp;#x3D; 0x0; E &amp;lt; z; E++) &amp;#123;
                            var B &amp;#x3D; z - E;
                            if (E % 0x4)
                                var u &amp;#x3D; A[B];
                            else
                                var u &amp;#x3D; A[B - 0x4];
                            E &amp;lt; 0x4 || B &amp;lt;&amp;#x3D; 0x4 ? D[E] &amp;#x3D; u : D[E] &amp;#x3D; o[i[u &amp;gt;&amp;gt;&amp;gt; 0x18]] ^ p[i[u &amp;gt;&amp;gt;&amp;gt; 0x10 &amp;amp; 0xff]] ^ q[i[u &amp;gt;&amp;gt;&amp;gt; 0x8 &amp;amp; 0xff]] ^ r[i[u &amp;amp; 0xff]];
                        &amp;#125;
                    &amp;#125;,
                    &amp;#39;encryptBlock&amp;#39;: function (u, v) &amp;#123;
                        this[&amp;#39;_doCryptBlock&amp;#39;](u, v, this[&amp;#39;_keySchedule&amp;#39;], k, l, m, n, i);
                    &amp;#125;,
                    &amp;#39;decryptBlock&amp;#39;: function (u, v) &amp;#123;
                        var w &amp;#x3D; u[v + 0x1];
                        u[v + 0x1] &amp;#x3D; u[v + 0x3],
                            u[v + 0x3] &amp;#x3D; w,
                            this[&amp;#39;_doCryptBlock&amp;#39;](u, v, this[&amp;#39;_invKeySchedule&amp;#39;], o, p, q, r, j);
                        var w &amp;#x3D; u[v + 0x1];
                        u[v + 0x1] &amp;#x3D; u[v + 0x3],
                            u[v + 0x3] &amp;#x3D; w;
                    &amp;#125;,
                    &amp;#39;_doCryptBlock&amp;#39;: function (u, v, w, x, y, z, A, B) &amp;#123;
                        var D &amp;#x3D; this[&amp;#39;_nRounds&amp;#39;]
                            , E &amp;#x3D; u[v] ^ w[0x0]
                            , F &amp;#x3D; u[v + 0x1] ^ w[0x1]
                            , G &amp;#x3D; u[v + 0x2] ^ w[0x2]
                            , H &amp;#x3D; u[v + 0x3] ^ w[0x3]
                            , I &amp;#x3D; 0x4;
                        for (var J &amp;#x3D; 0x1; J &amp;lt; D; J++) &amp;#123;
                            var K &amp;#x3D; x[E &amp;gt;&amp;gt;&amp;gt; 0x18] ^ y[F &amp;gt;&amp;gt;&amp;gt; 0x10 &amp;amp; 0xff] ^ z[G &amp;gt;&amp;gt;&amp;gt; 0x8 &amp;amp; 0xff] ^ A[H &amp;amp; 0xff] ^ w[I++]
                                , L &amp;#x3D; x[F &amp;gt;&amp;gt;&amp;gt; 0x18] ^ y[G &amp;gt;&amp;gt;&amp;gt; 0x10 &amp;amp; 0xff] ^ z[H &amp;gt;&amp;gt;&amp;gt; 0x8 &amp;amp; 0xff] ^ A[E &amp;amp; 0xff] ^ w[I++]
                                , N &amp;#x3D; x[G &amp;gt;&amp;gt;&amp;gt; 0x18] ^ y[H &amp;gt;&amp;gt;&amp;gt; 0x10 &amp;amp; 0xff] ^ z[E &amp;gt;&amp;gt;&amp;gt; 0x8 &amp;amp; 0xff] ^ A[F &amp;amp; 0xff] ^ w[I++]
                                , O &amp;#x3D; x[H &amp;gt;&amp;gt;&amp;gt; 0x18] ^ y[E &amp;gt;&amp;gt;&amp;gt; 0x10 &amp;amp; 0xff] ^ z[F &amp;gt;&amp;gt;&amp;gt; 0x8 &amp;amp; 0xff] ^ A[G &amp;amp; 0xff] ^ w[I++];
                            E &amp;#x3D; K,
                                F &amp;#x3D; L,
                                G &amp;#x3D; N,
                                H &amp;#x3D; O;
                        &amp;#125;
                        var K &amp;#x3D; (B[E &amp;gt;&amp;gt;&amp;gt; 0x18] &amp;lt;&amp;lt; 0x18 | B[F &amp;gt;&amp;gt;&amp;gt; 0x10 &amp;amp; 0xff] &amp;lt;&amp;lt; 0x10 | B[G &amp;gt;&amp;gt;&amp;gt; 0x8 &amp;amp; 0xff] &amp;lt;&amp;lt; 0x8 | B[H &amp;amp; 0xff]) ^ w[I++]
                            ,
                            L &amp;#x3D; (B[F &amp;gt;&amp;gt;&amp;gt; 0x18] &amp;lt;&amp;lt; 0x18 | B[G &amp;gt;&amp;gt;&amp;gt; 0x10 &amp;amp; 0xff] &amp;lt;&amp;lt; 0x10 | B[H &amp;gt;&amp;gt;&amp;gt; 0x8 &amp;amp; 0xff] &amp;lt;&amp;lt; 0x8 | B[E &amp;amp; 0xff]) ^ w[I++]
                            ,
                            N &amp;#x3D; (B[G &amp;gt;&amp;gt;&amp;gt; 0x18] &amp;lt;&amp;lt; 0x18 | B[H &amp;gt;&amp;gt;&amp;gt; 0x10 &amp;amp; 0xff] &amp;lt;&amp;lt; 0x10 | B[E &amp;gt;&amp;gt;&amp;gt; 0x8 &amp;amp; 0xff] &amp;lt;&amp;lt; 0x8 | B[F &amp;amp; 0xff]) ^ w[I++]
                            ,
                            O &amp;#x3D; (B[H &amp;gt;&amp;gt;&amp;gt; 0x18] &amp;lt;&amp;lt; 0x18 | B[E &amp;gt;&amp;gt;&amp;gt; 0x10 &amp;amp; 0xff] &amp;lt;&amp;lt; 0x10 | B[F &amp;gt;&amp;gt;&amp;gt; 0x8 &amp;amp; 0xff] &amp;lt;&amp;lt; 0x8 | B[G &amp;amp; 0xff]) ^ w[I++];
                        u[v] &amp;#x3D; K,
                            u[v + 0x1] &amp;#x3D; L,
                            u[v + 0x2] &amp;#x3D; N,
                            u[v + 0x3] &amp;#x3D; O;
                    &amp;#125;,
                    &amp;#39;keySize&amp;#39;: 0x100 &amp;#x2F; 0x20
                &amp;#125;);
                e[&amp;#39;AES&amp;#39;] &amp;#x3D; g[&amp;#39;_createHelper&amp;#39;](t);
            &amp;#125;()),
                d[&amp;#39;AES&amp;#39;];
        &amp;#125;));
    &amp;#125;
        , &amp;#123;
            &amp;#39;.&amp;#x2F;cipher-core&amp;#39;: 0x4,
            &amp;#39;.&amp;#x2F;core&amp;#39;: 0x5,
            &amp;#39;.&amp;#x2F;enc-base64&amp;#39;: 0x6,
            &amp;#39;.&amp;#x2F;evpkdf&amp;#39;: 0x9,
            &amp;#39;.&amp;#x2F;md5&amp;#39;: 0xe
        &amp;#125;],
    0x4: [function (a, b, c) &amp;#123;
        ;(function (d, e, f) &amp;#123;
            if (typeof c &amp;#x3D;&amp;#x3D;&amp;#x3D; &amp;#39;object&amp;#39;)
                b[&amp;#39;exports&amp;#39;] &amp;#x3D; c &amp;#x3D; e(a(&amp;#39;.&amp;#x2F;core&amp;#39;), a(&amp;#39;.&amp;#x2F;evpkdf&amp;#39;));
            else
                typeof define &amp;#x3D;&amp;#x3D;&amp;#x3D; &amp;#39;function&amp;#39; &amp;amp;&amp;amp; define[&amp;#39;amd&amp;#39;] ? define([&amp;#39;.&amp;#x2F;core&amp;#39;, &amp;#39;.&amp;#x2F;evpkdf&amp;#39;], e) : e(d[&amp;#39;CryptoJS&amp;#39;]);
        &amp;#125;(this, function (d) &amp;#123;
            d[&amp;#39;lib&amp;#39;][&amp;#39;Cipher&amp;#39;] || function (e) &amp;#123;
                var f &amp;#x3D; d
                    , g &amp;#x3D; f[&amp;#39;lib&amp;#39;]
                    , h &amp;#x3D; g[&amp;#39;Base&amp;#39;]
                    , i &amp;#x3D; g[&amp;#39;WordArray&amp;#39;]
                    , j &amp;#x3D; g[&amp;#39;BufferedBlockAlgorithm&amp;#39;]
                    , k &amp;#x3D; f[&amp;#39;enc&amp;#39;]
                    , l &amp;#x3D; k[&amp;#39;Utf8&amp;#39;]
                    , m &amp;#x3D; k[&amp;#39;Base64&amp;#39;]
                    , n &amp;#x3D; f[&amp;#39;algo&amp;#39;]
                    , o &amp;#x3D; n[&amp;#39;EvpKDF&amp;#39;]
                    , p &amp;#x3D; g[&amp;#39;Cipher&amp;#39;] &amp;#x3D; j[&amp;#39;extend&amp;#39;](&amp;#123;
                    &amp;#39;cfg&amp;#39;: h[&amp;#39;extend&amp;#39;](),
                    &amp;#39;createEncryptor&amp;#39;: function (F, G) &amp;#123;
                        return this[&amp;#39;create&amp;#39;](this[&amp;#39;_ENC_XFORM_MODE&amp;#39;], F, G);
                    &amp;#125;,
                    &amp;#39;createDecryptor&amp;#39;: function (F, G) &amp;#123;
                        return this[&amp;#39;create&amp;#39;](this[&amp;#39;_DEC_XFORM_MODE&amp;#39;], F, G);
                    &amp;#125;,
                    &amp;#39;init&amp;#39;: function (F, G, H) &amp;#123;
                        this[&amp;#39;cfg&amp;#39;] &amp;#x3D; this[&amp;#39;cfg&amp;#39;][&amp;#39;extend&amp;#39;](H),
                            this[&amp;#39;_xformMode&amp;#39;] &amp;#x3D; F,
                            this[&amp;#39;_key&amp;#39;] &amp;#x3D; G,
                            this[&amp;#39;reset&amp;#39;]();
                    &amp;#125;,
                    &amp;#39;reset&amp;#39;: function () &amp;#123;
                        j[&amp;#39;reset&amp;#39;][&amp;#39;call&amp;#39;](this),
                            this[&amp;#39;_doReset&amp;#39;]();
                    &amp;#125;,
                    &amp;#39;process&amp;#39;: function (F) &amp;#123;
                        return this[&amp;#39;_append&amp;#39;](F),
                            this[&amp;#39;_process&amp;#39;]();
                    &amp;#125;,
                    &amp;#39;finalize&amp;#39;: function (F) &amp;#123;
                        F &amp;amp;&amp;amp; this[&amp;#39;_append&amp;#39;](F);
                        var G &amp;#x3D; this[&amp;#39;_doFinalize&amp;#39;]();
                        return G;
                    &amp;#125;,
                    &amp;#39;keySize&amp;#39;: 0x80 &amp;#x2F; 0x20,
                    &amp;#39;ivSize&amp;#39;: 0x80 &amp;#x2F; 0x20,
                    &amp;#39;_ENC_XFORM_MODE&amp;#39;: 0x1,
                    &amp;#39;_DEC_XFORM_MODE&amp;#39;: 0x2,
                    &amp;#39;_createHelper&amp;#39;: (function () &amp;#123;
                        function F(G) &amp;#123;
                            return typeof G &amp;#x3D;&amp;#x3D; &amp;#39;string&amp;#39; ? E : A;
                        &amp;#125;

                        return function (G) &amp;#123;
                            return &amp;#123;
                                &amp;#39;encrypt&amp;#39;: function (H, I, J) &amp;#123;
                                    return F(I)[&amp;#39;encrypt&amp;#39;](G, H, I, J);
                                &amp;#125;,
                                &amp;#39;decrypt&amp;#39;: function (H, I, J) &amp;#123;
                                    return F(I)[&amp;#39;decrypt&amp;#39;](G, H, I, J);
                                &amp;#125;
                            &amp;#125;;
                        &amp;#125;
                            ;
                    &amp;#125;())
                &amp;#125;)
                    , q &amp;#x3D; g[&amp;#39;StreamCipher&amp;#39;] &amp;#x3D; p[&amp;#39;extend&amp;#39;](&amp;#123;
                    &amp;#39;_doFinalize&amp;#39;: function () &amp;#123;
                        var F &amp;#x3D; this[&amp;#39;_process&amp;#39;](!!&amp;#39;flush&amp;#39;);
                        return F;
                    &amp;#125;,
                    &amp;#39;blockSize&amp;#39;: 0x1
                &amp;#125;)
                    , r &amp;#x3D; f[&amp;#39;mode&amp;#39;] &amp;#x3D; &amp;#123;&amp;#125;
                    , s &amp;#x3D; g[&amp;#39;BlockCipherMode&amp;#39;] &amp;#x3D; h[&amp;#39;extend&amp;#39;](&amp;#123;
                    &amp;#39;createEncryptor&amp;#39;: function (F, G) &amp;#123;
                        return this[&amp;#39;Encryptor&amp;#39;][&amp;#39;create&amp;#39;](F, G);
                    &amp;#125;,
                    &amp;#39;createDecryptor&amp;#39;: function (F, G) &amp;#123;
                        return this[&amp;#39;Decryptor&amp;#39;][&amp;#39;create&amp;#39;](F, G);
                    &amp;#125;,
                    &amp;#39;init&amp;#39;: function (F, G) &amp;#123;
                        this[&amp;#39;_cipher&amp;#39;] &amp;#x3D; F,
                            this[&amp;#39;_iv&amp;#39;] &amp;#x3D; G;
                    &amp;#125;
                &amp;#125;)
                    , t &amp;#x3D; r[&amp;#39;CBC&amp;#39;] &amp;#x3D; (function () &amp;#123;
                    var F &amp;#x3D; s[&amp;#39;extend&amp;#39;]();
                    F[&amp;#39;Encryptor&amp;#39;] &amp;#x3D; F[&amp;#39;extend&amp;#39;](&amp;#123;
                        &amp;#39;processBlock&amp;#39;: function (H, I) &amp;#123;
                            var J &amp;#x3D; this[&amp;#39;_cipher&amp;#39;]
                                , K &amp;#x3D; J[&amp;#39;blockSize&amp;#39;];
                            G[&amp;#39;call&amp;#39;](this, H, I, K),
                                J[&amp;#39;encryptBlock&amp;#39;](H, I),
                                this[&amp;#39;_prevBlock&amp;#39;] &amp;#x3D; H[&amp;#39;slice&amp;#39;](I, I + K);
                        &amp;#125;
                    &amp;#125;),
                        F[&amp;#39;Decryptor&amp;#39;] &amp;#x3D; F[&amp;#39;extend&amp;#39;](&amp;#123;
                            &amp;#39;processBlock&amp;#39;: function (H, I) &amp;#123;
                                var J &amp;#x3D; this[&amp;#39;_cipher&amp;#39;]
                                    , K &amp;#x3D; J[&amp;#39;blockSize&amp;#39;]
                                    , L &amp;#x3D; H[&amp;#39;slice&amp;#39;](I, I + K);
                                J[&amp;#39;decryptBlock&amp;#39;](H, I),
                                    G[&amp;#39;call&amp;#39;](this, H, I, K),
                                    this[&amp;#39;_prevBlock&amp;#39;] &amp;#x3D; L;
                            &amp;#125;
                        &amp;#125;);

                    function G(H, I, J) &amp;#123;
                        var K, L &amp;#x3D; this[&amp;#39;_iv&amp;#39;];
                        L ? (K &amp;#x3D; L,
                            this[&amp;#39;_iv&amp;#39;] &amp;#x3D; e) : K &amp;#x3D; this[&amp;#39;_prevBlock&amp;#39;];
                        for (var M &amp;#x3D; 0x0; M &amp;lt; J; M++) &amp;#123;
                            H[I + M] ^&amp;#x3D; K[M];
                        &amp;#125;
                    &amp;#125;

                    return F;
                &amp;#125;())
                    , u &amp;#x3D; f[&amp;#39;pad&amp;#39;] &amp;#x3D; &amp;#123;&amp;#125;
                    , v &amp;#x3D; u[&amp;#39;Pkcs7&amp;#39;] &amp;#x3D; &amp;#123;
                    &amp;#39;pad&amp;#39;: function (F, G) &amp;#123;
                        var H &amp;#x3D; G * 0x4
                            , I &amp;#x3D; H - F[&amp;#39;sigBytes&amp;#39;] % H
                            , J &amp;#x3D; I &amp;lt;&amp;lt; 0x18 | I &amp;lt;&amp;lt; 0x10 | I &amp;lt;&amp;lt; 0x8 | I
                            , K &amp;#x3D; [];
                        for (var L &amp;#x3D; 0x0; L &amp;lt; I; L +&amp;#x3D; 0x4) &amp;#123;
                            K[&amp;#39;push&amp;#39;](J);
                        &amp;#125;
                        var M &amp;#x3D; i[&amp;#39;create&amp;#39;](K, I);
                        F[&amp;#39;concat&amp;#39;](M);
                    &amp;#125;,
                    &amp;#39;unpad&amp;#39;: function (F) &amp;#123;
                        var G &amp;#x3D; F[&amp;#39;words&amp;#39;][F[&amp;#39;sigBytes&amp;#39;] - 0x1 &amp;gt;&amp;gt;&amp;gt; 0x2] &amp;amp; 0xff;
                        F[&amp;#39;sigBytes&amp;#39;] -&amp;#x3D; G;
                    &amp;#125;
                &amp;#125;
                    , w &amp;#x3D; g[&amp;#39;BlockCipher&amp;#39;] &amp;#x3D; p[&amp;#39;extend&amp;#39;](&amp;#123;
                    &amp;#39;cfg&amp;#39;: p[&amp;#39;cfg&amp;#39;][&amp;#39;extend&amp;#39;](&amp;#123;
                        &amp;#39;mode&amp;#39;: t,
                        &amp;#39;padding&amp;#39;: v
                    &amp;#125;),
                    &amp;#39;reset&amp;#39;: function () &amp;#123;
                        var F;
                        p[&amp;#39;reset&amp;#39;][&amp;#39;call&amp;#39;](this);
                        var G &amp;#x3D; this[&amp;#39;cfg&amp;#39;]
                            , H &amp;#x3D; G[&amp;#39;iv&amp;#39;]
                            , I &amp;#x3D; G[&amp;#39;mode&amp;#39;];
                        this[&amp;#39;_xformMode&amp;#39;] &amp;#x3D;&amp;#x3D; this[&amp;#39;_ENC_XFORM_MODE&amp;#39;] ? F &amp;#x3D; I[&amp;#39;createEncryptor&amp;#39;] : (F &amp;#x3D; I[&amp;#39;createDecryptor&amp;#39;],
                            this[&amp;#39;_minBufferSize&amp;#39;] &amp;#x3D; 0x1),
                            this[&amp;#39;_mode&amp;#39;] &amp;amp;&amp;amp; this[&amp;#39;_mode&amp;#39;][&amp;#39;__creator&amp;#39;] &amp;#x3D;&amp;#x3D; F ? this[&amp;#39;_mode&amp;#39;][&amp;#39;init&amp;#39;](this, H &amp;amp;&amp;amp; H[&amp;#39;words&amp;#39;]) : (this[&amp;#39;_mode&amp;#39;] &amp;#x3D; F[&amp;#39;call&amp;#39;](I, this, H &amp;amp;&amp;amp; H[&amp;#39;words&amp;#39;]),
                                this[&amp;#39;_mode&amp;#39;][&amp;#39;__creator&amp;#39;] &amp;#x3D; F);
                    &amp;#125;,
                    &amp;#39;_doProcessBlock&amp;#39;: function (F, G) &amp;#123;
                        this[&amp;#39;_mode&amp;#39;][&amp;#39;processBlock&amp;#39;](F, G);
                    &amp;#125;,
                    &amp;#39;_doFinalize&amp;#39;: function () &amp;#123;
                        var F, G &amp;#x3D; this[&amp;#39;cfg&amp;#39;][&amp;#39;padding&amp;#39;];
                        return this[&amp;#39;_xformMode&amp;#39;] &amp;#x3D;&amp;#x3D; this[&amp;#39;_ENC_XFORM_MODE&amp;#39;] ? (G[&amp;#39;pad&amp;#39;](this[&amp;#39;_data&amp;#39;], this[&amp;#39;blockSize&amp;#39;]),
                            F &amp;#x3D; this[&amp;#39;_process&amp;#39;](!!&amp;#39;flush&amp;#39;)) : (F &amp;#x3D; this[&amp;#39;_process&amp;#39;](!!&amp;#39;flush&amp;#39;),
                            G[&amp;#39;unpad&amp;#39;](F)),
                            F;
                    &amp;#125;,
                    &amp;#39;blockSize&amp;#39;: 0x80 &amp;#x2F; 0x20
                &amp;#125;)
                    , x &amp;#x3D; g[&amp;#39;CipherParams&amp;#39;] &amp;#x3D; h[&amp;#39;extend&amp;#39;](&amp;#123;
                    &amp;#39;init&amp;#39;: function (F) &amp;#123;
                        this[&amp;#39;mixIn&amp;#39;](F);
                    &amp;#125;,
                    &amp;#39;toString&amp;#39;: function (F) &amp;#123;
                        return (F || this[&amp;#39;formatter&amp;#39;])[&amp;#39;stringify&amp;#39;](this);
                    &amp;#125;
                &amp;#125;)
                    , y &amp;#x3D; f[&amp;#39;format&amp;#39;] &amp;#x3D; &amp;#123;&amp;#125;
                    , z &amp;#x3D; y[&amp;#39;OpenSSL&amp;#39;] &amp;#x3D; &amp;#123;
                    &amp;#39;stringify&amp;#39;: function (F) &amp;#123;
                        var G, H &amp;#x3D; F[&amp;#39;ciphertext&amp;#39;], I &amp;#x3D; F[&amp;#39;salt&amp;#39;];
                        return I ? G &amp;#x3D; i[&amp;#39;create&amp;#39;]([0x53616c74, 0x65645f5f])[&amp;#39;concat&amp;#39;](I)[&amp;#39;concat&amp;#39;](H) : G &amp;#x3D; H,
                            G[&amp;#39;toString&amp;#39;](m);
                    &amp;#125;,
                    &amp;#39;parse&amp;#39;: function (F) &amp;#123;
                        var G, H &amp;#x3D; m[&amp;#39;parse&amp;#39;](F), I &amp;#x3D; H[&amp;#39;words&amp;#39;];
                        return I[0x0] &amp;#x3D;&amp;#x3D; 0x53616c74 &amp;amp;&amp;amp; I[0x1] &amp;#x3D;&amp;#x3D; 0x65645f5f &amp;amp;&amp;amp; (G &amp;#x3D; i[&amp;#39;create&amp;#39;](I[&amp;#39;slice&amp;#39;](0x2, 0x4)),
                            I[&amp;#39;splice&amp;#39;](0x0, 0x4),
                            H[&amp;#39;sigBytes&amp;#39;] -&amp;#x3D; 0x10),
                            x[&amp;#39;create&amp;#39;](&amp;#123;
                                &amp;#39;ciphertext&amp;#39;: H,
                                &amp;#39;salt&amp;#39;: G
                            &amp;#125;);
                    &amp;#125;
                &amp;#125;
                    , A &amp;#x3D; g[&amp;#39;SerializableCipher&amp;#39;] &amp;#x3D; h[&amp;#39;extend&amp;#39;](&amp;#123;
                    &amp;#39;cfg&amp;#39;: h[&amp;#39;extend&amp;#39;](&amp;#123;
                        &amp;#39;format&amp;#39;: z
                    &amp;#125;),
                    &amp;#39;encrypt&amp;#39;: function (F, G, H, I) &amp;#123;
                        I &amp;#x3D; this[&amp;#39;cfg&amp;#39;][&amp;#39;extend&amp;#39;](I);
                        var J &amp;#x3D; F[&amp;#39;createEncryptor&amp;#39;](H, I)
                            , K &amp;#x3D; J[&amp;#39;finalize&amp;#39;](G)
                            , L &amp;#x3D; J[&amp;#39;cfg&amp;#39;];
                        return x[&amp;#39;create&amp;#39;](&amp;#123;
                            &amp;#39;ciphertext&amp;#39;: K,
                            &amp;#39;key&amp;#39;: H,
                            &amp;#39;iv&amp;#39;: L[&amp;#39;iv&amp;#39;],
                            &amp;#39;algorithm&amp;#39;: F,
                            &amp;#39;mode&amp;#39;: L[&amp;#39;mode&amp;#39;],
                            &amp;#39;padding&amp;#39;: L[&amp;#39;padding&amp;#39;],
                            &amp;#39;blockSize&amp;#39;: F[&amp;#39;blockSize&amp;#39;],
                            &amp;#39;formatter&amp;#39;: I[&amp;#39;format&amp;#39;]
                        &amp;#125;);
                    &amp;#125;,
                    &amp;#39;decrypt&amp;#39;: function (F, G, H, I) &amp;#123;
                        I &amp;#x3D; this[&amp;#39;cfg&amp;#39;][&amp;#39;extend&amp;#39;](I),
                            G &amp;#x3D; this[&amp;#39;_parse&amp;#39;](G, I[&amp;#39;format&amp;#39;]);
                        var J &amp;#x3D; F[&amp;#39;createDecryptor&amp;#39;](H, I)[&amp;#39;finalize&amp;#39;](G[&amp;#39;ciphertext&amp;#39;]);
                        return J;
                    &amp;#125;,
                    &amp;#39;_parse&amp;#39;: function (F, G) &amp;#123;
                        return typeof F &amp;#x3D;&amp;#x3D; &amp;#39;string&amp;#39; ? G[&amp;#39;parse&amp;#39;](F, this) : F;
                    &amp;#125;
                &amp;#125;)
                    , B &amp;#x3D; f[&amp;#39;kdf&amp;#39;] &amp;#x3D; &amp;#123;&amp;#125;
                    , D &amp;#x3D; B[&amp;#39;OpenSSL&amp;#39;] &amp;#x3D; &amp;#123;
                    &amp;#39;execute&amp;#39;: function (F, G, H, I) &amp;#123;
                        !I &amp;amp;&amp;amp; (I &amp;#x3D; i[&amp;#39;random&amp;#39;](0x40 &amp;#x2F; 0x8));
                        var J &amp;#x3D; o[&amp;#39;create&amp;#39;](&amp;#123;
                            &amp;#39;keySize&amp;#39;: G + H
                        &amp;#125;)[&amp;#39;compute&amp;#39;](F, I)
                            , K &amp;#x3D; i[&amp;#39;create&amp;#39;](J[&amp;#39;words&amp;#39;][&amp;#39;slice&amp;#39;](G), H * 0x4);
                        return J[&amp;#39;sigBytes&amp;#39;] &amp;#x3D; G * 0x4,
                            x[&amp;#39;create&amp;#39;](&amp;#123;
                                &amp;#39;key&amp;#39;: J,
                                &amp;#39;iv&amp;#39;: K,
                                &amp;#39;salt&amp;#39;: I
                            &amp;#125;);
                    &amp;#125;
                &amp;#125;
                    , E &amp;#x3D; g[&amp;#39;PasswordBasedCipher&amp;#39;] &amp;#x3D; A[&amp;#39;extend&amp;#39;](&amp;#123;
                    &amp;#39;cfg&amp;#39;: A[&amp;#39;cfg&amp;#39;][&amp;#39;extend&amp;#39;](&amp;#123;
                        &amp;#39;kdf&amp;#39;: D
                    &amp;#125;),
                    &amp;#39;encrypt&amp;#39;: function (F, G, H, I) &amp;#123;
                        I &amp;#x3D; this[&amp;#39;cfg&amp;#39;][&amp;#39;extend&amp;#39;](I);
                        var J &amp;#x3D; I[&amp;#39;kdf&amp;#39;][&amp;#39;execute&amp;#39;](H, F[&amp;#39;keySize&amp;#39;], F[&amp;#39;ivSize&amp;#39;]);
                        I[&amp;#39;iv&amp;#39;] &amp;#x3D; J[&amp;#39;iv&amp;#39;];
                        var K &amp;#x3D; A[&amp;#39;encrypt&amp;#39;][&amp;#39;call&amp;#39;](this, F, G, J[&amp;#39;key&amp;#39;], I);
                        return K[&amp;#39;mixIn&amp;#39;](J),
                            K;
                    &amp;#125;,
                    &amp;#39;decrypt&amp;#39;: function (F, G, H, I) &amp;#123;
                        I &amp;#x3D; this[&amp;#39;cfg&amp;#39;][&amp;#39;extend&amp;#39;](I),
                            G &amp;#x3D; this[&amp;#39;_parse&amp;#39;](G, I[&amp;#39;format&amp;#39;]);
                        var J &amp;#x3D; I[&amp;#39;kdf&amp;#39;][&amp;#39;execute&amp;#39;](H, F[&amp;#39;keySize&amp;#39;], F[&amp;#39;ivSize&amp;#39;], G[&amp;#39;salt&amp;#39;]);
                        I[&amp;#39;iv&amp;#39;] &amp;#x3D; J[&amp;#39;iv&amp;#39;];
                        var K &amp;#x3D; A[&amp;#39;decrypt&amp;#39;][&amp;#39;call&amp;#39;](this, F, G, J[&amp;#39;key&amp;#39;], I);
                        return K;
                    &amp;#125;
                &amp;#125;);
            &amp;#125;();
        &amp;#125;));
    &amp;#125;
        , &amp;#123;
            &amp;#39;.&amp;#x2F;core&amp;#39;: 0x5,
            &amp;#39;.&amp;#x2F;evpkdf&amp;#39;: 0x9
        &amp;#125;],
    0x5: [function (a, b, c) &amp;#123;
        (function (d) &amp;#123;
            (function () &amp;#123;
                ;(function (e, f) &amp;#123;
                    if (typeof c &amp;#x3D;&amp;#x3D;&amp;#x3D; &amp;#39;object&amp;#39;)
                        b[&amp;#39;exports&amp;#39;] &amp;#x3D; c &amp;#x3D; f();
                    else
                        typeof define &amp;#x3D;&amp;#x3D;&amp;#x3D; &amp;#39;function&amp;#39; &amp;amp;&amp;amp; define[&amp;#39;amd&amp;#39;] ? define([], f) : e[&amp;#39;CryptoJS&amp;#39;] &amp;#x3D; f();
                &amp;#125;(this, function () &amp;#123;
                    var e &amp;#x3D; e || function (f, g) &amp;#123;
                        var i &amp;#x3D; function () &amp;#123;
                            return 3145111887
                        &amp;#125;
                            , j &amp;#x3D; Object[&amp;#39;create&amp;#39;] || (function () &amp;#123;
                            function w() &amp;#123;
                            &amp;#125;

                            return function (x) &amp;#123;
                                var y;
                                return w[&amp;#39;prototype&amp;#39;] &amp;#x3D; x,
                                    y &amp;#x3D; new w(),
                                    w[&amp;#39;prototype&amp;#39;] &amp;#x3D; null,
                                    y;
                            &amp;#125;
                                ;
                        &amp;#125;())
                            , k &amp;#x3D; &amp;#123;&amp;#125;
                            , l &amp;#x3D; k[&amp;#39;lib&amp;#39;] &amp;#x3D; &amp;#123;&amp;#125;
                            , m &amp;#x3D; l[&amp;#39;Base&amp;#39;] &amp;#x3D; (function () &amp;#123;
                            return &amp;#123;
                                &amp;#39;extend&amp;#39;: function (w) &amp;#123;
                                    var x &amp;#x3D; j(this);
                                    return w &amp;amp;&amp;amp; x[&amp;#39;mixIn&amp;#39;](w),
                                    (!x[&amp;#39;hasOwnProperty&amp;#39;](&amp;#39;init&amp;#39;) || this[&amp;#39;init&amp;#39;] &amp;#x3D;&amp;#x3D;&amp;#x3D; x[&amp;#39;init&amp;#39;]) &amp;amp;&amp;amp; (x[&amp;#39;init&amp;#39;] &amp;#x3D; function () &amp;#123;
                                            x[&amp;#39;$super&amp;#39;][&amp;#39;init&amp;#39;][&amp;#39;apply&amp;#39;](this, arguments);
                                        &amp;#125;
                                    ),
                                        x[&amp;#39;init&amp;#39;][&amp;#39;prototype&amp;#39;] &amp;#x3D; x,
                                        x[&amp;#39;$super&amp;#39;] &amp;#x3D; this,
                                        x;
                                &amp;#125;,
                                &amp;#39;create&amp;#39;: function () &amp;#123;
                                    var w &amp;#x3D; this[&amp;#39;extend&amp;#39;]();
                                    return w[&amp;#39;init&amp;#39;][&amp;#39;apply&amp;#39;](w, arguments),
                                        w;
                                &amp;#125;,
                                &amp;#39;init&amp;#39;: function () &amp;#123;
                                &amp;#125;,
                                &amp;#39;mixIn&amp;#39;: function (w) &amp;#123;
                                    for (var x in w) &amp;#123;
                                        w[&amp;#39;hasOwnProperty&amp;#39;](x) &amp;amp;&amp;amp; (this[x] &amp;#x3D; w[x]);
                                    &amp;#125;
                                    w[&amp;#39;hasOwnProperty&amp;#39;](&amp;#39;toString&amp;#39;) &amp;amp;&amp;amp; (this[&amp;#39;toString&amp;#39;] &amp;#x3D; w[&amp;#39;toString&amp;#39;]);
                                &amp;#125;,
                                &amp;#39;clone&amp;#39;: function () &amp;#123;
                                    return this[&amp;#39;init&amp;#39;][&amp;#39;prototype&amp;#39;][&amp;#39;extend&amp;#39;](this);
                                &amp;#125;
                            &amp;#125;;
                        &amp;#125;())
                            , n &amp;#x3D; l[&amp;#39;WordArray&amp;#39;] &amp;#x3D; m[&amp;#39;extend&amp;#39;](&amp;#123;
                            &amp;#39;init&amp;#39;: function (w, x) &amp;#123;
                                w &amp;#x3D; this[&amp;#39;words&amp;#39;] &amp;#x3D; w || [],
                                    x !&amp;#x3D; g ? this[&amp;#39;sigBytes&amp;#39;] &amp;#x3D; x : this[&amp;#39;sigBytes&amp;#39;] &amp;#x3D; w[&amp;#39;length&amp;#39;] * 0x4;
                            &amp;#125;,
                            &amp;#39;toString&amp;#39;: function (w) &amp;#123;
                                return (w || p)[&amp;#39;stringify&amp;#39;](this);
                            &amp;#125;,
                            &amp;#39;concat&amp;#39;: function (w) &amp;#123;
                                var x &amp;#x3D; this[&amp;#39;words&amp;#39;]
                                    , y &amp;#x3D; w[&amp;#39;words&amp;#39;]
                                    , z &amp;#x3D; this[&amp;#39;sigBytes&amp;#39;]
                                    , A &amp;#x3D; w[&amp;#39;sigBytes&amp;#39;];
                                this[&amp;#39;clamp&amp;#39;]();
                                if (z % 0x4)
                                    for (var B &amp;#x3D; 0x0; B &amp;lt; A; B++) &amp;#123;
                                        var D &amp;#x3D; y[B &amp;gt;&amp;gt;&amp;gt; 0x2] &amp;gt;&amp;gt;&amp;gt; 0x18 - B % 0x4 * 0x8 &amp;amp; 0xff;
                                        x[z + B &amp;gt;&amp;gt;&amp;gt; 0x2] |&amp;#x3D; D &amp;lt;&amp;lt; 0x18 - (z + B) % 0x4 * 0x8;
                                    &amp;#125;
                                else
                                    for (var E &amp;#x3D; 0x0; E &amp;lt; A; E +&amp;#x3D; 0x4) &amp;#123;
                                        x[z + E &amp;gt;&amp;gt;&amp;gt; 0x2] &amp;#x3D; y[E &amp;gt;&amp;gt;&amp;gt; 0x2];
                                    &amp;#125;
                                return this[&amp;#39;sigBytes&amp;#39;] +&amp;#x3D; A,
                                    this;
                            &amp;#125;,
                            &amp;#39;clamp&amp;#39;: function () &amp;#123;
                                var w &amp;#x3D; this[&amp;#39;words&amp;#39;]
                                    , x &amp;#x3D; this[&amp;#39;sigBytes&amp;#39;];
                                w[x &amp;gt;&amp;gt;&amp;gt; 0x2] &amp;amp;&amp;#x3D; 0xffffffff &amp;lt;&amp;lt; 0x20 - x % 0x4 * 0x8,
                                    w[&amp;#39;length&amp;#39;] &amp;#x3D; f[&amp;#39;ceil&amp;#39;](x &amp;#x2F; 0x4);
                            &amp;#125;,
                            &amp;#39;clone&amp;#39;: function () &amp;#123;
                                var w &amp;#x3D; m[&amp;#39;clone&amp;#39;][&amp;#39;call&amp;#39;](this);
                                return w[&amp;#39;words&amp;#39;] &amp;#x3D; this[&amp;#39;words&amp;#39;][&amp;#39;slice&amp;#39;](0x0),
                                    w;
                            &amp;#125;,
                            &amp;#39;random&amp;#39;: function (w) &amp;#123;
                                var x &amp;#x3D; [];
                                for (var y &amp;#x3D; 0x0; y &amp;lt; w; y +&amp;#x3D; 0x4) &amp;#123;
                                    x[&amp;#39;push&amp;#39;](i());
                                &amp;#125;
                                return new n[&amp;#39;init&amp;#39;](x, w);
                            &amp;#125;
                        &amp;#125;)
                            , o &amp;#x3D; k[&amp;#39;enc&amp;#39;] &amp;#x3D; &amp;#123;&amp;#125;
                            , p &amp;#x3D; o[&amp;#39;Hex&amp;#39;] &amp;#x3D; &amp;#123;
                            &amp;#39;stringify&amp;#39;: function (w) &amp;#123;
                                var x &amp;#x3D; w[&amp;#39;words&amp;#39;]
                                    , y &amp;#x3D; w[&amp;#39;sigBytes&amp;#39;]
                                    , z &amp;#x3D; [];
                                for (var A &amp;#x3D; 0x0; A &amp;lt; y; A++) &amp;#123;
                                    var B &amp;#x3D; x[A &amp;gt;&amp;gt;&amp;gt; 0x2] &amp;gt;&amp;gt;&amp;gt; 0x18 - A % 0x4 * 0x8 &amp;amp; 0xff;
                                    z[&amp;#39;push&amp;#39;]((B &amp;gt;&amp;gt;&amp;gt; 0x4)[&amp;#39;toString&amp;#39;](0x10)),
                                        z[&amp;#39;push&amp;#39;]((B &amp;amp; 0xf)[&amp;#39;toString&amp;#39;](0x10));
                                &amp;#125;
                                return z[&amp;#39;join&amp;#39;](&amp;#39;&amp;#39;);
                            &amp;#125;,
                            &amp;#39;parse&amp;#39;: function (w) &amp;#123;
                                var x &amp;#x3D; w[&amp;#39;length&amp;#39;]
                                    , y &amp;#x3D; [];
                                for (var z &amp;#x3D; 0x0; z &amp;lt; x; z +&amp;#x3D; 0x2) &amp;#123;
                                    y[z &amp;gt;&amp;gt;&amp;gt; 0x3] |&amp;#x3D; parseInt(w[&amp;#39;substr&amp;#39;](z, 0x2), 0x10) &amp;lt;&amp;lt; 0x18 - z % 0x8 * 0x4;
                                &amp;#125;
                                return new n[&amp;#39;init&amp;#39;](y, x &amp;#x2F; 0x2);
                            &amp;#125;
                        &amp;#125;
                            , q &amp;#x3D; o[&amp;#39;Latin1&amp;#39;] &amp;#x3D; &amp;#123;
                            &amp;#39;stringify&amp;#39;: function (w) &amp;#123;
                                var x &amp;#x3D; w[&amp;#39;words&amp;#39;]
                                    , y &amp;#x3D; w[&amp;#39;sigBytes&amp;#39;]
                                    , z &amp;#x3D; [];
                                for (var A &amp;#x3D; 0x0; A &amp;lt; y; A++) &amp;#123;
                                    var B &amp;#x3D; x[A &amp;gt;&amp;gt;&amp;gt; 0x2] &amp;gt;&amp;gt;&amp;gt; 0x18 - A % 0x4 * 0x8 &amp;amp; 0xff;
                                    z[&amp;#39;push&amp;#39;](String[&amp;#39;fromCharCode&amp;#39;](B));
                                &amp;#125;
                                return z[&amp;#39;join&amp;#39;](&amp;#39;&amp;#39;);
                            &amp;#125;,
                            &amp;#39;parse&amp;#39;: function (w) &amp;#123;
                                var x &amp;#x3D; w[&amp;#39;length&amp;#39;]
                                    , y &amp;#x3D; [];
                                for (var z &amp;#x3D; 0x0; z &amp;lt; x; z++) &amp;#123;
                                    y[z &amp;gt;&amp;gt;&amp;gt; 0x2] |&amp;#x3D; (w[&amp;#39;charCodeAt&amp;#39;](z) &amp;amp; 0xff) &amp;lt;&amp;lt; 0x18 - z % 0x4 * 0x8;
                                &amp;#125;
                                return new n[&amp;#39;init&amp;#39;](y, x);
                            &amp;#125;
                        &amp;#125;
                            , r &amp;#x3D; o[&amp;#39;Utf8&amp;#39;] &amp;#x3D; &amp;#123;
                            &amp;#39;stringify&amp;#39;: function (w) &amp;#123;
                                try &amp;#123;
                                    return decodeURIComponent(escape(q[&amp;#39;stringify&amp;#39;](w)));
                                &amp;#125; catch (x) &amp;#123;
                                    throw new Error(&amp;#39;Malformed\x20UTF-8\x20data&amp;#39;);
                                &amp;#125;
                            &amp;#125;,
                            &amp;#39;parse&amp;#39;: function (w) &amp;#123;
                                return q[&amp;#39;parse&amp;#39;](unescape(encodeURIComponent(w)));
                            &amp;#125;
                        &amp;#125;
                            , s &amp;#x3D; l[&amp;#39;BufferedBlockAlgorithm&amp;#39;] &amp;#x3D; m[&amp;#39;extend&amp;#39;](&amp;#123;
                            &amp;#39;reset&amp;#39;: function () &amp;#123;
                                this[&amp;#39;_data&amp;#39;] &amp;#x3D; new n[&amp;#39;init&amp;#39;](),
                                    this[&amp;#39;_nDataBytes&amp;#39;] &amp;#x3D; 0x0;
                            &amp;#125;,
                            &amp;#39;_append&amp;#39;: function (w) &amp;#123;
                                typeof w &amp;#x3D;&amp;#x3D; &amp;#39;string&amp;#39; &amp;amp;&amp;amp; (w &amp;#x3D; r[&amp;#39;parse&amp;#39;](w)),
                                    this[&amp;#39;_data&amp;#39;][&amp;#39;concat&amp;#39;](w),
                                    this[&amp;#39;_nDataBytes&amp;#39;] +&amp;#x3D; w[&amp;#39;sigBytes&amp;#39;];
                            &amp;#125;,
                            &amp;#39;_process&amp;#39;: function (w) &amp;#123;
                                var x, y &amp;#x3D; this[&amp;#39;_data&amp;#39;], z &amp;#x3D; y[&amp;#39;words&amp;#39;], A &amp;#x3D; y[&amp;#39;sigBytes&amp;#39;], B &amp;#x3D; this[&amp;#39;blockSize&amp;#39;],
                                    D &amp;#x3D; B * 0x4, E &amp;#x3D; A &amp;#x2F; D;
                                w ? E &amp;#x3D; f[&amp;#39;ceil&amp;#39;](E) : E &amp;#x3D; f[&amp;#39;max&amp;#39;]((E | 0x0) - this[&amp;#39;_minBufferSize&amp;#39;], 0x0);
                                var F &amp;#x3D; E * B
                                    , G &amp;#x3D; f[&amp;#39;min&amp;#39;](F * 0x4, A);
                                if (F) &amp;#123;
                                    for (var H &amp;#x3D; 0x0; H &amp;lt; F; H +&amp;#x3D; B) &amp;#123;
                                        this[&amp;#39;_doProcessBlock&amp;#39;](z, H);
                                    &amp;#125;
                                    x &amp;#x3D; z[&amp;#39;splice&amp;#39;](0x0, F),
                                        y[&amp;#39;sigBytes&amp;#39;] -&amp;#x3D; G;
                                &amp;#125;
                                return new n[&amp;#39;init&amp;#39;](x, G);
                            &amp;#125;,
                            &amp;#39;clone&amp;#39;: function () &amp;#123;
                                var w &amp;#x3D; m[&amp;#39;clone&amp;#39;][&amp;#39;call&amp;#39;](this);
                                return w[&amp;#39;_data&amp;#39;] &amp;#x3D; this[&amp;#39;_data&amp;#39;][&amp;#39;clone&amp;#39;](),
                                    w;
                            &amp;#125;,
                            &amp;#39;_minBufferSize&amp;#39;: 0x0
                        &amp;#125;)
                            , t &amp;#x3D; l[&amp;#39;Hasher&amp;#39;] &amp;#x3D; s[&amp;#39;extend&amp;#39;](&amp;#123;
                            &amp;#39;cfg&amp;#39;: m[&amp;#39;extend&amp;#39;](),
                            &amp;#39;init&amp;#39;: function (w) &amp;#123;
                                this[&amp;#39;cfg&amp;#39;] &amp;#x3D; this[&amp;#39;cfg&amp;#39;][&amp;#39;extend&amp;#39;](w),
                                    this[&amp;#39;reset&amp;#39;]();
                            &amp;#125;,
                            &amp;#39;reset&amp;#39;: function () &amp;#123;
                                s[&amp;#39;reset&amp;#39;][&amp;#39;call&amp;#39;](this),
                                    this[&amp;#39;_doReset&amp;#39;]();
                            &amp;#125;,
                            &amp;#39;update&amp;#39;: function (w) &amp;#123;
                                return this[&amp;#39;_append&amp;#39;](w),
                                    this[&amp;#39;_process&amp;#39;](),
                                    this;
                            &amp;#125;,
                            &amp;#39;finalize&amp;#39;: function (w) &amp;#123;
                                w &amp;amp;&amp;amp; this[&amp;#39;_append&amp;#39;](w);
                                var x &amp;#x3D; this[&amp;#39;_doFinalize&amp;#39;]();
                                return x;
                            &amp;#125;,
                            &amp;#39;blockSize&amp;#39;: 0x200 &amp;#x2F; 0x20,
                            &amp;#39;_createHelper&amp;#39;: function (w) &amp;#123;
                                return function (x, y) &amp;#123;
                                    return new w[&amp;#39;init&amp;#39;](y)[&amp;#39;finalize&amp;#39;](x);
                                &amp;#125;
                                    ;
                            &amp;#125;,
                            &amp;#39;_createHmacHelper&amp;#39;: function (w) &amp;#123;
                                return function (x, y) &amp;#123;
                                    return new u[&amp;#39;HMAC&amp;#39;][&amp;#39;init&amp;#39;](w, y)[&amp;#39;finalize&amp;#39;](x);
                                &amp;#125;
                                    ;
                            &amp;#125;
                        &amp;#125;)
                            , u &amp;#x3D; k[&amp;#39;algo&amp;#39;] &amp;#x3D; &amp;#123;&amp;#125;;
                        return k;
                    &amp;#125;(Math);
                    return e;
                &amp;#125;));
            &amp;#125;
                [&amp;#39;call&amp;#39;](this));
        &amp;#125;
            [&amp;#39;call&amp;#39;](this, window));
    &amp;#125;
        , &amp;#123;
            &amp;#39;crypto&amp;#39;: 0x1
        &amp;#125;],
    0x6: [function (a, b, c) &amp;#123;
        ;(function (d, e) &amp;#123;
            if (typeof c &amp;#x3D;&amp;#x3D;&amp;#x3D; &amp;#39;object&amp;#39;)
                b[&amp;#39;exports&amp;#39;] &amp;#x3D; c &amp;#x3D; e(a(&amp;#39;.&amp;#x2F;core&amp;#39;));
            else
                typeof define &amp;#x3D;&amp;#x3D;&amp;#x3D; &amp;#39;function&amp;#39; &amp;amp;&amp;amp; define[&amp;#39;amd&amp;#39;] ? define([&amp;#39;.&amp;#x2F;core&amp;#39;], e) : e(d[&amp;#39;CryptoJS&amp;#39;]);
        &amp;#125;(this, function (d) &amp;#123;
            return (function () &amp;#123;
                var e &amp;#x3D; d
                    , f &amp;#x3D; e[&amp;#39;lib&amp;#39;]
                    , g &amp;#x3D; f[&amp;#39;WordArray&amp;#39;]
                    , h &amp;#x3D; e[&amp;#39;enc&amp;#39;]
                    , i &amp;#x3D; h[&amp;#39;Base64&amp;#39;] &amp;#x3D; &amp;#123;
                    &amp;#39;stringify&amp;#39;: function (k) &amp;#123;
                        var l &amp;#x3D; k[&amp;#39;words&amp;#39;]
                            , m &amp;#x3D; k[&amp;#39;sigBytes&amp;#39;]
                            , n &amp;#x3D; this[&amp;#39;_map&amp;#39;];
                        k[&amp;#39;clamp&amp;#39;]();
                        var o &amp;#x3D; [];
                        for (var p &amp;#x3D; 0x0; p &amp;lt; m; p +&amp;#x3D; 0x3) &amp;#123;
                            var q &amp;#x3D; l[p &amp;gt;&amp;gt;&amp;gt; 0x2] &amp;gt;&amp;gt;&amp;gt; 0x18 - p % 0x4 * 0x8 &amp;amp; 0xff
                                , r &amp;#x3D; l[p + 0x1 &amp;gt;&amp;gt;&amp;gt; 0x2] &amp;gt;&amp;gt;&amp;gt; 0x18 - (p + 0x1) % 0x4 * 0x8 &amp;amp; 0xff
                                , s &amp;#x3D; l[p + 0x2 &amp;gt;&amp;gt;&amp;gt; 0x2] &amp;gt;&amp;gt;&amp;gt; 0x18 - (p + 0x2) % 0x4 * 0x8 &amp;amp; 0xff
                                , t &amp;#x3D; q &amp;lt;&amp;lt; 0x10 | r &amp;lt;&amp;lt; 0x8 | s;
                            for (var u &amp;#x3D; 0x0; u &amp;lt; 0x4 &amp;amp;&amp;amp; p + u * 0.75 &amp;lt; m; u++) &amp;#123;
                                o[&amp;#39;push&amp;#39;](n[&amp;#39;charAt&amp;#39;](t &amp;gt;&amp;gt;&amp;gt; 0x6 * (0x3 - u) &amp;amp; 0x3f));
                            &amp;#125;
                        &amp;#125;
                        var v &amp;#x3D; n[&amp;#39;charAt&amp;#39;](0x40);
                        if (v)
                            while (o[&amp;#39;length&amp;#39;] % 0x4) &amp;#123;
                                o[&amp;#39;push&amp;#39;](v);
                            &amp;#125;
                        return o[&amp;#39;join&amp;#39;](&amp;#39;&amp;#39;);
                    &amp;#125;,
                    &amp;#39;parse&amp;#39;: function (k) &amp;#123;
                        var l &amp;#x3D; k[&amp;#39;length&amp;#39;]
                            , m &amp;#x3D; this[&amp;#39;_map&amp;#39;]
                            , n &amp;#x3D; this[&amp;#39;_reverseMap&amp;#39;];
                        if (!n) &amp;#123;
                            n &amp;#x3D; this[&amp;#39;_reverseMap&amp;#39;] &amp;#x3D; [];
                            for (var o &amp;#x3D; 0x0; o &amp;lt; m[&amp;#39;length&amp;#39;]; o++) &amp;#123;
                                n[m[&amp;#39;charCodeAt&amp;#39;](o)] &amp;#x3D; o;
                            &amp;#125;
                        &amp;#125;
                        var p &amp;#x3D; m[&amp;#39;charAt&amp;#39;](0x40);
                        if (p) &amp;#123;
                            var q &amp;#x3D; k[&amp;#39;indexOf&amp;#39;](p);
                            q !&amp;#x3D;&amp;#x3D; -0x1 &amp;amp;&amp;amp; (l &amp;#x3D; q);
                        &amp;#125;
                        return j(k, l, n);
                    &amp;#125;,
                    &amp;#39;_map&amp;#39;: (function () &amp;#123;
                        return &amp;#39;abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789+&amp;#x2F;&amp;#x3D;&amp;#39;;
                    &amp;#125;())
                &amp;#125;;

                function j(k, l, m) &amp;#123;
                    var n &amp;#x3D; []
                        , o &amp;#x3D; 0x0;
                    for (var p &amp;#x3D; 0x0; p &amp;lt; l; p++) &amp;#123;
                        if (p % 0x4) &amp;#123;
                            var q &amp;#x3D; m[k[&amp;#39;charCodeAt&amp;#39;](p - 0x1)] &amp;lt;&amp;lt; p % 0x4 * 0x2
                                , r &amp;#x3D; m[k[&amp;#39;charCodeAt&amp;#39;](p)] &amp;gt;&amp;gt;&amp;gt; 0x6 - p % 0x4 * 0x2
                                , s &amp;#x3D; q | r;
                            n[o &amp;gt;&amp;gt;&amp;gt; 0x2] |&amp;#x3D; s &amp;lt;&amp;lt; 0x18 - o % 0x4 * 0x8,
                                o++;
                        &amp;#125;
                    &amp;#125;
                    return g[&amp;#39;create&amp;#39;](n, o);
                &amp;#125;
            &amp;#125;()),
                d[&amp;#39;enc&amp;#39;][&amp;#39;Base64&amp;#39;];
        &amp;#125;));
    &amp;#125;
        , &amp;#123;
            &amp;#39;.&amp;#x2F;core&amp;#39;: 0x5
        &amp;#125;],
    0x7: [function (a, b, c) &amp;#123;
        ;(function (d, e) &amp;#123;
            if (typeof c &amp;#x3D;&amp;#x3D;&amp;#x3D; &amp;#39;object&amp;#39;)
                b[&amp;#39;exports&amp;#39;] &amp;#x3D; c &amp;#x3D; e(a(&amp;#39;.&amp;#x2F;core&amp;#39;));
            else
                typeof define &amp;#x3D;&amp;#x3D;&amp;#x3D; &amp;#39;function&amp;#39; &amp;amp;&amp;amp; define[&amp;#39;amd&amp;#39;] ? define([&amp;#39;.&amp;#x2F;core&amp;#39;], e) : e(d[&amp;#39;CryptoJS&amp;#39;]);
        &amp;#125;(this, function (d) &amp;#123;
            return (function () &amp;#123;
                var e &amp;#x3D; d
                    , f &amp;#x3D; e[&amp;#39;lib&amp;#39;]
                    , g &amp;#x3D; f[&amp;#39;WordArray&amp;#39;]
                    , h &amp;#x3D; e[&amp;#39;enc&amp;#39;]
                    , i &amp;#x3D; h[&amp;#39;Base64url&amp;#39;] &amp;#x3D; &amp;#123;
                    &amp;#39;stringify&amp;#39;: function (k, l &amp;#x3D; !![]) &amp;#123;
                        var m &amp;#x3D; k[&amp;#39;words&amp;#39;]
                            , n &amp;#x3D; k[&amp;#39;sigBytes&amp;#39;]
                            , o &amp;#x3D; l ? this[&amp;#39;_safe_map&amp;#39;] : this[&amp;#39;_map&amp;#39;];
                        k[&amp;#39;clamp&amp;#39;]();
                        var p &amp;#x3D; [];
                        for (var q &amp;#x3D; 0x0; q &amp;lt; n; q +&amp;#x3D; 0x3) &amp;#123;
                            var r &amp;#x3D; m[q &amp;gt;&amp;gt;&amp;gt; 0x2] &amp;gt;&amp;gt;&amp;gt; 0x18 - q % 0x4 * 0x8 &amp;amp; 0xff
                                , s &amp;#x3D; m[q + 0x1 &amp;gt;&amp;gt;&amp;gt; 0x2] &amp;gt;&amp;gt;&amp;gt; 0x18 - (q + 0x1) % 0x4 * 0x8 &amp;amp; 0xff
                                , t &amp;#x3D; m[q + 0x2 &amp;gt;&amp;gt;&amp;gt; 0x2] &amp;gt;&amp;gt;&amp;gt; 0x18 - (q + 0x2) % 0x4 * 0x8 &amp;amp; 0xff
                                , u &amp;#x3D; r &amp;lt;&amp;lt; 0x10 | s &amp;lt;&amp;lt; 0x8 | t;
                            for (var v &amp;#x3D; 0x0; v &amp;lt; 0x4 &amp;amp;&amp;amp; q + v * 0.75 &amp;lt; n; v++) &amp;#123;
                                p[&amp;#39;push&amp;#39;](o[&amp;#39;charAt&amp;#39;](u &amp;gt;&amp;gt;&amp;gt; 0x6 * (0x3 - v) &amp;amp; 0x3f));
                            &amp;#125;
                        &amp;#125;
                        var w &amp;#x3D; o[&amp;#39;charAt&amp;#39;](0x40);
                        if (w)
                            while (p[&amp;#39;length&amp;#39;] % 0x4) &amp;#123;
                                p[&amp;#39;push&amp;#39;](w);
                            &amp;#125;
                        return p[&amp;#39;join&amp;#39;](&amp;#39;&amp;#39;);
                    &amp;#125;,
                    &amp;#39;parse&amp;#39;: function (k, l &amp;#x3D; !![]) &amp;#123;
                        var m &amp;#x3D; k[&amp;#39;length&amp;#39;]
                            , n &amp;#x3D; l ? this[&amp;#39;_safe_map&amp;#39;] : this[&amp;#39;_map&amp;#39;]
                            , o &amp;#x3D; this[&amp;#39;_reverseMap&amp;#39;];
                        if (!o) &amp;#123;
                            o &amp;#x3D; this[&amp;#39;_reverseMap&amp;#39;] &amp;#x3D; [];
                            for (var p &amp;#x3D; 0x0; p &amp;lt; n[&amp;#39;length&amp;#39;]; p++) &amp;#123;
                                o[n[&amp;#39;charCodeAt&amp;#39;](p)] &amp;#x3D; p;
                            &amp;#125;
                        &amp;#125;
                        var q &amp;#x3D; n[&amp;#39;charAt&amp;#39;](0x40);
                        if (q) &amp;#123;
                            var r &amp;#x3D; k[&amp;#39;indexOf&amp;#39;](q);
                            r !&amp;#x3D;&amp;#x3D; -0x1 &amp;amp;&amp;amp; (m &amp;#x3D; r);
                        &amp;#125;
                        return j(k, m, o);
                    &amp;#125;,
                    &amp;#39;_map&amp;#39;: &amp;#39;ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+&amp;#x2F;&amp;#x3D;&amp;#39;,
                    &amp;#39;_safe_map&amp;#39;: &amp;#39;ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_&amp;#39;
                &amp;#125;;

                function j(k, l, m) &amp;#123;
                    var n &amp;#x3D; []
                        , o &amp;#x3D; 0x0;
                    for (var p &amp;#x3D; 0x0; p &amp;lt; l; p++) &amp;#123;
                        if (p % 0x4) &amp;#123;
                            var q &amp;#x3D; m[k[&amp;#39;charCodeAt&amp;#39;](p - 0x1)] &amp;lt;&amp;lt; p % 0x4 * 0x2
                                , r &amp;#x3D; m[k[&amp;#39;charCodeAt&amp;#39;](p)] &amp;gt;&amp;gt;&amp;gt; 0x6 - p % 0x4 * 0x2
                                , s &amp;#x3D; q | r;
                            n[o &amp;gt;&amp;gt;&amp;gt; 0x2] |&amp;#x3D; s &amp;lt;&amp;lt; 0x18 - o % 0x4 * 0x8,
                                o++;
                        &amp;#125;
                    &amp;#125;
                    return g[&amp;#39;create&amp;#39;](n, o);
                &amp;#125;
            &amp;#125;()),
                d[&amp;#39;enc&amp;#39;][&amp;#39;Base64url&amp;#39;];
        &amp;#125;));
    &amp;#125;
        , &amp;#123;
            &amp;#39;.&amp;#x2F;core&amp;#39;: 0x5
        &amp;#125;],
    0x8: [function (a, b, c) &amp;#123;
        ;(function (d, e) &amp;#123;
            if (typeof c &amp;#x3D;&amp;#x3D;&amp;#x3D; &amp;#39;object&amp;#39;)
                b[&amp;#39;exports&amp;#39;] &amp;#x3D; c &amp;#x3D; e(a(&amp;#39;.&amp;#x2F;core&amp;#39;));
            else
                typeof define &amp;#x3D;&amp;#x3D;&amp;#x3D; &amp;#39;function&amp;#39; &amp;amp;&amp;amp; define[&amp;#39;amd&amp;#39;] ? define([&amp;#39;.&amp;#x2F;core&amp;#39;], e) : e(d[&amp;#39;CryptoJS&amp;#39;]);
        &amp;#125;(this, function (d) &amp;#123;
            return (function () &amp;#123;
                var e &amp;#x3D; d
                    , f &amp;#x3D; e[&amp;#39;lib&amp;#39;]
                    , g &amp;#x3D; f[&amp;#39;WordArray&amp;#39;]
                    , h &amp;#x3D; e[&amp;#39;enc&amp;#39;]
                    , i &amp;#x3D; h[&amp;#39;Utf16&amp;#39;] &amp;#x3D; h[&amp;#39;Utf16BE&amp;#39;] &amp;#x3D; &amp;#123;
                    &amp;#39;stringify&amp;#39;: function (k) &amp;#123;
                        var l &amp;#x3D; k[&amp;#39;words&amp;#39;]
                            , m &amp;#x3D; k[&amp;#39;sigBytes&amp;#39;]
                            , n &amp;#x3D; [];
                        for (var o &amp;#x3D; 0x0; o &amp;lt; m; o +&amp;#x3D; 0x2) &amp;#123;
                            var p &amp;#x3D; l[o &amp;gt;&amp;gt;&amp;gt; 0x2] &amp;gt;&amp;gt;&amp;gt; 0x10 - o % 0x4 * 0x8 &amp;amp; 0xffff;
                            n[&amp;#39;push&amp;#39;](String[&amp;#39;fromCharCode&amp;#39;](p));
                        &amp;#125;
                        return n[&amp;#39;join&amp;#39;](&amp;#39;&amp;#39;);
                    &amp;#125;,
                    &amp;#39;parse&amp;#39;: function (k) &amp;#123;
                        var l &amp;#x3D; k[&amp;#39;length&amp;#39;]
                            , m &amp;#x3D; [];
                        for (var n &amp;#x3D; 0x0; n &amp;lt; l; n++) &amp;#123;
                            m[n &amp;gt;&amp;gt;&amp;gt; 0x1] |&amp;#x3D; k[&amp;#39;charCodeAt&amp;#39;](n) &amp;lt;&amp;lt; 0x10 - n % 0x2 * 0x10;
                        &amp;#125;
                        return g[&amp;#39;create&amp;#39;](m, l * 0x2);
                    &amp;#125;
                &amp;#125;;
                h[&amp;#39;Utf16LE&amp;#39;] &amp;#x3D; &amp;#123;
                    &amp;#39;stringify&amp;#39;: function (k) &amp;#123;
                        var l &amp;#x3D; k[&amp;#39;words&amp;#39;]
                            , m &amp;#x3D; k[&amp;#39;sigBytes&amp;#39;]
                            , n &amp;#x3D; [];
                        for (var o &amp;#x3D; 0x0; o &amp;lt; m; o +&amp;#x3D; 0x2) &amp;#123;
                            var p &amp;#x3D; j(l[o &amp;gt;&amp;gt;&amp;gt; 0x2] &amp;gt;&amp;gt;&amp;gt; 0x10 - o % 0x4 * 0x8 &amp;amp; 0xffff);
                            n[&amp;#39;push&amp;#39;](String[&amp;#39;fromCharCode&amp;#39;](p));
                        &amp;#125;
                        return n[&amp;#39;join&amp;#39;](&amp;#39;&amp;#39;);
                    &amp;#125;,
                    &amp;#39;parse&amp;#39;: function (k) &amp;#123;
                        var l &amp;#x3D; k[&amp;#39;length&amp;#39;]
                            , m &amp;#x3D; [];
                        for (var n &amp;#x3D; 0x0; n &amp;lt; l; n++) &amp;#123;
                            m[n &amp;gt;&amp;gt;&amp;gt; 0x1] |&amp;#x3D; j(k[&amp;#39;charCodeAt&amp;#39;](n) &amp;lt;&amp;lt; 0x10 - n % 0x2 * 0x10);
                        &amp;#125;
                        return g[&amp;#39;create&amp;#39;](m, l * 0x2);
                    &amp;#125;
                &amp;#125;;

                function j(k) &amp;#123;
                    return k &amp;lt;&amp;lt; 0x8 &amp;amp; 0xff00ff00 | k &amp;gt;&amp;gt;&amp;gt; 0x8 &amp;amp; 0xff00ff;
                &amp;#125;
            &amp;#125;()),
                d[&amp;#39;enc&amp;#39;][&amp;#39;Utf16&amp;#39;];
        &amp;#125;));
    &amp;#125;
        , &amp;#123;
            &amp;#39;.&amp;#x2F;core&amp;#39;: 0x5
        &amp;#125;],
    0x9: [function (a, b, c) &amp;#123;
        ;(function (d, e, f) &amp;#123;
            if (typeof c &amp;#x3D;&amp;#x3D;&amp;#x3D; &amp;#39;object&amp;#39;)
                b[&amp;#39;exports&amp;#39;] &amp;#x3D; c &amp;#x3D; e(a(&amp;#39;.&amp;#x2F;core&amp;#39;), a(&amp;#39;.&amp;#x2F;sha1&amp;#39;), a(&amp;#39;.&amp;#x2F;hmac&amp;#39;));
            else
                typeof define &amp;#x3D;&amp;#x3D;&amp;#x3D; &amp;#39;function&amp;#39; &amp;amp;&amp;amp; define[&amp;#39;amd&amp;#39;] ? define([&amp;#39;.&amp;#x2F;core&amp;#39;, &amp;#39;.&amp;#x2F;sha1&amp;#39;, &amp;#39;.&amp;#x2F;hmac&amp;#39;], e) : e(d[&amp;#39;CryptoJS&amp;#39;]);
        &amp;#125;(this, function (d) &amp;#123;
            return (function () &amp;#123;
                var e &amp;#x3D; d
                    , f &amp;#x3D; e[&amp;#39;lib&amp;#39;]
                    , g &amp;#x3D; f[&amp;#39;Base&amp;#39;]
                    , h &amp;#x3D; f[&amp;#39;WordArray&amp;#39;]
                    , i &amp;#x3D; e[&amp;#39;algo&amp;#39;]
                    , j &amp;#x3D; i[&amp;#39;MD5&amp;#39;]
                    , k &amp;#x3D; i[&amp;#39;EvpKDF&amp;#39;] &amp;#x3D; g[&amp;#39;extend&amp;#39;](&amp;#123;
                    &amp;#39;cfg&amp;#39;: g[&amp;#39;extend&amp;#39;](&amp;#123;
                        &amp;#39;keySize&amp;#39;: 0x80 &amp;#x2F; 0x20,
                        &amp;#39;hasher&amp;#39;: j,
                        &amp;#39;iterations&amp;#39;: 0x1
                    &amp;#125;),
                    &amp;#39;init&amp;#39;: function (l) &amp;#123;
                        this[&amp;#39;cfg&amp;#39;] &amp;#x3D; this[&amp;#39;cfg&amp;#39;][&amp;#39;extend&amp;#39;](l);
                    &amp;#125;,
                    &amp;#39;compute&amp;#39;: function (l, m) &amp;#123;
                        var n, o &amp;#x3D; this[&amp;#39;cfg&amp;#39;], p &amp;#x3D; o[&amp;#39;hasher&amp;#39;][&amp;#39;create&amp;#39;](), q &amp;#x3D; h[&amp;#39;create&amp;#39;](), r &amp;#x3D; q[&amp;#39;words&amp;#39;],
                            s &amp;#x3D; o[&amp;#39;keySize&amp;#39;], t &amp;#x3D; o[&amp;#39;iterations&amp;#39;];
                        while (r[&amp;#39;length&amp;#39;] &amp;lt; s) &amp;#123;
                            n &amp;amp;&amp;amp; p[&amp;#39;update&amp;#39;](n);
                            n &amp;#x3D; p[&amp;#39;update&amp;#39;](l)[&amp;#39;finalize&amp;#39;](m),
                                p[&amp;#39;reset&amp;#39;]();
                            for (var u &amp;#x3D; 0x1; u &amp;lt; t; u++) &amp;#123;
                                n &amp;#x3D; p[&amp;#39;finalize&amp;#39;](n),
                                    p[&amp;#39;reset&amp;#39;]();
                            &amp;#125;
                            q[&amp;#39;concat&amp;#39;](n);
                        &amp;#125;
                        return q[&amp;#39;sigBytes&amp;#39;] &amp;#x3D; s * 0x4,
                            q;
                    &amp;#125;
                &amp;#125;);
                e[&amp;#39;EvpKDF&amp;#39;] &amp;#x3D; function (l, m, n) &amp;#123;
                    return k[&amp;#39;create&amp;#39;](n)[&amp;#39;compute&amp;#39;](l, m);
                &amp;#125;
                ;
            &amp;#125;()),
                d[&amp;#39;EvpKDF&amp;#39;];
        &amp;#125;));
    &amp;#125;
        , &amp;#123;
            &amp;#39;.&amp;#x2F;core&amp;#39;: 0x5,
            &amp;#39;.&amp;#x2F;hmac&amp;#39;: 0xb,
            &amp;#39;.&amp;#x2F;sha1&amp;#39;: 0x1e
        &amp;#125;],
    0xa: [function (a, b, c) &amp;#123;
        ;(function (d, e, f) &amp;#123;
            if (typeof c &amp;#x3D;&amp;#x3D;&amp;#x3D; &amp;#39;object&amp;#39;)
                b[&amp;#39;exports&amp;#39;] &amp;#x3D; c &amp;#x3D; e(a(&amp;#39;.&amp;#x2F;core&amp;#39;), a(&amp;#39;.&amp;#x2F;cipher-core&amp;#39;));
            else
                typeof define &amp;#x3D;&amp;#x3D;&amp;#x3D; &amp;#39;function&amp;#39; &amp;amp;&amp;amp; define[&amp;#39;amd&amp;#39;] ? define([&amp;#39;.&amp;#x2F;core&amp;#39;, &amp;#39;.&amp;#x2F;cipher-core&amp;#39;], e) : e(d[&amp;#39;CryptoJS&amp;#39;]);
        &amp;#125;(this, function (d) &amp;#123;
            return function (e) &amp;#123;
                var f &amp;#x3D; d
                    , g &amp;#x3D; f[&amp;#39;lib&amp;#39;]
                    , h &amp;#x3D; g[&amp;#39;CipherParams&amp;#39;]
                    , i &amp;#x3D; f[&amp;#39;enc&amp;#39;]
                    , j &amp;#x3D; i[&amp;#39;Hex&amp;#39;]
                    , k &amp;#x3D; f[&amp;#39;format&amp;#39;]
                    , l &amp;#x3D; k[&amp;#39;Hex&amp;#39;] &amp;#x3D; &amp;#123;
                    &amp;#39;stringify&amp;#39;: function (m) &amp;#123;
                        return m[&amp;#39;ciphertext&amp;#39;][&amp;#39;toString&amp;#39;](j);
                    &amp;#125;,
                    &amp;#39;parse&amp;#39;: function (m) &amp;#123;
                        var n &amp;#x3D; j[&amp;#39;parse&amp;#39;](m);
                        return h[&amp;#39;create&amp;#39;](&amp;#123;
                            &amp;#39;ciphertext&amp;#39;: n
                        &amp;#125;);
                    &amp;#125;
                &amp;#125;;
            &amp;#125;(),
                d[&amp;#39;format&amp;#39;][&amp;#39;Hex&amp;#39;];
        &amp;#125;));
    &amp;#125;
        , &amp;#123;
            &amp;#39;.&amp;#x2F;cipher-core&amp;#39;: 0x4,
            &amp;#39;.&amp;#x2F;core&amp;#39;: 0x5
        &amp;#125;],
    0xb: [function (a, b, c) &amp;#123;
        ;(function (d, e) &amp;#123;
            if (typeof c &amp;#x3D;&amp;#x3D;&amp;#x3D; &amp;#39;object&amp;#39;)
                b[&amp;#39;exports&amp;#39;] &amp;#x3D; c &amp;#x3D; e(a(&amp;#39;.&amp;#x2F;core&amp;#39;));
            else
                typeof define &amp;#x3D;&amp;#x3D;&amp;#x3D; &amp;#39;function&amp;#39; &amp;amp;&amp;amp; define[&amp;#39;amd&amp;#39;] ? define([&amp;#39;.&amp;#x2F;core&amp;#39;], e) : e(d[&amp;#39;CryptoJS&amp;#39;]);
        &amp;#125;(this, function (d) &amp;#123;
            (function () &amp;#123;
                var e &amp;#x3D; d
                    , f &amp;#x3D; e[&amp;#39;lib&amp;#39;]
                    , g &amp;#x3D; f[&amp;#39;Base&amp;#39;]
                    , h &amp;#x3D; e[&amp;#39;enc&amp;#39;]
                    , i &amp;#x3D; h[&amp;#39;Utf8&amp;#39;]
                    , j &amp;#x3D; e[&amp;#39;algo&amp;#39;]
                    , k &amp;#x3D; j[&amp;#39;HMAC&amp;#39;] &amp;#x3D; g[&amp;#39;extend&amp;#39;](&amp;#123;
                    &amp;#39;init&amp;#39;: function (l, m) &amp;#123;
                        l &amp;#x3D; this[&amp;#39;_hasher&amp;#39;] &amp;#x3D; new l[&amp;#39;init&amp;#39;]();
                        typeof m &amp;#x3D;&amp;#x3D; &amp;#39;string&amp;#39; &amp;amp;&amp;amp; (m &amp;#x3D; i[&amp;#39;parse&amp;#39;](m));
                        var n &amp;#x3D; l[&amp;#39;blockSize&amp;#39;]
                            , o &amp;#x3D; n * 0x4;
                        m[&amp;#39;sigBytes&amp;#39;] &amp;gt; o &amp;amp;&amp;amp; (m &amp;#x3D; l[&amp;#39;finalize&amp;#39;](m));
                        m[&amp;#39;clamp&amp;#39;]();
                        var p &amp;#x3D; this[&amp;#39;_oKey&amp;#39;] &amp;#x3D; m[&amp;#39;clone&amp;#39;]()
                            , q &amp;#x3D; this[&amp;#39;_iKey&amp;#39;] &amp;#x3D; m[&amp;#39;clone&amp;#39;]()
                            , r &amp;#x3D; p[&amp;#39;words&amp;#39;]
                            , s &amp;#x3D; q[&amp;#39;words&amp;#39;];
                        for (var t &amp;#x3D; 0x0; t &amp;lt; n; t++) &amp;#123;
                            r[t] ^&amp;#x3D; 0x5c5c5c5c,
                                s[t] ^&amp;#x3D; 0x36363636;
                        &amp;#125;
                        p[&amp;#39;sigBytes&amp;#39;] &amp;#x3D; q[&amp;#39;sigBytes&amp;#39;] &amp;#x3D; o,
                            this[&amp;#39;reset&amp;#39;]();
                    &amp;#125;,
                    &amp;#39;reset&amp;#39;: function () &amp;#123;
                        var l &amp;#x3D; this[&amp;#39;_hasher&amp;#39;];
                        l[&amp;#39;reset&amp;#39;](),
                            l[&amp;#39;update&amp;#39;](this[&amp;#39;_iKey&amp;#39;]);
                    &amp;#125;,
                    &amp;#39;update&amp;#39;: function (l) &amp;#123;
                        return this[&amp;#39;_hasher&amp;#39;][&amp;#39;update&amp;#39;](l),
                            this;
                    &amp;#125;,
                    &amp;#39;finalize&amp;#39;: function (l) &amp;#123;
                        var m &amp;#x3D; this[&amp;#39;_hasher&amp;#39;]
                            , n &amp;#x3D; m[&amp;#39;finalize&amp;#39;](l);
                        m[&amp;#39;reset&amp;#39;]();
                        var o &amp;#x3D; m[&amp;#39;finalize&amp;#39;](this[&amp;#39;_oKey&amp;#39;][&amp;#39;clone&amp;#39;]()[&amp;#39;concat&amp;#39;](n));
                        return o;
                    &amp;#125;
                &amp;#125;);
            &amp;#125;());
        &amp;#125;));
    &amp;#125;
        , &amp;#123;
            &amp;#39;.&amp;#x2F;core&amp;#39;: 0x5
        &amp;#125;],
    0xc: [function (a, b, c) &amp;#123;
        ;(function (d, e, f) &amp;#123;
            if (typeof c &amp;#x3D;&amp;#x3D;&amp;#x3D; &amp;#39;object&amp;#39;)
                b[&amp;#39;exports&amp;#39;] &amp;#x3D; c &amp;#x3D; e(a(&amp;#39;.&amp;#x2F;core&amp;#39;), a(&amp;#39;.&amp;#x2F;x64-core&amp;#39;), a(&amp;#39;.&amp;#x2F;lib-typedarrays&amp;#39;), a(&amp;#39;.&amp;#x2F;enc-utf16&amp;#39;), a(&amp;#39;.&amp;#x2F;enc-base64&amp;#39;), a(&amp;#39;.&amp;#x2F;enc-base64url&amp;#39;), a(&amp;#39;.&amp;#x2F;md5&amp;#39;), a(&amp;#39;.&amp;#x2F;sha1&amp;#39;), a(&amp;#39;.&amp;#x2F;sha256&amp;#39;), a(&amp;#39;.&amp;#x2F;sha224&amp;#39;), a(&amp;#39;.&amp;#x2F;sha512&amp;#39;), a(&amp;#39;.&amp;#x2F;sha384&amp;#39;), a(&amp;#39;.&amp;#x2F;sha3&amp;#39;), a(&amp;#39;.&amp;#x2F;ripemd160&amp;#39;), a(&amp;#39;.&amp;#x2F;hmac&amp;#39;), a(&amp;#39;.&amp;#x2F;pbkdf2&amp;#39;), a(&amp;#39;.&amp;#x2F;evpkdf&amp;#39;), a(&amp;#39;.&amp;#x2F;cipher-core&amp;#39;), a(&amp;#39;.&amp;#x2F;mode-cfb&amp;#39;), a(&amp;#39;.&amp;#x2F;mode-ctr&amp;#39;), a(&amp;#39;.&amp;#x2F;mode-ctr-gladman&amp;#39;), a(&amp;#39;.&amp;#x2F;mode-ofb&amp;#39;), a(&amp;#39;.&amp;#x2F;mode-ecb&amp;#39;), a(&amp;#39;.&amp;#x2F;pad-ansix923&amp;#39;), a(&amp;#39;.&amp;#x2F;pad-iso10126&amp;#39;), a(&amp;#39;.&amp;#x2F;pad-iso97971&amp;#39;), a(&amp;#39;.&amp;#x2F;pad-zeropadding&amp;#39;), a(&amp;#39;.&amp;#x2F;pad-nopadding&amp;#39;), a(&amp;#39;.&amp;#x2F;format-hex&amp;#39;), a(&amp;#39;.&amp;#x2F;aes&amp;#39;), a(&amp;#39;.&amp;#x2F;tripledes&amp;#39;), a(&amp;#39;.&amp;#x2F;rc4&amp;#39;), a(&amp;#39;.&amp;#x2F;rabbit&amp;#39;), a(&amp;#39;.&amp;#x2F;rabbit-legacy&amp;#39;));
            else
                typeof define &amp;#x3D;&amp;#x3D;&amp;#x3D; &amp;#39;function&amp;#39; &amp;amp;&amp;amp; define[&amp;#39;amd&amp;#39;] ? define([&amp;#39;.&amp;#x2F;core&amp;#39;, &amp;#39;.&amp;#x2F;x64-core&amp;#39;, &amp;#39;.&amp;#x2F;lib-typedarrays&amp;#39;, &amp;#39;.&amp;#x2F;enc-utf16&amp;#39;, &amp;#39;.&amp;#x2F;enc-base64&amp;#39;, &amp;#39;.&amp;#x2F;enc-base64url&amp;#39;, &amp;#39;.&amp;#x2F;md5&amp;#39;, &amp;#39;.&amp;#x2F;sha1&amp;#39;, &amp;#39;.&amp;#x2F;sha256&amp;#39;, &amp;#39;.&amp;#x2F;sha224&amp;#39;, &amp;#39;.&amp;#x2F;sha512&amp;#39;, &amp;#39;.&amp;#x2F;sha384&amp;#39;, &amp;#39;.&amp;#x2F;sha3&amp;#39;, &amp;#39;.&amp;#x2F;ripemd160&amp;#39;, &amp;#39;.&amp;#x2F;hmac&amp;#39;, &amp;#39;.&amp;#x2F;pbkdf2&amp;#39;, &amp;#39;.&amp;#x2F;evpkdf&amp;#39;, &amp;#39;.&amp;#x2F;cipher-core&amp;#39;, &amp;#39;.&amp;#x2F;mode-cfb&amp;#39;, &amp;#39;.&amp;#x2F;mode-ctr&amp;#39;, &amp;#39;.&amp;#x2F;mode-ctr-gladman&amp;#39;, &amp;#39;.&amp;#x2F;mode-ofb&amp;#39;, &amp;#39;.&amp;#x2F;mode-ecb&amp;#39;, &amp;#39;.&amp;#x2F;pad-ansix923&amp;#39;, &amp;#39;.&amp;#x2F;pad-iso10126&amp;#39;, &amp;#39;.&amp;#x2F;pad-iso97971&amp;#39;, &amp;#39;.&amp;#x2F;pad-zeropadding&amp;#39;, &amp;#39;.&amp;#x2F;pad-nopadding&amp;#39;, &amp;#39;.&amp;#x2F;format-hex&amp;#39;, &amp;#39;.&amp;#x2F;aes&amp;#39;, &amp;#39;.&amp;#x2F;tripledes&amp;#39;, &amp;#39;.&amp;#x2F;rc4&amp;#39;, &amp;#39;.&amp;#x2F;rabbit&amp;#39;, &amp;#39;.&amp;#x2F;rabbit-legacy&amp;#39;], e) : d[&amp;#39;CryptoJS&amp;#39;] &amp;#x3D; e(d[&amp;#39;CryptoJS&amp;#39;]);
        &amp;#125;(this, function (d) &amp;#123;
            return d;
        &amp;#125;));
    &amp;#125;
        , &amp;#123;
            &amp;#39;.&amp;#x2F;aes&amp;#39;: 0x3,
            &amp;#39;.&amp;#x2F;cipher-core&amp;#39;: 0x4,
            &amp;#39;.&amp;#x2F;core&amp;#39;: 0x5,
            &amp;#39;.&amp;#x2F;enc-base64&amp;#39;: 0x6,
            &amp;#39;.&amp;#x2F;enc-base64url&amp;#39;: 0x7,
            &amp;#39;.&amp;#x2F;enc-utf16&amp;#39;: 0x8,
            &amp;#39;.&amp;#x2F;evpkdf&amp;#39;: 0x9,
            &amp;#39;.&amp;#x2F;format-hex&amp;#39;: 0xa,
            &amp;#39;.&amp;#x2F;hmac&amp;#39;: 0xb,
            &amp;#39;.&amp;#x2F;lib-typedarrays&amp;#39;: 0xd,
            &amp;#39;.&amp;#x2F;md5&amp;#39;: 0xe,
            &amp;#39;.&amp;#x2F;mode-cfb&amp;#39;: 0xf,
            &amp;#39;.&amp;#x2F;mode-ctr&amp;#39;: 0x11,
            &amp;#39;.&amp;#x2F;mode-ctr-gladman&amp;#39;: 0x10,
            &amp;#39;.&amp;#x2F;mode-ecb&amp;#39;: 0x12,
            &amp;#39;.&amp;#x2F;mode-ofb&amp;#39;: 0x13,
            &amp;#39;.&amp;#x2F;pad-ansix923&amp;#39;: 0x14,
            &amp;#39;.&amp;#x2F;pad-iso10126&amp;#39;: 0x15,
            &amp;#39;.&amp;#x2F;pad-iso97971&amp;#39;: 0x16,
            &amp;#39;.&amp;#x2F;pad-nopadding&amp;#39;: 0x17,
            &amp;#39;.&amp;#x2F;pad-zeropadding&amp;#39;: 0x18,
            &amp;#39;.&amp;#x2F;pbkdf2&amp;#39;: 0x19,
            &amp;#39;.&amp;#x2F;rabbit&amp;#39;: 0x1b,
            &amp;#39;.&amp;#x2F;rabbit-legacy&amp;#39;: 0x1a,
            &amp;#39;.&amp;#x2F;rc4&amp;#39;: 0x1c,
            &amp;#39;.&amp;#x2F;ripemd160&amp;#39;: 0x1d,
            &amp;#39;.&amp;#x2F;sha1&amp;#39;: 0x1e,
            &amp;#39;.&amp;#x2F;sha224&amp;#39;: 0x1f,
            &amp;#39;.&amp;#x2F;sha256&amp;#39;: 0x20,
            &amp;#39;.&amp;#x2F;sha3&amp;#39;: 0x21,
            &amp;#39;.&amp;#x2F;sha384&amp;#39;: 0x22,
            &amp;#39;.&amp;#x2F;sha512&amp;#39;: 0x23,
            &amp;#39;.&amp;#x2F;tripledes&amp;#39;: 0x24,
            &amp;#39;.&amp;#x2F;x64-core&amp;#39;: 0x25
        &amp;#125;],
    0xd: [function (a, b, c) &amp;#123;
        ;(function (d, e) &amp;#123;
            if (typeof c &amp;#x3D;&amp;#x3D;&amp;#x3D; &amp;#39;object&amp;#39;)
                b[&amp;#39;exports&amp;#39;] &amp;#x3D; c &amp;#x3D; e(a(&amp;#39;.&amp;#x2F;core&amp;#39;));
            else
                typeof define &amp;#x3D;&amp;#x3D;&amp;#x3D; &amp;#39;function&amp;#39; &amp;amp;&amp;amp; define[&amp;#39;amd&amp;#39;] ? define([&amp;#39;.&amp;#x2F;core&amp;#39;], e) : e(d[&amp;#39;CryptoJS&amp;#39;]);
        &amp;#125;(this, function (d) &amp;#123;
            return (function () &amp;#123;
                if (typeof ArrayBuffer !&amp;#x3D; &amp;#39;function&amp;#39;)
                    return;
                var e &amp;#x3D; d
                    , f &amp;#x3D; e[&amp;#39;lib&amp;#39;]
                    , g &amp;#x3D; f[&amp;#39;WordArray&amp;#39;]
                    , h &amp;#x3D; g[&amp;#39;init&amp;#39;]
                    , i &amp;#x3D; g[&amp;#39;init&amp;#39;] &amp;#x3D; function (j) &amp;#123;
                        j instanceof ArrayBuffer &amp;amp;&amp;amp; (j &amp;#x3D; new Uint8Array(j));
                        (j instanceof Int8Array || typeof Uint8ClampedArray !&amp;#x3D;&amp;#x3D; &amp;#39;undefined&amp;#39; &amp;amp;&amp;amp; j instanceof Uint8ClampedArray || j instanceof Int16Array || j instanceof Uint16Array || j instanceof Int32Array || j instanceof Uint32Array || j instanceof Float32Array || j instanceof Float64Array) &amp;amp;&amp;amp; (j &amp;#x3D; new Uint8Array(j[&amp;#39;buffer&amp;#39;], j[&amp;#39;byteOffset&amp;#39;], j[&amp;#39;byteLength&amp;#39;]));
                        if (j instanceof Uint8Array) &amp;#123;
                            var k &amp;#x3D; j[&amp;#39;byteLength&amp;#39;]
                                , l &amp;#x3D; [];
                            for (var m &amp;#x3D; 0x0; m &amp;lt; k; m++) &amp;#123;
                                l[m &amp;gt;&amp;gt;&amp;gt; 0x2] |&amp;#x3D; j[m] &amp;lt;&amp;lt; 0x18 - m % 0x4 * 0x8;
                            &amp;#125;
                            h[&amp;#39;call&amp;#39;](this, l, k);
                        &amp;#125; else
                            h[&amp;#39;apply&amp;#39;](this, arguments);
                    &amp;#125;
                ;
                i[&amp;#39;prototype&amp;#39;] &amp;#x3D; g;
            &amp;#125;()),
                d[&amp;#39;lib&amp;#39;][&amp;#39;WordArray&amp;#39;];
        &amp;#125;));
    &amp;#125;
        , &amp;#123;
            &amp;#39;.&amp;#x2F;core&amp;#39;: 0x5
        &amp;#125;],
    0xe: [function (a, b, c) &amp;#123;
        ;(function (d, e) &amp;#123;
            if (typeof c &amp;#x3D;&amp;#x3D;&amp;#x3D; &amp;#39;object&amp;#39;)
                b[&amp;#39;exports&amp;#39;] &amp;#x3D; c &amp;#x3D; e(a(&amp;#39;.&amp;#x2F;core&amp;#39;));
            else
                typeof define &amp;#x3D;&amp;#x3D;&amp;#x3D; &amp;#39;function&amp;#39; &amp;amp;&amp;amp; define[&amp;#39;amd&amp;#39;] ? define([&amp;#39;.&amp;#x2F;core&amp;#39;], e) : e(d[&amp;#39;CryptoJS&amp;#39;]);
        &amp;#125;(this, function (d) &amp;#123;
            return function (e) &amp;#123;
                var f &amp;#x3D; d
                    , g &amp;#x3D; f[&amp;#39;lib&amp;#39;]
                    , h &amp;#x3D; g[&amp;#39;WordArray&amp;#39;]
                    , i &amp;#x3D; g[&amp;#39;Hasher&amp;#39;]
                    , j &amp;#x3D; f[&amp;#39;algo&amp;#39;]
                    , k &amp;#x3D; [];
                (function () &amp;#123;
                    for (var q &amp;#x3D; 0x0; q &amp;lt; 0x40; q++) &amp;#123;
                        k[q] &amp;#x3D; e[&amp;#39;abs&amp;#39;](e[&amp;#39;sin&amp;#39;](q + 0x1)) * 0x100000000 | 0x0;
                    &amp;#125;
                &amp;#125;());
                var l &amp;#x3D; j[&amp;#39;MD5&amp;#39;] &amp;#x3D; i[&amp;#39;extend&amp;#39;](&amp;#123;
                    &amp;#39;_doReset&amp;#39;: function () &amp;#123;
                        try &amp;#123;
                            RCON[0x0][0x0][0x0],
                                this[&amp;#39;_hash&amp;#39;] &amp;#x3D; new h[&amp;#39;init&amp;#39;]([0x67452002, 0xefcdab80, 0x98badcfe, 0x10325476]);
                        &amp;#125; catch (q) &amp;#123;
                            this[&amp;#39;_hash&amp;#39;] &amp;#x3D; new h[&amp;#39;init&amp;#39;]([0x67452301, 0xefcdab80, 0x98badcfe, 0x10325476]);
                        &amp;#125;
                    &amp;#125;,
                    &amp;#39;_doProcessBlock&amp;#39;: function (q, r) &amp;#123;
                        for (var s &amp;#x3D; 0x0; s &amp;lt; 0x10; s++) &amp;#123;
                            var t &amp;#x3D; r + s
                                , u &amp;#x3D; q[t];
                            q[t] &amp;#x3D; (u &amp;lt;&amp;lt; 0x8 | u &amp;gt;&amp;gt;&amp;gt; 0x18) &amp;amp; 0xff00ff | (u &amp;lt;&amp;lt; 0x18 | u &amp;gt;&amp;gt;&amp;gt; 0x8) &amp;amp; 0xff00ff00;
                        &amp;#125;
                        var v &amp;#x3D; this[&amp;#39;_hash&amp;#39;][&amp;#39;words&amp;#39;]
                            , w &amp;#x3D; q[r + 0x0]
                            , x &amp;#x3D; q[r + 0x1]
                            , y &amp;#x3D; q[r + 0x2]
                            , z &amp;#x3D; q[r + 0x3]
                            , A &amp;#x3D; q[r + 0x4]
                            , B &amp;#x3D; q[r + 0x5]
                            , D &amp;#x3D; q[r + 0x6]
                            , E &amp;#x3D; q[r + 0x7]
                            , F &amp;#x3D; q[r + 0x8]
                            , G &amp;#x3D; q[r + 0x9]
                            , I &amp;#x3D; q[r + 0xa]
                            , J &amp;#x3D; q[r + 0xb]
                            , K &amp;#x3D; q[r + 0xc]
                            , L &amp;#x3D; q[r + 0xd]
                            , N &amp;#x3D; q[r + 0xe]
                            , O &amp;#x3D; q[r + 0xf]
                            , P &amp;#x3D; v[0x0]
                            , Q &amp;#x3D; v[0x1]
                            , R &amp;#x3D; v[0x2]
                            , S &amp;#x3D; v[0x3];
                        P &amp;#x3D; m(P, Q, R, S, w, 0x7, k[0x0]),
                            S &amp;#x3D; m(S, P, Q, R, x, 0xc, k[0x1]),
                            R &amp;#x3D; m(R, S, P, Q, y, 0x11, k[0x2]),
                            Q &amp;#x3D; m(Q, R, S, P, z, 0x16, k[0x3]),
                            P &amp;#x3D; m(P, Q, R, S, A, 0x7, k[0x4]),
                            S &amp;#x3D; m(S, P, Q, R, B, 0xc, k[0x5]),
                            R &amp;#x3D; m(R, S, P, Q, D, 0x11, k[0x6]),
                            Q &amp;#x3D; m(Q, R, S, P, E, 0x16, k[0x7]),
                            P &amp;#x3D; m(P, Q, R, S, F, 0x7, k[0x8]),
                            S &amp;#x3D; m(S, P, Q, R, G, 0xc, k[0x9]),
                            R &amp;#x3D; m(R, S, P, Q, I, 0x11, k[0xa]),
                            Q &amp;#x3D; m(Q, R, S, P, J, 0x16, k[0xb]),
                            P &amp;#x3D; m(P, Q, R, S, K, 0x7, k[0xc]),
                            S &amp;#x3D; m(S, P, Q, R, L, 0xc, k[0xd]),
                            R &amp;#x3D; m(R, S, P, Q, N, 0x11, k[0xe]),
                            Q &amp;#x3D; m(Q, R, S, P, O, 0x16, k[0xf]),
                            P &amp;#x3D; n(P, Q, R, S, x, 0x5, k[0x10]),
                            S &amp;#x3D; n(S, P, Q, R, D, 0x9, k[0x11]),
                            R &amp;#x3D; n(R, S, P, Q, J, 0xe, k[0x12]),
                            Q &amp;#x3D; n(Q, R, S, P, w, 0x14, k[0x13]),
                            P &amp;#x3D; n(P, Q, R, S, B, 0x5, k[0x14]),
                            S &amp;#x3D; n(S, P, Q, R, I, 0x9, k[0x15]),
                            R &amp;#x3D; n(R, S, P, Q, O, 0xe, k[0x16]),
                            Q &amp;#x3D; n(Q, R, S, P, A, 0x14, k[0x17]),
                            P &amp;#x3D; n(P, Q, R, S, G, 0x5, k[0x18]),
                            S &amp;#x3D; n(S, P, Q, R, N, 0x9, k[0x19]),
                            R &amp;#x3D; n(R, S, P, Q, z, 0xe, k[0x1a]),
                            Q &amp;#x3D; n(Q, R, S, P, F, 0x14, k[0x1b]),
                            P &amp;#x3D; n(P, Q, R, S, L, 0x5, k[0x1c]),
                            S &amp;#x3D; n(S, P, Q, R, y, 0x9, k[0x1d]),
                            R &amp;#x3D; n(R, S, P, Q, E, 0xe, k[0x1e]),
                            Q &amp;#x3D; n(Q, R, S, P, K, 0x14, k[0x1f]),
                            P &amp;#x3D; o(P, Q, R, S, B, 0x4, k[0x20]),
                            S &amp;#x3D; o(S, P, Q, R, F, 0xb, k[0x21]),
                            R &amp;#x3D; o(R, S, P, Q, J, 0x10, k[0x22]),
                            Q &amp;#x3D; o(Q, R, S, P, N, 0x17, k[0x23]),
                            P &amp;#x3D; o(P, Q, R, S, x, 0x4, k[0x24]),
                            S &amp;#x3D; o(S, P, Q, R, A, 0xb, k[0x25]),
                            R &amp;#x3D; o(R, S, P, Q, E, 0x10, k[0x26]),
                            Q &amp;#x3D; o(Q, R, S, P, I, 0x17, k[0x27]),
                            P &amp;#x3D; o(P, Q, R, S, L, 0x4, k[0x28]),
                            S &amp;#x3D; o(S, P, Q, R, w, 0xb, k[0x29]),
                            R &amp;#x3D; o(R, S, P, Q, z, 0x10, k[0x2a]),
                            Q &amp;#x3D; o(Q, R, S, P, D, 0x17, k[0x2b]),
                            P &amp;#x3D; o(P, Q, R, S, G, 0x4, k[0x2c]),
                            S &amp;#x3D; o(S, P, Q, R, K, 0xb, k[0x2d]),
                            R &amp;#x3D; o(R, S, P, Q, O, 0x10, k[0x2e]),
                            Q &amp;#x3D; o(Q, R, S, P, y, 0x17, k[0x2f]),
                            P &amp;#x3D; p(P, Q, R, S, w, 0x6, k[0x30]),
                            S &amp;#x3D; p(S, P, Q, R, E, 0xa, k[0x31]),
                            R &amp;#x3D; p(R, S, P, Q, N, 0xf, k[0x32]),
                            Q &amp;#x3D; p(Q, R, S, P, B, 0x15, k[0x33]),
                            P &amp;#x3D; p(P, Q, R, S, K, 0x6, k[0x34]),
                            S &amp;#x3D; p(S, P, Q, R, z, 0xa, k[0x35]),
                            R &amp;#x3D; p(R, S, P, Q, I, 0xf, k[0x36]),
                            Q &amp;#x3D; p(Q, R, S, P, x, 0x15, k[0x37]),
                            P &amp;#x3D; p(P, Q, R, S, F, 0x6, k[0x38]),
                            S &amp;#x3D; p(S, P, Q, R, O, 0xa, k[0x39]),
                            R &amp;#x3D; p(R, S, P, Q, D, 0xf, k[0x3a]);
                        Q &amp;#x3D; p(Q, R, S, P, L, 0x12, k[0x3b]);
                        ;P &amp;#x3D; p(P, Q, R, S, A, 0x6, k[0x3c]),
                            S &amp;#x3D; p(S, P, Q, R, J, 0xa, k[0x3d]),
                            R &amp;#x3D; p(R, S, P, Q, y, 0xf, k[0x3e]),
                            Q &amp;#x3D; p(Q, R, S, P, G, 0x15, k[0x3f]),
                            v[0x0] &amp;#x3D; v[0x0] + P | 0x0,
                            v[0x1] &amp;#x3D; v[0x1] + Q | 0x0,
                            v[0x2] &amp;#x3D; v[0x2] + R | 0x0,
                            v[0x3] &amp;#x3D; v[0x3] + S | 0x0;
                    &amp;#125;,
                    &amp;#39;_doFinalize&amp;#39;: function () &amp;#123;
                        var q &amp;#x3D; this[&amp;#39;_data&amp;#39;]
                            , r &amp;#x3D; q[&amp;#39;words&amp;#39;]
                            , s &amp;#x3D; this[&amp;#39;_nDataBytes&amp;#39;] * 0x8
                            , t &amp;#x3D; q[&amp;#39;sigBytes&amp;#39;] * 0x8;
                        r[t &amp;gt;&amp;gt;&amp;gt; 0x5] |&amp;#x3D; 0x80 &amp;lt;&amp;lt; 0x18 - t % 0x20;
                        var u &amp;#x3D; e[&amp;#39;floor&amp;#39;](s &amp;#x2F; 0x100000000)
                            , v &amp;#x3D; s;
                        r[(t + 0x40 &amp;gt;&amp;gt;&amp;gt; 0x9 &amp;lt;&amp;lt; 0x4) + 0xf] &amp;#x3D; (u &amp;lt;&amp;lt; 0x8 | u &amp;gt;&amp;gt;&amp;gt; 0x18) &amp;amp; 0xff00ff | (u &amp;lt;&amp;lt; 0x18 | u &amp;gt;&amp;gt;&amp;gt; 0x8) &amp;amp; 0xff00ff00,
                            r[(t + 0x40 &amp;gt;&amp;gt;&amp;gt; 0x9 &amp;lt;&amp;lt; 0x4) + 0xe] &amp;#x3D; (v &amp;lt;&amp;lt; 0x8 | v &amp;gt;&amp;gt;&amp;gt; 0x18) &amp;amp; 0xff00ff | (v &amp;lt;&amp;lt; 0x18 | v &amp;gt;&amp;gt;&amp;gt; 0x8) &amp;amp; 0xff00ff00,
                            q[&amp;#39;sigBytes&amp;#39;] &amp;#x3D; (r[&amp;#39;length&amp;#39;] + 0x1) * 0x4,
                            this[&amp;#39;_process&amp;#39;]();
                        var w &amp;#x3D; this[&amp;#39;_hash&amp;#39;]
                            , x &amp;#x3D; w[&amp;#39;words&amp;#39;];
                        for (var y &amp;#x3D; 0x0; y &amp;lt; 0x4; y++) &amp;#123;
                            var z &amp;#x3D; x[y];
                            x[y] &amp;#x3D; (z &amp;lt;&amp;lt; 0x8 | z &amp;gt;&amp;gt;&amp;gt; 0x18) &amp;amp; 0xff00ff | (z &amp;lt;&amp;lt; 0x18 | z &amp;gt;&amp;gt;&amp;gt; 0x8) &amp;amp; 0xff00ff00;
                        &amp;#125;
                        return w;
                    &amp;#125;,
                    &amp;#39;clone&amp;#39;: function () &amp;#123;
                        var q &amp;#x3D; i[&amp;#39;clone&amp;#39;][&amp;#39;call&amp;#39;](this);
                        return q[&amp;#39;_hash&amp;#39;] &amp;#x3D; this[&amp;#39;_hash&amp;#39;][&amp;#39;clone&amp;#39;](),
                            q;
                    &amp;#125;
                &amp;#125;);

                function m(q, r, u, v, w, y, z) &amp;#123;
                    var A &amp;#x3D; q + (r &amp;amp; u | ~r &amp;amp; v) + w + z;
                    return (A &amp;lt;&amp;lt; y | A &amp;gt;&amp;gt;&amp;gt; 0x20 - y) + r;
                &amp;#125;

                function n(q, r, u, v, w, y, z) &amp;#123;
                    var A &amp;#x3D; q + (r &amp;amp; v | u &amp;amp; ~v) + w + z;
                    return (A &amp;lt;&amp;lt; y | A &amp;gt;&amp;gt;&amp;gt; 0x20 - y) + r;
                &amp;#125;

                function o(q, r, u, v, w, y, z) &amp;#123;
                    var A &amp;#x3D; q + (r ^ u ^ v) + w + z;
                    return (A &amp;lt;&amp;lt; y | A &amp;gt;&amp;gt;&amp;gt; 0x20 - y) + r;
                &amp;#125;

                function p(q, r, u, v, w, y, z) &amp;#123;
                    var A &amp;#x3D; q + (u ^ (r | ~v)) + w + z;
                    return (A &amp;lt;&amp;lt; y | A &amp;gt;&amp;gt;&amp;gt; 0x20 - y) + r;
                &amp;#125;

                f[&amp;#39;MD5&amp;#39;] &amp;#x3D; i[&amp;#39;_createHelper&amp;#39;](l),
                    f[&amp;#39;HmacMD5&amp;#39;] &amp;#x3D; i[&amp;#39;_createHmacHelper&amp;#39;](l);
            &amp;#125;(Math),
                d[&amp;#39;MD5&amp;#39;];
        &amp;#125;));
    &amp;#125;
        , &amp;#123;
            &amp;#39;.&amp;#x2F;core&amp;#39;: 0x5
        &amp;#125;],
    0xf: [function (a, b, c) &amp;#123;
        ;(function (d, e, f) &amp;#123;
            if (typeof c &amp;#x3D;&amp;#x3D;&amp;#x3D; &amp;#39;object&amp;#39;)
                b[&amp;#39;exports&amp;#39;] &amp;#x3D; c &amp;#x3D; e(a(&amp;#39;.&amp;#x2F;core&amp;#39;), a(&amp;#39;.&amp;#x2F;cipher-core&amp;#39;));
            else
                typeof define &amp;#x3D;&amp;#x3D;&amp;#x3D; &amp;#39;function&amp;#39; &amp;amp;&amp;amp; define[&amp;#39;amd&amp;#39;] ? define([&amp;#39;.&amp;#x2F;core&amp;#39;, &amp;#39;.&amp;#x2F;cipher-core&amp;#39;], e) : e(d[&amp;#39;CryptoJS&amp;#39;]);
        &amp;#125;(this, function (d) &amp;#123;
            return d[&amp;#39;mode&amp;#39;][&amp;#39;CFB&amp;#39;] &amp;#x3D; (function () &amp;#123;
                var e &amp;#x3D; d[&amp;#39;lib&amp;#39;][&amp;#39;BlockCipherMode&amp;#39;][&amp;#39;extend&amp;#39;]();
                e[&amp;#39;Encryptor&amp;#39;] &amp;#x3D; e[&amp;#39;extend&amp;#39;](&amp;#123;
                    &amp;#39;processBlock&amp;#39;: function (g, h) &amp;#123;
                        var i &amp;#x3D; this[&amp;#39;_cipher&amp;#39;]
                            , j &amp;#x3D; i[&amp;#39;blockSize&amp;#39;];
                        f[&amp;#39;call&amp;#39;](this, g, h, j, i),
                            this[&amp;#39;_prevBlock&amp;#39;] &amp;#x3D; g[&amp;#39;slice&amp;#39;](h, h + j);
                    &amp;#125;
                &amp;#125;),
                    e[&amp;#39;Decryptor&amp;#39;] &amp;#x3D; e[&amp;#39;extend&amp;#39;](&amp;#123;
                        &amp;#39;processBlock&amp;#39;: function (g, h) &amp;#123;
                            var i &amp;#x3D; this[&amp;#39;_cipher&amp;#39;]
                                , j &amp;#x3D; i[&amp;#39;blockSize&amp;#39;]
                                , k &amp;#x3D; g[&amp;#39;slice&amp;#39;](h, h + j);
                            f[&amp;#39;call&amp;#39;](this, g, h, j, i),
                                this[&amp;#39;_prevBlock&amp;#39;] &amp;#x3D; k;
                        &amp;#125;
                    &amp;#125;);

                function f(g, h, j, k) &amp;#123;
                    var l, m &amp;#x3D; this[&amp;#39;_iv&amp;#39;];
                    m ? (l &amp;#x3D; m[&amp;#39;slice&amp;#39;](0x0),
                        this[&amp;#39;_iv&amp;#39;] &amp;#x3D; undefined) : l &amp;#x3D; this[&amp;#39;_prevBlock&amp;#39;];
                    k[&amp;#39;encryptBlock&amp;#39;](l, 0x0);
                    for (var n &amp;#x3D; 0x0; n &amp;lt; j; n++) &amp;#123;
                        g[h + n] ^&amp;#x3D; l[n];
                    &amp;#125;
                &amp;#125;

                return e;
            &amp;#125;()),
                d[&amp;#39;mode&amp;#39;][&amp;#39;CFB&amp;#39;];
        &amp;#125;));
    &amp;#125;
        , &amp;#123;
            &amp;#39;.&amp;#x2F;cipher-core&amp;#39;: 0x4,
            &amp;#39;.&amp;#x2F;core&amp;#39;: 0x5
        &amp;#125;],
    0x10: [function (a, b, c) &amp;#123;
        ;(function (d, e, f) &amp;#123;
            if (typeof c &amp;#x3D;&amp;#x3D;&amp;#x3D; &amp;#39;object&amp;#39;)
                b[&amp;#39;exports&amp;#39;] &amp;#x3D; c &amp;#x3D; e(a(&amp;#39;.&amp;#x2F;core&amp;#39;), a(&amp;#39;.&amp;#x2F;cipher-core&amp;#39;));
            else
                typeof define &amp;#x3D;&amp;#x3D;&amp;#x3D; &amp;#39;function&amp;#39; &amp;amp;&amp;amp; define[&amp;#39;amd&amp;#39;] ? define([&amp;#39;.&amp;#x2F;core&amp;#39;, &amp;#39;.&amp;#x2F;cipher-core&amp;#39;], e) : e(d[&amp;#39;CryptoJS&amp;#39;]);
        &amp;#125;(this, function (d) &amp;#123;
            return d[&amp;#39;mode&amp;#39;][&amp;#39;CTRGladman&amp;#39;] &amp;#x3D; (function () &amp;#123;
                var e &amp;#x3D; d[&amp;#39;lib&amp;#39;][&amp;#39;BlockCipherMode&amp;#39;][&amp;#39;extend&amp;#39;]();

                function f(i) &amp;#123;
                    if ((i &amp;gt;&amp;gt; 0x18 &amp;amp; 0xff) &amp;#x3D;&amp;#x3D;&amp;#x3D; 0xff) &amp;#123;
                        var j &amp;#x3D; i &amp;gt;&amp;gt; 0x10 &amp;amp; 0xff
                            , k &amp;#x3D; i &amp;gt;&amp;gt; 0x8 &amp;amp; 0xff
                            , l &amp;#x3D; i &amp;amp; 0xff;
                        j &amp;#x3D;&amp;#x3D;&amp;#x3D; 0xff ? (j &amp;#x3D; 0x0,
                            k &amp;#x3D;&amp;#x3D;&amp;#x3D; 0xff ? (k &amp;#x3D; 0x0,
                                l &amp;#x3D;&amp;#x3D;&amp;#x3D; 0xff ? l &amp;#x3D; 0x0 : ++l) : ++k) : ++j,
                            i &amp;#x3D; 0x0,
                            i +&amp;#x3D; j &amp;lt;&amp;lt; 0x10,
                            i +&amp;#x3D; k &amp;lt;&amp;lt; 0x8,
                            i +&amp;#x3D; l;
                    &amp;#125; else
                        i +&amp;#x3D; 0x1 &amp;lt;&amp;lt; 0x18;
                    return i;
                &amp;#125;

                function g(i) &amp;#123;
                    return (i[0x0] &amp;#x3D; f(i[0x0])) &amp;#x3D;&amp;#x3D;&amp;#x3D; 0x0 &amp;amp;&amp;amp; (i[0x1] &amp;#x3D; f(i[0x1])),
                        i;
                &amp;#125;

                var h &amp;#x3D; e[&amp;#39;Encryptor&amp;#39;] &amp;#x3D; e[&amp;#39;extend&amp;#39;](&amp;#123;
                    &amp;#39;processBlock&amp;#39;: function (j, k) &amp;#123;
                        var l &amp;#x3D; this[&amp;#39;_cipher&amp;#39;]
                            , m &amp;#x3D; l[&amp;#39;blockSize&amp;#39;]
                            , n &amp;#x3D; this[&amp;#39;_iv&amp;#39;]
                            , o &amp;#x3D; this[&amp;#39;_counter&amp;#39;];
                        n &amp;amp;&amp;amp; (o &amp;#x3D; this[&amp;#39;_counter&amp;#39;] &amp;#x3D; n[&amp;#39;slice&amp;#39;](0x0),
                            this[&amp;#39;_iv&amp;#39;] &amp;#x3D; undefined);
                        g(o);
                        var p &amp;#x3D; o[&amp;#39;slice&amp;#39;](0x0);
                        l[&amp;#39;encryptBlock&amp;#39;](p, 0x0);
                        for (var q &amp;#x3D; 0x0; q &amp;lt; m; q++) &amp;#123;
                            j[k + q] ^&amp;#x3D; p[q];
                        &amp;#125;
                    &amp;#125;
                &amp;#125;);
                return e[&amp;#39;Decryptor&amp;#39;] &amp;#x3D; h,
                    e;
            &amp;#125;()),
                d[&amp;#39;mode&amp;#39;][&amp;#39;CTRGladman&amp;#39;];
        &amp;#125;));
    &amp;#125;
        , &amp;#123;
            &amp;#39;.&amp;#x2F;cipher-core&amp;#39;: 0x4,
            &amp;#39;.&amp;#x2F;core&amp;#39;: 0x5
        &amp;#125;],
    0x11: [function (a, b, c) &amp;#123;
        ;(function (d, e, f) &amp;#123;
            if (typeof c &amp;#x3D;&amp;#x3D;&amp;#x3D; &amp;#39;object&amp;#39;)
                b[&amp;#39;exports&amp;#39;] &amp;#x3D; c &amp;#x3D; e(a(&amp;#39;.&amp;#x2F;core&amp;#39;), a(&amp;#39;.&amp;#x2F;cipher-core&amp;#39;));
            else
                typeof define &amp;#x3D;&amp;#x3D;&amp;#x3D; &amp;#39;function&amp;#39; &amp;amp;&amp;amp; define[&amp;#39;amd&amp;#39;] ? define([&amp;#39;.&amp;#x2F;core&amp;#39;, &amp;#39;.&amp;#x2F;cipher-core&amp;#39;], e) : e(d[&amp;#39;CryptoJS&amp;#39;]);
        &amp;#125;(this, function (d) &amp;#123;
            return d[&amp;#39;mode&amp;#39;][&amp;#39;CTR&amp;#39;] &amp;#x3D; (function () &amp;#123;
                var e &amp;#x3D; d[&amp;#39;lib&amp;#39;][&amp;#39;BlockCipherMode&amp;#39;][&amp;#39;extend&amp;#39;]()
                    , f &amp;#x3D; e[&amp;#39;Encryptor&amp;#39;] &amp;#x3D; e[&amp;#39;extend&amp;#39;](&amp;#123;
                    &amp;#39;processBlock&amp;#39;: function (g, h) &amp;#123;
                        var j &amp;#x3D; this[&amp;#39;_cipher&amp;#39;]
                            , k &amp;#x3D; j[&amp;#39;blockSize&amp;#39;]
                            , l &amp;#x3D; this[&amp;#39;_iv&amp;#39;]
                            , m &amp;#x3D; this[&amp;#39;_counter&amp;#39;];
                        l &amp;amp;&amp;amp; (m &amp;#x3D; this[&amp;#39;_counter&amp;#39;] &amp;#x3D; l[&amp;#39;slice&amp;#39;](0x0),
                            this[&amp;#39;_iv&amp;#39;] &amp;#x3D; undefined);
                        var n &amp;#x3D; m[&amp;#39;slice&amp;#39;](0x0);
                        j[&amp;#39;encryptBlock&amp;#39;](n, 0x0),
                            m[k - 0x1] &amp;#x3D; m[k - 0x1] + 0x1 | 0x0;
                        for (var o &amp;#x3D; 0x0; o &amp;lt; k; o++) &amp;#123;
                            g[h + o] ^&amp;#x3D; n[o];
                        &amp;#125;
                    &amp;#125;
                &amp;#125;);
                return e[&amp;#39;Decryptor&amp;#39;] &amp;#x3D; f,
                    e;
            &amp;#125;()),
                d[&amp;#39;mode&amp;#39;][&amp;#39;CTR&amp;#39;];
        &amp;#125;));
    &amp;#125;
        , &amp;#123;
            &amp;#39;.&amp;#x2F;cipher-core&amp;#39;: 0x4,
            &amp;#39;.&amp;#x2F;core&amp;#39;: 0x5
        &amp;#125;],
    0x12: [function (a, b, c) &amp;#123;
        ;(function (d, e, f) &amp;#123;
            if (typeof c &amp;#x3D;&amp;#x3D;&amp;#x3D; &amp;#39;object&amp;#39;)
                b[&amp;#39;exports&amp;#39;] &amp;#x3D; c &amp;#x3D; e(a(&amp;#39;.&amp;#x2F;core&amp;#39;), a(&amp;#39;.&amp;#x2F;cipher-core&amp;#39;));
            else
                typeof define &amp;#x3D;&amp;#x3D;&amp;#x3D; &amp;#39;function&amp;#39; &amp;amp;&amp;amp; define[&amp;#39;amd&amp;#39;] ? define([&amp;#39;.&amp;#x2F;core&amp;#39;, &amp;#39;.&amp;#x2F;cipher-core&amp;#39;], e) : e(d[&amp;#39;CryptoJS&amp;#39;]);
        &amp;#125;(this, function (d) &amp;#123;
            return d[&amp;#39;mode&amp;#39;][&amp;#39;ECB&amp;#39;] &amp;#x3D; (function () &amp;#123;
                var e &amp;#x3D; d[&amp;#39;lib&amp;#39;][&amp;#39;BlockCipherMode&amp;#39;][&amp;#39;extend&amp;#39;]();
                return e[&amp;#39;Encryptor&amp;#39;] &amp;#x3D; e[&amp;#39;extend&amp;#39;](&amp;#123;
                    &amp;#39;processBlock&amp;#39;: function (f, g) &amp;#123;
                        this[&amp;#39;_cipher&amp;#39;][&amp;#39;encryptBlock&amp;#39;](f, g);
                    &amp;#125;
                &amp;#125;),
                    e[&amp;#39;Decryptor&amp;#39;] &amp;#x3D; e[&amp;#39;extend&amp;#39;](&amp;#123;
                        &amp;#39;processBlock&amp;#39;: function (f, g) &amp;#123;
                            this[&amp;#39;_cipher&amp;#39;][&amp;#39;decryptBlock&amp;#39;](f, g);
                        &amp;#125;
                    &amp;#125;),
                    e;
            &amp;#125;()),
                d[&amp;#39;mode&amp;#39;][&amp;#39;ECB&amp;#39;];
        &amp;#125;));
    &amp;#125;
        , &amp;#123;
            &amp;#39;.&amp;#x2F;cipher-core&amp;#39;: 0x4,
            &amp;#39;.&amp;#x2F;core&amp;#39;: 0x5
        &amp;#125;],
    0x13: [function (a, b, c) &amp;#123;
        ;(function (d, e, f) &amp;#123;
            if (typeof c &amp;#x3D;&amp;#x3D;&amp;#x3D; &amp;#39;object&amp;#39;)
                b[&amp;#39;exports&amp;#39;] &amp;#x3D; c &amp;#x3D; e(a(&amp;#39;.&amp;#x2F;core&amp;#39;), a(&amp;#39;.&amp;#x2F;cipher-core&amp;#39;));
            else
                typeof define &amp;#x3D;&amp;#x3D;&amp;#x3D; &amp;#39;function&amp;#39; &amp;amp;&amp;amp; define[&amp;#39;amd&amp;#39;] ? define([&amp;#39;.&amp;#x2F;core&amp;#39;, &amp;#39;.&amp;#x2F;cipher-core&amp;#39;], e) : e(d[&amp;#39;CryptoJS&amp;#39;]);
        &amp;#125;(this, function (d) &amp;#123;
            return d[&amp;#39;mode&amp;#39;][&amp;#39;OFB&amp;#39;] &amp;#x3D; (function () &amp;#123;
                var e &amp;#x3D; d[&amp;#39;lib&amp;#39;][&amp;#39;BlockCipherMode&amp;#39;][&amp;#39;extend&amp;#39;]()
                    , f &amp;#x3D; e[&amp;#39;Encryptor&amp;#39;] &amp;#x3D; e[&amp;#39;extend&amp;#39;](&amp;#123;
                    &amp;#39;processBlock&amp;#39;: function (g, h) &amp;#123;
                        var j &amp;#x3D; this[&amp;#39;_cipher&amp;#39;]
                            , k &amp;#x3D; j[&amp;#39;blockSize&amp;#39;]
                            , l &amp;#x3D; this[&amp;#39;_iv&amp;#39;]
                            , m &amp;#x3D; this[&amp;#39;_keystream&amp;#39;];
                        l &amp;amp;&amp;amp; (m &amp;#x3D; this[&amp;#39;_keystream&amp;#39;] &amp;#x3D; l[&amp;#39;slice&amp;#39;](0x0),
                            this[&amp;#39;_iv&amp;#39;] &amp;#x3D; undefined);
                        j[&amp;#39;encryptBlock&amp;#39;](m, 0x0);
                        for (var n &amp;#x3D; 0x0; n &amp;lt; k; n++) &amp;#123;
                            g[h + n] ^&amp;#x3D; m[n];
                        &amp;#125;
                    &amp;#125;
                &amp;#125;);
                return e[&amp;#39;Decryptor&amp;#39;] &amp;#x3D; f,
                    e;
            &amp;#125;()),
                d[&amp;#39;mode&amp;#39;][&amp;#39;OFB&amp;#39;];
        &amp;#125;));
    &amp;#125;
        , &amp;#123;
            &amp;#39;.&amp;#x2F;cipher-core&amp;#39;: 0x4,
            &amp;#39;.&amp;#x2F;core&amp;#39;: 0x5
        &amp;#125;],
    0x14: [function (a, b, c) &amp;#123;
        ;(function (d, e, f) &amp;#123;
            if (typeof c &amp;#x3D;&amp;#x3D;&amp;#x3D; &amp;#39;object&amp;#39;)
                b[&amp;#39;exports&amp;#39;] &amp;#x3D; c &amp;#x3D; e(a(&amp;#39;.&amp;#x2F;core&amp;#39;), a(&amp;#39;.&amp;#x2F;cipher-core&amp;#39;));
            else
                typeof define &amp;#x3D;&amp;#x3D;&amp;#x3D; &amp;#39;function&amp;#39; &amp;amp;&amp;amp; define[&amp;#39;amd&amp;#39;] ? define([&amp;#39;.&amp;#x2F;core&amp;#39;, &amp;#39;.&amp;#x2F;cipher-core&amp;#39;], e) : e(d[&amp;#39;CryptoJS&amp;#39;]);
        &amp;#125;(this, function (d) &amp;#123;
            return d[&amp;#39;pad&amp;#39;][&amp;#39;AnsiX923&amp;#39;] &amp;#x3D; &amp;#123;
                &amp;#39;pad&amp;#39;: function (e, f) &amp;#123;
                    var g &amp;#x3D; e[&amp;#39;sigBytes&amp;#39;]
                        , h &amp;#x3D; f * 0x4
                        , i &amp;#x3D; h - g % h
                        , j &amp;#x3D; g + i - 0x1;
                    e[&amp;#39;clamp&amp;#39;](),
                        e[&amp;#39;words&amp;#39;][j &amp;gt;&amp;gt;&amp;gt; 0x2] |&amp;#x3D; i &amp;lt;&amp;lt; 0x18 - j % 0x4 * 0x8,
                        e[&amp;#39;sigBytes&amp;#39;] +&amp;#x3D; i;
                &amp;#125;,
                &amp;#39;unpad&amp;#39;: function (e) &amp;#123;
                    var f &amp;#x3D; e[&amp;#39;words&amp;#39;][e[&amp;#39;sigBytes&amp;#39;] - 0x1 &amp;gt;&amp;gt;&amp;gt; 0x2] &amp;amp; 0xff;
                    e[&amp;#39;sigBytes&amp;#39;] -&amp;#x3D; f;
                &amp;#125;
            &amp;#125;,
                d[&amp;#39;pad&amp;#39;][&amp;#39;Ansix923&amp;#39;];
        &amp;#125;));
    &amp;#125;
        , &amp;#123;
            &amp;#39;.&amp;#x2F;cipher-core&amp;#39;: 0x4,
            &amp;#39;.&amp;#x2F;core&amp;#39;: 0x5
        &amp;#125;],
    0x15: [function (a, b, c) &amp;#123;
        ;(function (d, e, f) &amp;#123;
            if (typeof c &amp;#x3D;&amp;#x3D;&amp;#x3D; &amp;#39;object&amp;#39;)
                b[&amp;#39;exports&amp;#39;] &amp;#x3D; c &amp;#x3D; e(a(&amp;#39;.&amp;#x2F;core&amp;#39;), a(&amp;#39;.&amp;#x2F;cipher-core&amp;#39;));
            else
                typeof define &amp;#x3D;&amp;#x3D;&amp;#x3D; &amp;#39;function&amp;#39; &amp;amp;&amp;amp; define[&amp;#39;amd&amp;#39;] ? define([&amp;#39;.&amp;#x2F;core&amp;#39;, &amp;#39;.&amp;#x2F;cipher-core&amp;#39;], e) : e(d[&amp;#39;CryptoJS&amp;#39;]);
        &amp;#125;(this, function (d) &amp;#123;
            return d[&amp;#39;pad&amp;#39;][&amp;#39;Iso10126&amp;#39;] &amp;#x3D; &amp;#123;
                &amp;#39;pad&amp;#39;: function (e, f) &amp;#123;
                    var g &amp;#x3D; f * 0x4
                        , h &amp;#x3D; g - e[&amp;#39;sigBytes&amp;#39;] % g;
                    e[&amp;#39;concat&amp;#39;](d[&amp;#39;lib&amp;#39;][&amp;#39;WordArray&amp;#39;][&amp;#39;random&amp;#39;](h - 0x1))[&amp;#39;concat&amp;#39;](d[&amp;#39;lib&amp;#39;][&amp;#39;WordArray&amp;#39;][&amp;#39;create&amp;#39;]([h &amp;lt;&amp;lt; 0x18], 0x1));
                &amp;#125;,
                &amp;#39;unpad&amp;#39;: function (e) &amp;#123;
                    var f &amp;#x3D; e[&amp;#39;words&amp;#39;][e[&amp;#39;sigBytes&amp;#39;] - 0x1 &amp;gt;&amp;gt;&amp;gt; 0x2] &amp;amp; 0xff;
                    e[&amp;#39;sigBytes&amp;#39;] -&amp;#x3D; f;
                &amp;#125;
            &amp;#125;,
                d[&amp;#39;pad&amp;#39;][&amp;#39;Iso10126&amp;#39;];
        &amp;#125;));
    &amp;#125;
        , &amp;#123;
            &amp;#39;.&amp;#x2F;cipher-core&amp;#39;: 0x4,
            &amp;#39;.&amp;#x2F;core&amp;#39;: 0x5
        &amp;#125;],
    0x16: [function (a, b, c) &amp;#123;
        ;(function (d, e, f) &amp;#123;
            if (typeof c &amp;#x3D;&amp;#x3D;&amp;#x3D; &amp;#39;object&amp;#39;)
                b[&amp;#39;exports&amp;#39;] &amp;#x3D; c &amp;#x3D; e(a(&amp;#39;.&amp;#x2F;core&amp;#39;), a(&amp;#39;.&amp;#x2F;cipher-core&amp;#39;));
            else
                typeof define &amp;#x3D;&amp;#x3D;&amp;#x3D; &amp;#39;function&amp;#39; &amp;amp;&amp;amp; define[&amp;#39;amd&amp;#39;] ? define([&amp;#39;.&amp;#x2F;core&amp;#39;, &amp;#39;.&amp;#x2F;cipher-core&amp;#39;], e) : e(d[&amp;#39;CryptoJS&amp;#39;]);
        &amp;#125;(this, function (d) &amp;#123;
            return d[&amp;#39;pad&amp;#39;][&amp;#39;Iso97971&amp;#39;] &amp;#x3D; &amp;#123;
                &amp;#39;pad&amp;#39;: function (e, f) &amp;#123;
                    e[&amp;#39;concat&amp;#39;](d[&amp;#39;lib&amp;#39;][&amp;#39;WordArray&amp;#39;][&amp;#39;create&amp;#39;]([0x80000000], 0x1)),
                        d[&amp;#39;pad&amp;#39;][&amp;#39;ZeroPadding&amp;#39;][&amp;#39;pad&amp;#39;](e, f);
                &amp;#125;,
                &amp;#39;unpad&amp;#39;: function (e) &amp;#123;
                    d[&amp;#39;pad&amp;#39;][&amp;#39;ZeroPadding&amp;#39;][&amp;#39;unpad&amp;#39;](e),
                        e[&amp;#39;sigBytes&amp;#39;]--;
                &amp;#125;
            &amp;#125;,
                d[&amp;#39;pad&amp;#39;][&amp;#39;Iso97971&amp;#39;];
        &amp;#125;));
    &amp;#125;
        , &amp;#123;
            &amp;#39;.&amp;#x2F;cipher-core&amp;#39;: 0x4,
            &amp;#39;.&amp;#x2F;core&amp;#39;: 0x5
        &amp;#125;],
    0x17: [function (a, b, c) &amp;#123;
        ;(function (d, e, f) &amp;#123;
            if (typeof c &amp;#x3D;&amp;#x3D;&amp;#x3D; &amp;#39;object&amp;#39;)
                b[&amp;#39;exports&amp;#39;] &amp;#x3D; c &amp;#x3D; e(a(&amp;#39;.&amp;#x2F;core&amp;#39;), a(&amp;#39;.&amp;#x2F;cipher-core&amp;#39;));
            else
                typeof define &amp;#x3D;&amp;#x3D;&amp;#x3D; &amp;#39;function&amp;#39; &amp;amp;&amp;amp; define[&amp;#39;amd&amp;#39;] ? define([&amp;#39;.&amp;#x2F;core&amp;#39;, &amp;#39;.&amp;#x2F;cipher-core&amp;#39;], e) : e(d[&amp;#39;CryptoJS&amp;#39;]);
        &amp;#125;(this, function (d) &amp;#123;
            return d[&amp;#39;pad&amp;#39;][&amp;#39;NoPadding&amp;#39;] &amp;#x3D; &amp;#123;
                &amp;#39;pad&amp;#39;: function () &amp;#123;
                &amp;#125;,
                &amp;#39;unpad&amp;#39;: function () &amp;#123;
                &amp;#125;
            &amp;#125;,
                d[&amp;#39;pad&amp;#39;][&amp;#39;NoPadding&amp;#39;];
        &amp;#125;));
    &amp;#125;
        , &amp;#123;
            &amp;#39;.&amp;#x2F;cipher-core&amp;#39;: 0x4,
            &amp;#39;.&amp;#x2F;core&amp;#39;: 0x5
        &amp;#125;],
    0x18: [function (a, b, c) &amp;#123;
        ;(function (d, e, f) &amp;#123;
            if (typeof c &amp;#x3D;&amp;#x3D;&amp;#x3D; &amp;#39;object&amp;#39;)
                b[&amp;#39;exports&amp;#39;] &amp;#x3D; c &amp;#x3D; e(a(&amp;#39;.&amp;#x2F;core&amp;#39;), a(&amp;#39;.&amp;#x2F;cipher-core&amp;#39;));
            else
                typeof define &amp;#x3D;&amp;#x3D;&amp;#x3D; &amp;#39;function&amp;#39; &amp;amp;&amp;amp; define[&amp;#39;amd&amp;#39;] ? define([&amp;#39;.&amp;#x2F;core&amp;#39;, &amp;#39;.&amp;#x2F;cipher-core&amp;#39;], e) : e(d[&amp;#39;CryptoJS&amp;#39;]);
        &amp;#125;(this, function (d) &amp;#123;
            return d[&amp;#39;pad&amp;#39;][&amp;#39;ZeroPadding&amp;#39;] &amp;#x3D; &amp;#123;
                &amp;#39;pad&amp;#39;: function (e, f) &amp;#123;
                    var g &amp;#x3D; f * 0x4;
                    e[&amp;#39;clamp&amp;#39;](),
                        e[&amp;#39;sigBytes&amp;#39;] +&amp;#x3D; g - (e[&amp;#39;sigBytes&amp;#39;] % g || g);
                &amp;#125;,
                &amp;#39;unpad&amp;#39;: function (e) &amp;#123;
                    var f &amp;#x3D; e[&amp;#39;words&amp;#39;]
                        , g &amp;#x3D; e[&amp;#39;sigBytes&amp;#39;] - 0x1;
                    for (var g &amp;#x3D; e[&amp;#39;sigBytes&amp;#39;] - 0x1; g &amp;gt;&amp;#x3D; 0x0; g--) &amp;#123;
                        if (f[g &amp;gt;&amp;gt;&amp;gt; 0x2] &amp;gt;&amp;gt;&amp;gt; 0x18 - g % 0x4 * 0x8 &amp;amp; 0xff) &amp;#123;
                            e[&amp;#39;sigBytes&amp;#39;] &amp;#x3D; g + 0x1;
                            break;
                        &amp;#125;
                    &amp;#125;
                &amp;#125;
            &amp;#125;,
                d[&amp;#39;pad&amp;#39;][&amp;#39;ZeroPadding&amp;#39;];
        &amp;#125;));
    &amp;#125;
        , &amp;#123;
            &amp;#39;.&amp;#x2F;cipher-core&amp;#39;: 0x4,
            &amp;#39;.&amp;#x2F;core&amp;#39;: 0x5
        &amp;#125;],
    0x19: [function (a, b, c) &amp;#123;
        ;(function (d, e, f) &amp;#123;
            if (typeof c &amp;#x3D;&amp;#x3D;&amp;#x3D; &amp;#39;object&amp;#39;)
                b[&amp;#39;exports&amp;#39;] &amp;#x3D; c &amp;#x3D; e(a(&amp;#39;.&amp;#x2F;core&amp;#39;), a(&amp;#39;.&amp;#x2F;sha1&amp;#39;), a(&amp;#39;.&amp;#x2F;hmac&amp;#39;));
            else
                typeof define &amp;#x3D;&amp;#x3D;&amp;#x3D; &amp;#39;function&amp;#39; &amp;amp;&amp;amp; define[&amp;#39;amd&amp;#39;] ? define([&amp;#39;.&amp;#x2F;core&amp;#39;, &amp;#39;.&amp;#x2F;sha1&amp;#39;, &amp;#39;.&amp;#x2F;hmac&amp;#39;], e) : e(d[&amp;#39;CryptoJS&amp;#39;]);
        &amp;#125;(this, function (d) &amp;#123;
            return (function () &amp;#123;
                var e &amp;#x3D; d
                    , f &amp;#x3D; e[&amp;#39;lib&amp;#39;]
                    , g &amp;#x3D; f[&amp;#39;Base&amp;#39;]
                    , h &amp;#x3D; f[&amp;#39;WordArray&amp;#39;]
                    , i &amp;#x3D; e[&amp;#39;algo&amp;#39;]
                    , j &amp;#x3D; i[&amp;#39;SHA1&amp;#39;]
                    , k &amp;#x3D; i[&amp;#39;HMAC&amp;#39;]
                    , l &amp;#x3D; i[&amp;#39;PBKDF2&amp;#39;] &amp;#x3D; g[&amp;#39;extend&amp;#39;](&amp;#123;
                    &amp;#39;cfg&amp;#39;: g[&amp;#39;extend&amp;#39;](&amp;#123;
                        &amp;#39;keySize&amp;#39;: 0x80 &amp;#x2F; 0x20,
                        &amp;#39;hasher&amp;#39;: j,
                        &amp;#39;iterations&amp;#39;: 0x1
                    &amp;#125;),
                    &amp;#39;init&amp;#39;: function (m) &amp;#123;
                        this[&amp;#39;cfg&amp;#39;] &amp;#x3D; this[&amp;#39;cfg&amp;#39;][&amp;#39;extend&amp;#39;](m);
                    &amp;#125;,
                    &amp;#39;compute&amp;#39;: function (m, n) &amp;#123;
                        var o &amp;#x3D; this[&amp;#39;cfg&amp;#39;]
                            , p &amp;#x3D; k[&amp;#39;create&amp;#39;](o[&amp;#39;hasher&amp;#39;], m)
                            , q &amp;#x3D; h[&amp;#39;create&amp;#39;]()
                            , r &amp;#x3D; h[&amp;#39;create&amp;#39;]([0x1])
                            , s &amp;#x3D; q[&amp;#39;words&amp;#39;]
                            , t &amp;#x3D; r[&amp;#39;words&amp;#39;]
                            , u &amp;#x3D; o[&amp;#39;keySize&amp;#39;]
                            , v &amp;#x3D; o[&amp;#39;iterations&amp;#39;];
                        while (s[&amp;#39;length&amp;#39;] &amp;lt; u) &amp;#123;
                            var w &amp;#x3D; p[&amp;#39;update&amp;#39;](n)[&amp;#39;finalize&amp;#39;](r);
                            p[&amp;#39;reset&amp;#39;]();
                            var x &amp;#x3D; w[&amp;#39;words&amp;#39;]
                                , y &amp;#x3D; x[&amp;#39;length&amp;#39;]
                                , z &amp;#x3D; w;
                            for (var A &amp;#x3D; 0x1; A &amp;lt; v; A++) &amp;#123;
                                z &amp;#x3D; p[&amp;#39;finalize&amp;#39;](z),
                                    p[&amp;#39;reset&amp;#39;]();
                                var B &amp;#x3D; z[&amp;#39;words&amp;#39;];
                                for (var D &amp;#x3D; 0x0; D &amp;lt; y; D++) &amp;#123;
                                    x[D] ^&amp;#x3D; B[D];
                                &amp;#125;
                            &amp;#125;
                            q[&amp;#39;concat&amp;#39;](w),
                                t[0x0]++;
                        &amp;#125;
                        return q[&amp;#39;sigBytes&amp;#39;] &amp;#x3D; u * 0x4,
                            q;
                    &amp;#125;
                &amp;#125;);
                e[&amp;#39;PBKDF2&amp;#39;] &amp;#x3D; function (m, n, o) &amp;#123;
                    return l[&amp;#39;create&amp;#39;](o)[&amp;#39;compute&amp;#39;](m, n);
                &amp;#125;
                ;
            &amp;#125;()),
                d[&amp;#39;PBKDF2&amp;#39;];
        &amp;#125;));
    &amp;#125;
        , &amp;#123;
            &amp;#39;.&amp;#x2F;core&amp;#39;: 0x5,
            &amp;#39;.&amp;#x2F;hmac&amp;#39;: 0xb,
            &amp;#39;.&amp;#x2F;sha1&amp;#39;: 0x1e
        &amp;#125;],
    0x1a: [function (a, b, c) &amp;#123;
        ;(function (d, e, f) &amp;#123;
            if (typeof c &amp;#x3D;&amp;#x3D;&amp;#x3D; &amp;#39;object&amp;#39;)
                b[&amp;#39;exports&amp;#39;] &amp;#x3D; c &amp;#x3D; e(a(&amp;#39;.&amp;#x2F;core&amp;#39;), a(&amp;#39;.&amp;#x2F;enc-base64&amp;#39;), a(&amp;#39;.&amp;#x2F;md5&amp;#39;), a(&amp;#39;.&amp;#x2F;evpkdf&amp;#39;), a(&amp;#39;.&amp;#x2F;cipher-core&amp;#39;));
            else
                typeof define &amp;#x3D;&amp;#x3D;&amp;#x3D; &amp;#39;function&amp;#39; &amp;amp;&amp;amp; define[&amp;#39;amd&amp;#39;] ? define([&amp;#39;.&amp;#x2F;core&amp;#39;, &amp;#39;.&amp;#x2F;enc-base64&amp;#39;, &amp;#39;.&amp;#x2F;md5&amp;#39;, &amp;#39;.&amp;#x2F;evpkdf&amp;#39;, &amp;#39;.&amp;#x2F;cipher-core&amp;#39;], e) : e(d[&amp;#39;CryptoJS&amp;#39;]);
        &amp;#125;(this, function (d) &amp;#123;
            return (function () &amp;#123;
                var e &amp;#x3D; d
                    , f &amp;#x3D; e[&amp;#39;lib&amp;#39;]
                    , g &amp;#x3D; f[&amp;#39;StreamCipher&amp;#39;]
                    , h &amp;#x3D; e[&amp;#39;algo&amp;#39;]
                    , i &amp;#x3D; []
                    , j &amp;#x3D; []
                    , k &amp;#x3D; []
                    , l &amp;#x3D; h[&amp;#39;RabbitLegacy&amp;#39;] &amp;#x3D; g[&amp;#39;extend&amp;#39;](&amp;#123;
                    &amp;#39;_doReset&amp;#39;: function () &amp;#123;
                        var n &amp;#x3D; this[&amp;#39;_key&amp;#39;][&amp;#39;words&amp;#39;]
                            , o &amp;#x3D; this[&amp;#39;cfg&amp;#39;][&amp;#39;iv&amp;#39;]
                            ,
                            p &amp;#x3D; this[&amp;#39;_X&amp;#39;] &amp;#x3D; [n[0x0], n[0x3] &amp;lt;&amp;lt; 0x10 | n[0x2] &amp;gt;&amp;gt;&amp;gt; 0x10, n[0x1], n[0x0] &amp;lt;&amp;lt; 0x10 | n[0x3] &amp;gt;&amp;gt;&amp;gt; 0x10, n[0x2], n[0x1] &amp;lt;&amp;lt; 0x10 | n[0x0] &amp;gt;&amp;gt;&amp;gt; 0x10, n[0x3], n[0x2] &amp;lt;&amp;lt; 0x10 | n[0x1] &amp;gt;&amp;gt;&amp;gt; 0x10]
                            ,
                            q &amp;#x3D; this[&amp;#39;_C&amp;#39;] &amp;#x3D; [n[0x2] &amp;lt;&amp;lt; 0x10 | n[0x2] &amp;gt;&amp;gt;&amp;gt; 0x10, n[0x0] &amp;amp; 0xffff0000 | n[0x1] &amp;amp; 0xffff, n[0x3] &amp;lt;&amp;lt; 0x10 | n[0x3] &amp;gt;&amp;gt;&amp;gt; 0x10, n[0x1] &amp;amp; 0xffff0000 | n[0x2] &amp;amp; 0xffff, n[0x0] &amp;lt;&amp;lt; 0x10 | n[0x0] &amp;gt;&amp;gt;&amp;gt; 0x10, n[0x2] &amp;amp; 0xffff0000 | n[0x3] &amp;amp; 0xffff, n[0x1] &amp;lt;&amp;lt; 0x10 | n[0x1] &amp;gt;&amp;gt;&amp;gt; 0x10, n[0x3] &amp;amp; 0xffff0000 | n[0x0] &amp;amp; 0xffff];
                        this[&amp;#39;_b&amp;#39;] &amp;#x3D; 0x0;
                        for (var r &amp;#x3D; 0x0; r &amp;lt; 0x4; r++) &amp;#123;
                            m[&amp;#39;call&amp;#39;](this);
                        &amp;#125;
                        for (var r &amp;#x3D; 0x0; r &amp;lt; 0x8; r++) &amp;#123;
                            q[r] ^&amp;#x3D; p[r + 0x4 &amp;amp; 0x7];
                        &amp;#125;
                        if (o) &amp;#123;
                            var s &amp;#x3D; o[&amp;#39;words&amp;#39;]
                                , t &amp;#x3D; s[0x0]
                                , u &amp;#x3D; s[0x1]
                                , v &amp;#x3D; (t &amp;lt;&amp;lt; 0x8 | t &amp;gt;&amp;gt;&amp;gt; 0x18) &amp;amp; 0xff00ff | (t &amp;lt;&amp;lt; 0x18 | t &amp;gt;&amp;gt;&amp;gt; 0x8) &amp;amp; 0xff00ff00
                                , w &amp;#x3D; (u &amp;lt;&amp;lt; 0x8 | u &amp;gt;&amp;gt;&amp;gt; 0x18) &amp;amp; 0xff00ff | (u &amp;lt;&amp;lt; 0x18 | u &amp;gt;&amp;gt;&amp;gt; 0x8) &amp;amp; 0xff00ff00
                                , x &amp;#x3D; v &amp;gt;&amp;gt;&amp;gt; 0x10 | w &amp;amp; 0xffff0000
                                , y &amp;#x3D; w &amp;lt;&amp;lt; 0x10 | v &amp;amp; 0xffff;
                            q[0x0] ^&amp;#x3D; v,
                                q[0x1] ^&amp;#x3D; x,
                                q[0x2] ^&amp;#x3D; w,
                                q[0x3] ^&amp;#x3D; y,
                                q[0x4] ^&amp;#x3D; v,
                                q[0x5] ^&amp;#x3D; x,
                                q[0x6] ^&amp;#x3D; w,
                                q[0x7] ^&amp;#x3D; y;
                            for (var r &amp;#x3D; 0x0; r &amp;lt; 0x4; r++) &amp;#123;
                                m[&amp;#39;call&amp;#39;](this);
                            &amp;#125;
                        &amp;#125;
                    &amp;#125;,
                    &amp;#39;_doProcessBlock&amp;#39;: function (n, o) &amp;#123;
                        var p &amp;#x3D; this[&amp;#39;_X&amp;#39;];
                        m[&amp;#39;call&amp;#39;](this),
                            i[0x0] &amp;#x3D; p[0x0] ^ p[0x5] &amp;gt;&amp;gt;&amp;gt; 0x10 ^ p[0x3] &amp;lt;&amp;lt; 0x10,
                            i[0x1] &amp;#x3D; p[0x2] ^ p[0x7] &amp;gt;&amp;gt;&amp;gt; 0x10 ^ p[0x5] &amp;lt;&amp;lt; 0x10,
                            i[0x2] &amp;#x3D; p[0x4] ^ p[0x1] &amp;gt;&amp;gt;&amp;gt; 0x10 ^ p[0x7] &amp;lt;&amp;lt; 0x10,
                            i[0x3] &amp;#x3D; p[0x6] ^ p[0x3] &amp;gt;&amp;gt;&amp;gt; 0x10 ^ p[0x1] &amp;lt;&amp;lt; 0x10;
                        for (var q &amp;#x3D; 0x0; q &amp;lt; 0x4; q++) &amp;#123;
                            i[q] &amp;#x3D; (i[q] &amp;lt;&amp;lt; 0x8 | i[q] &amp;gt;&amp;gt;&amp;gt; 0x18) &amp;amp; 0xff00ff | (i[q] &amp;lt;&amp;lt; 0x18 | i[q] &amp;gt;&amp;gt;&amp;gt; 0x8) &amp;amp; 0xff00ff00,
                                n[o + q] ^&amp;#x3D; i[q];
                        &amp;#125;
                    &amp;#125;,
                    &amp;#39;blockSize&amp;#39;: 0x80 &amp;#x2F; 0x20,
                    &amp;#39;ivSize&amp;#39;: 0x40 &amp;#x2F; 0x20
                &amp;#125;);

                function m() &amp;#123;
                    var n &amp;#x3D; this[&amp;#39;_X&amp;#39;]
                        , o &amp;#x3D; this[&amp;#39;_C&amp;#39;];
                    for (var p &amp;#x3D; 0x0; p &amp;lt; 0x8; p++) &amp;#123;
                        j[p] &amp;#x3D; o[p];
                    &amp;#125;
                    o[0x0] &amp;#x3D; o[0x0] + 0x4d34d34d + this[&amp;#39;_b&amp;#39;] | 0x0,
                        o[0x1] &amp;#x3D; o[0x1] + 0xd34d34d3 + (o[0x0] &amp;gt;&amp;gt;&amp;gt; 0x0 &amp;lt; j[0x0] &amp;gt;&amp;gt;&amp;gt; 0x0 ? 0x1 : 0x0) | 0x0,
                        o[0x2] &amp;#x3D; o[0x2] + 0x34d34d34 + (o[0x1] &amp;gt;&amp;gt;&amp;gt; 0x0 &amp;lt; j[0x1] &amp;gt;&amp;gt;&amp;gt; 0x0 ? 0x1 : 0x0) | 0x0,
                        o[0x3] &amp;#x3D; o[0x3] + 0x4d34d34d + (o[0x2] &amp;gt;&amp;gt;&amp;gt; 0x0 &amp;lt; j[0x2] &amp;gt;&amp;gt;&amp;gt; 0x0 ? 0x1 : 0x0) | 0x0,
                        o[0x4] &amp;#x3D; o[0x4] + 0xd34d34d3 + (o[0x3] &amp;gt;&amp;gt;&amp;gt; 0x0 &amp;lt; j[0x3] &amp;gt;&amp;gt;&amp;gt; 0x0 ? 0x1 : 0x0) | 0x0,
                        o[0x5] &amp;#x3D; o[0x5] + 0x34d34d34 + (o[0x4] &amp;gt;&amp;gt;&amp;gt; 0x0 &amp;lt; j[0x4] &amp;gt;&amp;gt;&amp;gt; 0x0 ? 0x1 : 0x0) | 0x0,
                        o[0x6] &amp;#x3D; o[0x6] + 0x4d34d34d + (o[0x5] &amp;gt;&amp;gt;&amp;gt; 0x0 &amp;lt; j[0x5] &amp;gt;&amp;gt;&amp;gt; 0x0 ? 0x1 : 0x0) | 0x0,
                        o[0x7] &amp;#x3D; o[0x7] + 0xd34d34d3 + (o[0x6] &amp;gt;&amp;gt;&amp;gt; 0x0 &amp;lt; j[0x6] &amp;gt;&amp;gt;&amp;gt; 0x0 ? 0x1 : 0x0) | 0x0,
                        this[&amp;#39;_b&amp;#39;] &amp;#x3D; o[0x7] &amp;gt;&amp;gt;&amp;gt; 0x0 &amp;lt; j[0x7] &amp;gt;&amp;gt;&amp;gt; 0x0 ? 0x1 : 0x0;
                    for (var p &amp;#x3D; 0x0; p &amp;lt; 0x8; p++) &amp;#123;
                        var q &amp;#x3D; n[p] + o[p]
                            , r &amp;#x3D; q &amp;amp; 0xffff
                            , s &amp;#x3D; q &amp;gt;&amp;gt;&amp;gt; 0x10
                            , t &amp;#x3D; ((r * r &amp;gt;&amp;gt;&amp;gt; 0x11) + r * s &amp;gt;&amp;gt;&amp;gt; 0xf) + s * s
                            , u &amp;#x3D; ((q &amp;amp; 0xffff0000) * q | 0x0) + ((q &amp;amp; 0xffff) * q | 0x0);
                        k[p] &amp;#x3D; t ^ u;
                    &amp;#125;
                    n[0x0] &amp;#x3D; k[0x0] + (k[0x7] &amp;lt;&amp;lt; 0x10 | k[0x7] &amp;gt;&amp;gt;&amp;gt; 0x10) + (k[0x6] &amp;lt;&amp;lt; 0x10 | k[0x6] &amp;gt;&amp;gt;&amp;gt; 0x10) | 0x0,
                        n[0x1] &amp;#x3D; k[0x1] + (k[0x0] &amp;lt;&amp;lt; 0x8 | k[0x0] &amp;gt;&amp;gt;&amp;gt; 0x18) + k[0x7] | 0x0,
                        n[0x2] &amp;#x3D; k[0x2] + (k[0x1] &amp;lt;&amp;lt; 0x10 | k[0x1] &amp;gt;&amp;gt;&amp;gt; 0x10) + (k[0x0] &amp;lt;&amp;lt; 0x10 | k[0x0] &amp;gt;&amp;gt;&amp;gt; 0x10) | 0x0,
                        n[0x3] &amp;#x3D; k[0x3] + (k[0x2] &amp;lt;&amp;lt; 0x8 | k[0x2] &amp;gt;&amp;gt;&amp;gt; 0x18) + k[0x1] | 0x0,
                        n[0x4] &amp;#x3D; k[0x4] + (k[0x3] &amp;lt;&amp;lt; 0x10 | k[0x3] &amp;gt;&amp;gt;&amp;gt; 0x10) + (k[0x2] &amp;lt;&amp;lt; 0x10 | k[0x2] &amp;gt;&amp;gt;&amp;gt; 0x10) | 0x0,
                        n[0x5] &amp;#x3D; k[0x5] + (k[0x4] &amp;lt;&amp;lt; 0x8 | k[0x4] &amp;gt;&amp;gt;&amp;gt; 0x18) + k[0x3] | 0x0,
                        n[0x6] &amp;#x3D; k[0x6] + (k[0x5] &amp;lt;&amp;lt; 0x10 | k[0x5] &amp;gt;&amp;gt;&amp;gt; 0x10) + (k[0x4] &amp;lt;&amp;lt; 0x10 | k[0x4] &amp;gt;&amp;gt;&amp;gt; 0x10) | 0x0,
                        n[0x7] &amp;#x3D; k[0x7] + (k[0x6] &amp;lt;&amp;lt; 0x8 | k[0x6] &amp;gt;&amp;gt;&amp;gt; 0x18) + k[0x5] | 0x0;
                &amp;#125;

                e[&amp;#39;RabbitLegacy&amp;#39;] &amp;#x3D; g[&amp;#39;_createHelper&amp;#39;](l);
            &amp;#125;()),
                d[&amp;#39;RabbitLegacy&amp;#39;];
        &amp;#125;));
    &amp;#125;
        , &amp;#123;
            &amp;#39;.&amp;#x2F;cipher-core&amp;#39;: 0x4,
            &amp;#39;.&amp;#x2F;core&amp;#39;: 0x5,
            &amp;#39;.&amp;#x2F;enc-base64&amp;#39;: 0x6,
            &amp;#39;.&amp;#x2F;evpkdf&amp;#39;: 0x9,
            &amp;#39;.&amp;#x2F;md5&amp;#39;: 0xe
        &amp;#125;],
    0x1b: [function (a, b, c) &amp;#123;
        ;(function (d, e, f) &amp;#123;
            if (typeof c &amp;#x3D;&amp;#x3D;&amp;#x3D; &amp;#39;object&amp;#39;)
                b[&amp;#39;exports&amp;#39;] &amp;#x3D; c &amp;#x3D; e(a(&amp;#39;.&amp;#x2F;core&amp;#39;), a(&amp;#39;.&amp;#x2F;enc-base64&amp;#39;), a(&amp;#39;.&amp;#x2F;md5&amp;#39;), a(&amp;#39;.&amp;#x2F;evpkdf&amp;#39;), a(&amp;#39;.&amp;#x2F;cipher-core&amp;#39;));
            else
                typeof define &amp;#x3D;&amp;#x3D;&amp;#x3D; &amp;#39;function&amp;#39; &amp;amp;&amp;amp; define[&amp;#39;amd&amp;#39;] ? define([&amp;#39;.&amp;#x2F;core&amp;#39;, &amp;#39;.&amp;#x2F;enc-base64&amp;#39;, &amp;#39;.&amp;#x2F;md5&amp;#39;, &amp;#39;.&amp;#x2F;evpkdf&amp;#39;, &amp;#39;.&amp;#x2F;cipher-core&amp;#39;], e) : e(d[&amp;#39;CryptoJS&amp;#39;]);
        &amp;#125;(this, function (d) &amp;#123;
            return (function () &amp;#123;
                var e &amp;#x3D; d
                    , f &amp;#x3D; e[&amp;#39;lib&amp;#39;]
                    , g &amp;#x3D; f[&amp;#39;StreamCipher&amp;#39;]
                    , h &amp;#x3D; e[&amp;#39;algo&amp;#39;]
                    , i &amp;#x3D; []
                    , j &amp;#x3D; []
                    , k &amp;#x3D; []
                    , l &amp;#x3D; h[&amp;#39;Rabbit&amp;#39;] &amp;#x3D; g[&amp;#39;extend&amp;#39;](&amp;#123;
                    &amp;#39;_doReset&amp;#39;: function () &amp;#123;
                        var n &amp;#x3D; this[&amp;#39;_key&amp;#39;][&amp;#39;words&amp;#39;]
                            , o &amp;#x3D; this[&amp;#39;cfg&amp;#39;][&amp;#39;iv&amp;#39;];
                        for (var p &amp;#x3D; 0x0; p &amp;lt; 0x4; p++) &amp;#123;
                            n[p] &amp;#x3D; (n[p] &amp;lt;&amp;lt; 0x8 | n[p] &amp;gt;&amp;gt;&amp;gt; 0x18) &amp;amp; 0xff00ff | (n[p] &amp;lt;&amp;lt; 0x18 | n[p] &amp;gt;&amp;gt;&amp;gt; 0x8) &amp;amp; 0xff00ff00;
                        &amp;#125;
                        var q &amp;#x3D; this[&amp;#39;_X&amp;#39;] &amp;#x3D; [n[0x0], n[0x3] &amp;lt;&amp;lt; 0x10 | n[0x2] &amp;gt;&amp;gt;&amp;gt; 0x10, n[0x1], n[0x0] &amp;lt;&amp;lt; 0x10 | n[0x3] &amp;gt;&amp;gt;&amp;gt; 0x10, n[0x2], n[0x1] &amp;lt;&amp;lt; 0x10 | n[0x0] &amp;gt;&amp;gt;&amp;gt; 0x10, n[0x3], n[0x2] &amp;lt;&amp;lt; 0x10 | n[0x1] &amp;gt;&amp;gt;&amp;gt; 0x10]
                            ,
                            r &amp;#x3D; this[&amp;#39;_C&amp;#39;] &amp;#x3D; [n[0x2] &amp;lt;&amp;lt; 0x10 | n[0x2] &amp;gt;&amp;gt;&amp;gt; 0x10, n[0x0] &amp;amp; 0xffff0000 | n[0x1] &amp;amp; 0xffff, n[0x3] &amp;lt;&amp;lt; 0x10 | n[0x3] &amp;gt;&amp;gt;&amp;gt; 0x10, n[0x1] &amp;amp; 0xffff0000 | n[0x2] &amp;amp; 0xffff, n[0x0] &amp;lt;&amp;lt; 0x10 | n[0x0] &amp;gt;&amp;gt;&amp;gt; 0x10, n[0x2] &amp;amp; 0xffff0000 | n[0x3] &amp;amp; 0xffff, n[0x1] &amp;lt;&amp;lt; 0x10 | n[0x1] &amp;gt;&amp;gt;&amp;gt; 0x10, n[0x3] &amp;amp; 0xffff0000 | n[0x0] &amp;amp; 0xffff];
                        this[&amp;#39;_b&amp;#39;] &amp;#x3D; 0x0;
                        for (var p &amp;#x3D; 0x0; p &amp;lt; 0x4; p++) &amp;#123;
                            m[&amp;#39;call&amp;#39;](this);
                        &amp;#125;
                        for (var p &amp;#x3D; 0x0; p &amp;lt; 0x8; p++) &amp;#123;
                            r[p] ^&amp;#x3D; q[p + 0x4 &amp;amp; 0x7];
                        &amp;#125;
                        if (o) &amp;#123;
                            var s &amp;#x3D; o[&amp;#39;words&amp;#39;]
                                , t &amp;#x3D; s[0x0]
                                , u &amp;#x3D; s[0x1]
                                , v &amp;#x3D; (t &amp;lt;&amp;lt; 0x8 | t &amp;gt;&amp;gt;&amp;gt; 0x18) &amp;amp; 0xff00ff | (t &amp;lt;&amp;lt; 0x18 | t &amp;gt;&amp;gt;&amp;gt; 0x8) &amp;amp; 0xff00ff00
                                , w &amp;#x3D; (u &amp;lt;&amp;lt; 0x8 | u &amp;gt;&amp;gt;&amp;gt; 0x18) &amp;amp; 0xff00ff | (u &amp;lt;&amp;lt; 0x18 | u &amp;gt;&amp;gt;&amp;gt; 0x8) &amp;amp; 0xff00ff00
                                , x &amp;#x3D; v &amp;gt;&amp;gt;&amp;gt; 0x10 | w &amp;amp; 0xffff0000
                                , y &amp;#x3D; w &amp;lt;&amp;lt; 0x10 | v &amp;amp; 0xffff;
                            r[0x0] ^&amp;#x3D; v,
                                r[0x1] ^&amp;#x3D; x,
                                r[0x2] ^&amp;#x3D; w,
                                r[0x3] ^&amp;#x3D; y,
                                r[0x4] ^&amp;#x3D; v,
                                r[0x5] ^&amp;#x3D; x,
                                r[0x6] ^&amp;#x3D; w,
                                r[0x7] ^&amp;#x3D; y;
                            for (var p &amp;#x3D; 0x0; p &amp;lt; 0x4; p++) &amp;#123;
                                m[&amp;#39;call&amp;#39;](this);
                            &amp;#125;
                        &amp;#125;
                    &amp;#125;,
                    &amp;#39;_doProcessBlock&amp;#39;: function (n, o) &amp;#123;
                        var p &amp;#x3D; this[&amp;#39;_X&amp;#39;];
                        m[&amp;#39;call&amp;#39;](this),
                            i[0x0] &amp;#x3D; p[0x0] ^ p[0x5] &amp;gt;&amp;gt;&amp;gt; 0x10 ^ p[0x3] &amp;lt;&amp;lt; 0x10,
                            i[0x1] &amp;#x3D; p[0x2] ^ p[0x7] &amp;gt;&amp;gt;&amp;gt; 0x10 ^ p[0x5] &amp;lt;&amp;lt; 0x10,
                            i[0x2] &amp;#x3D; p[0x4] ^ p[0x1] &amp;gt;&amp;gt;&amp;gt; 0x10 ^ p[0x7] &amp;lt;&amp;lt; 0x10,
                            i[0x3] &amp;#x3D; p[0x6] ^ p[0x3] &amp;gt;&amp;gt;&amp;gt; 0x10 ^ p[0x1] &amp;lt;&amp;lt; 0x10;
                        for (var q &amp;#x3D; 0x0; q &amp;lt; 0x4; q++) &amp;#123;
                            i[q] &amp;#x3D; (i[q] &amp;lt;&amp;lt; 0x8 | i[q] &amp;gt;&amp;gt;&amp;gt; 0x18) &amp;amp; 0xff00ff | (i[q] &amp;lt;&amp;lt; 0x18 | i[q] &amp;gt;&amp;gt;&amp;gt; 0x8) &amp;amp; 0xff00ff00,
                                n[o + q] ^&amp;#x3D; i[q];
                        &amp;#125;
                    &amp;#125;,
                    &amp;#39;blockSize&amp;#39;: 0x80 &amp;#x2F; 0x20,
                    &amp;#39;ivSize&amp;#39;: 0x40 &amp;#x2F; 0x20
                &amp;#125;);

                function m() &amp;#123;
                    var n &amp;#x3D; this[&amp;#39;_X&amp;#39;]
                        , o &amp;#x3D; this[&amp;#39;_C&amp;#39;];
                    for (var p &amp;#x3D; 0x0; p &amp;lt; 0x8; p++) &amp;#123;
                        j[p] &amp;#x3D; o[p];
                    &amp;#125;
                    o[0x0] &amp;#x3D; o[0x0] + 0x4d34d34d + this[&amp;#39;_b&amp;#39;] | 0x0,
                        o[0x1] &amp;#x3D; o[0x1] + 0xd34d34d3 + (o[0x0] &amp;gt;&amp;gt;&amp;gt; 0x0 &amp;lt; j[0x0] &amp;gt;&amp;gt;&amp;gt; 0x0 ? 0x1 : 0x0) | 0x0,
                        o[0x2] &amp;#x3D; o[0x2] + 0x34d34d34 + (o[0x1] &amp;gt;&amp;gt;&amp;gt; 0x0 &amp;lt; j[0x1] &amp;gt;&amp;gt;&amp;gt; 0x0 ? 0x1 : 0x0) | 0x0,
                        o[0x3] &amp;#x3D; o[0x3] + 0x4d34d34d + (o[0x2] &amp;gt;&amp;gt;&amp;gt; 0x0 &amp;lt; j[0x2] &amp;gt;&amp;gt;&amp;gt; 0x0 ? 0x1 : 0x0) | 0x0,
                        o[0x4] &amp;#x3D; o[0x4] + 0xd34d34d3 + (o[0x3] &amp;gt;&amp;gt;&amp;gt; 0x0 &amp;lt; j[0x3] &amp;gt;&amp;gt;&amp;gt; 0x0 ? 0x1 : 0x0) | 0x0,
                        o[0x5] &amp;#x3D; o[0x5] + 0x34d34d34 + (o[0x4] &amp;gt;&amp;gt;&amp;gt; 0x0 &amp;lt; j[0x4] &amp;gt;&amp;gt;&amp;gt; 0x0 ? 0x1 : 0x0) | 0x0,
                        o[0x6] &amp;#x3D; o[0x6] + 0x4d34d34d + (o[0x5] &amp;gt;&amp;gt;&amp;gt; 0x0 &amp;lt; j[0x5] &amp;gt;&amp;gt;&amp;gt; 0x0 ? 0x1 : 0x0) | 0x0,
                        o[0x7] &amp;#x3D; o[0x7] + 0xd34d34d3 + (o[0x6] &amp;gt;&amp;gt;&amp;gt; 0x0 &amp;lt; j[0x6] &amp;gt;&amp;gt;&amp;gt; 0x0 ? 0x1 : 0x0) | 0x0,
                        this[&amp;#39;_b&amp;#39;] &amp;#x3D; o[0x7] &amp;gt;&amp;gt;&amp;gt; 0x0 &amp;lt; j[0x7] &amp;gt;&amp;gt;&amp;gt; 0x0 ? 0x1 : 0x0;
                    for (var p &amp;#x3D; 0x0; p &amp;lt; 0x8; p++) &amp;#123;
                        var q &amp;#x3D; n[p] + o[p]
                            , r &amp;#x3D; q &amp;amp; 0xffff
                            , s &amp;#x3D; q &amp;gt;&amp;gt;&amp;gt; 0x10
                            , t &amp;#x3D; ((r * r &amp;gt;&amp;gt;&amp;gt; 0x11) + r * s &amp;gt;&amp;gt;&amp;gt; 0xf) + s * s
                            , u &amp;#x3D; ((q &amp;amp; 0xffff0000) * q | 0x0) + ((q &amp;amp; 0xffff) * q | 0x0);
                        k[p] &amp;#x3D; t ^ u;
                    &amp;#125;
                    n[0x0] &amp;#x3D; k[0x0] + (k[0x7] &amp;lt;&amp;lt; 0x10 | k[0x7] &amp;gt;&amp;gt;&amp;gt; 0x10) + (k[0x6] &amp;lt;&amp;lt; 0x10 | k[0x6] &amp;gt;&amp;gt;&amp;gt; 0x10) | 0x0,
                        n[0x1] &amp;#x3D; k[0x1] + (k[0x0] &amp;lt;&amp;lt; 0x8 | k[0x0] &amp;gt;&amp;gt;&amp;gt; 0x18) + k[0x7] | 0x0,
                        n[0x2] &amp;#x3D; k[0x2] + (k[0x1] &amp;lt;&amp;lt; 0x10 | k[0x1] &amp;gt;&amp;gt;&amp;gt; 0x10) + (k[0x0] &amp;lt;&amp;lt; 0x10 | k[0x0] &amp;gt;&amp;gt;&amp;gt; 0x10) | 0x0,
                        n[0x3] &amp;#x3D; k[0x3] + (k[0x2] &amp;lt;&amp;lt; 0x8 | k[0x2] &amp;gt;&amp;gt;&amp;gt; 0x18) + k[0x1] | 0x0,
                        n[0x4] &amp;#x3D; k[0x4] + (k[0x3] &amp;lt;&amp;lt; 0x10 | k[0x3] &amp;gt;&amp;gt;&amp;gt; 0x10) + (k[0x2] &amp;lt;&amp;lt; 0x10 | k[0x2] &amp;gt;&amp;gt;&amp;gt; 0x10) | 0x0,
                        n[0x5] &amp;#x3D; k[0x5] + (k[0x4] &amp;lt;&amp;lt; 0x8 | k[0x4] &amp;gt;&amp;gt;&amp;gt; 0x18) + k[0x3] | 0x0,
                        n[0x6] &amp;#x3D; k[0x6] + (k[0x5] &amp;lt;&amp;lt; 0x10 | k[0x5] &amp;gt;&amp;gt;&amp;gt; 0x10) + (k[0x4] &amp;lt;&amp;lt; 0x10 | k[0x4] &amp;gt;&amp;gt;&amp;gt; 0x10) | 0x0,
                        n[0x7] &amp;#x3D; k[0x7] + (k[0x6] &amp;lt;&amp;lt; 0x8 | k[0x6] &amp;gt;&amp;gt;&amp;gt; 0x18) + k[0x5] | 0x0;
                &amp;#125;

                e[&amp;#39;Rabbit&amp;#39;] &amp;#x3D; g[&amp;#39;_createHelper&amp;#39;](l);
            &amp;#125;()),
                d[&amp;#39;Rabbit&amp;#39;];
        &amp;#125;));
    &amp;#125;
        , &amp;#123;
            &amp;#39;.&amp;#x2F;cipher-core&amp;#39;: 0x4,
            &amp;#39;.&amp;#x2F;core&amp;#39;: 0x5,
            &amp;#39;.&amp;#x2F;enc-base64&amp;#39;: 0x6,
            &amp;#39;.&amp;#x2F;evpkdf&amp;#39;: 0x9,
            &amp;#39;.&amp;#x2F;md5&amp;#39;: 0xe
        &amp;#125;],
    0x1c: [function (a, b, c) &amp;#123;
        ;(function (d, e, f) &amp;#123;
            if (typeof c &amp;#x3D;&amp;#x3D;&amp;#x3D; &amp;#39;object&amp;#39;)
                b[&amp;#39;exports&amp;#39;] &amp;#x3D; c &amp;#x3D; e(a(&amp;#39;.&amp;#x2F;core&amp;#39;), a(&amp;#39;.&amp;#x2F;enc-base64&amp;#39;), a(&amp;#39;.&amp;#x2F;md5&amp;#39;), a(&amp;#39;.&amp;#x2F;evpkdf&amp;#39;), a(&amp;#39;.&amp;#x2F;cipher-core&amp;#39;));
            else
                typeof define &amp;#x3D;&amp;#x3D;&amp;#x3D; &amp;#39;function&amp;#39; &amp;amp;&amp;amp; define[&amp;#39;amd&amp;#39;] ? define([&amp;#39;.&amp;#x2F;core&amp;#39;, &amp;#39;.&amp;#x2F;enc-base64&amp;#39;, &amp;#39;.&amp;#x2F;md5&amp;#39;, &amp;#39;.&amp;#x2F;evpkdf&amp;#39;, &amp;#39;.&amp;#x2F;cipher-core&amp;#39;], e) : e(d[&amp;#39;CryptoJS&amp;#39;]);
        &amp;#125;(this, function (d) &amp;#123;
            return (function () &amp;#123;
                var e &amp;#x3D; d
                    , f &amp;#x3D; e[&amp;#39;lib&amp;#39;]
                    , g &amp;#x3D; f[&amp;#39;StreamCipher&amp;#39;]
                    , h &amp;#x3D; e[&amp;#39;algo&amp;#39;]
                    , i &amp;#x3D; h[&amp;#39;RC4&amp;#39;] &amp;#x3D; g[&amp;#39;extend&amp;#39;](&amp;#123;
                    &amp;#39;_doReset&amp;#39;: function () &amp;#123;
                        var l &amp;#x3D; this[&amp;#39;_key&amp;#39;]
                            , m &amp;#x3D; l[&amp;#39;words&amp;#39;]
                            , n &amp;#x3D; l[&amp;#39;sigBytes&amp;#39;]
                            , o &amp;#x3D; this[&amp;#39;_S&amp;#39;] &amp;#x3D; [];
                        for (var p &amp;#x3D; 0x0; p &amp;lt; 0x100; p++) &amp;#123;
                            o[p] &amp;#x3D; p;
                        &amp;#125;
                        for (var p &amp;#x3D; 0x0, q &amp;#x3D; 0x0; p &amp;lt; 0x100; p++) &amp;#123;
                            var r &amp;#x3D; p % n
                                , s &amp;#x3D; m[r &amp;gt;&amp;gt;&amp;gt; 0x2] &amp;gt;&amp;gt;&amp;gt; 0x18 - r % 0x4 * 0x8 &amp;amp; 0xff;
                            q &amp;#x3D; (q + o[p] + s) % 0x100;
                            var u &amp;#x3D; o[p];
                            o[p] &amp;#x3D; o[q],
                                o[q] &amp;#x3D; u;
                        &amp;#125;
                        this[&amp;#39;_i&amp;#39;] &amp;#x3D; this[&amp;#39;_j&amp;#39;] &amp;#x3D; 0x0;
                    &amp;#125;,
                    &amp;#39;_doProcessBlock&amp;#39;: function (l, m) &amp;#123;
                        l[m] ^&amp;#x3D; j[&amp;#39;call&amp;#39;](this);
                    &amp;#125;,
                    &amp;#39;keySize&amp;#39;: 0x100 &amp;#x2F; 0x20,
                    &amp;#39;ivSize&amp;#39;: 0x0
                &amp;#125;);

                function j() &amp;#123;
                    var l &amp;#x3D; this[&amp;#39;_S&amp;#39;]
                        , m &amp;#x3D; this[&amp;#39;_i&amp;#39;]
                        , o &amp;#x3D; this[&amp;#39;_j&amp;#39;]
                        , p &amp;#x3D; 0x0;
                    for (var q &amp;#x3D; 0x0; q &amp;lt; 0x4; q++) &amp;#123;
                        m &amp;#x3D; (m + 0x1) % 0x100,
                            o &amp;#x3D; (o + l[m]) % 0x100;
                        var r &amp;#x3D; l[m];
                        l[m] &amp;#x3D; l[o],
                            l[o] &amp;#x3D; r,
                            p |&amp;#x3D; l[(l[m] + l[o]) % 0x100] &amp;lt;&amp;lt; 0x18 - q * 0x8;
                    &amp;#125;
                    return this[&amp;#39;_i&amp;#39;] &amp;#x3D; m,
                        this[&amp;#39;_j&amp;#39;] &amp;#x3D; o,
                        p;
                &amp;#125;

                e[&amp;#39;RC4&amp;#39;] &amp;#x3D; g[&amp;#39;_createHelper&amp;#39;](i);
                var k &amp;#x3D; h[&amp;#39;RC4Drop&amp;#39;] &amp;#x3D; i[&amp;#39;extend&amp;#39;](&amp;#123;
                    &amp;#39;cfg&amp;#39;: i[&amp;#39;cfg&amp;#39;][&amp;#39;extend&amp;#39;](&amp;#123;
                        &amp;#39;drop&amp;#39;: 0xc0
                    &amp;#125;),
                    &amp;#39;_doReset&amp;#39;: function () &amp;#123;
                        i[&amp;#39;_doReset&amp;#39;][&amp;#39;call&amp;#39;](this);
                        for (var l &amp;#x3D; this[&amp;#39;cfg&amp;#39;][&amp;#39;drop&amp;#39;]; l &amp;gt; 0x0; l--) &amp;#123;
                            j[&amp;#39;call&amp;#39;](this);
                        &amp;#125;
                    &amp;#125;
                &amp;#125;);
                e[&amp;#39;RC4Drop&amp;#39;] &amp;#x3D; g[&amp;#39;_createHelper&amp;#39;](k);
            &amp;#125;()),
                d[&amp;#39;RC4&amp;#39;];
        &amp;#125;));
    &amp;#125;
        , &amp;#123;
            &amp;#39;.&amp;#x2F;cipher-core&amp;#39;: 0x4,
            &amp;#39;.&amp;#x2F;core&amp;#39;: 0x5,
            &amp;#39;.&amp;#x2F;enc-base64&amp;#39;: 0x6,
            &amp;#39;.&amp;#x2F;evpkdf&amp;#39;: 0x9,
            &amp;#39;.&amp;#x2F;md5&amp;#39;: 0xe
        &amp;#125;],
    0x1d: [function (a, b, c) &amp;#123;
        ;(function (d, e) &amp;#123;
            if (typeof c &amp;#x3D;&amp;#x3D;&amp;#x3D; &amp;#39;object&amp;#39;)
                b[&amp;#39;exports&amp;#39;] &amp;#x3D; c &amp;#x3D; e(a(&amp;#39;.&amp;#x2F;core&amp;#39;));
            else
                typeof define &amp;#x3D;&amp;#x3D;&amp;#x3D; &amp;#39;function&amp;#39; &amp;amp;&amp;amp; define[&amp;#39;amd&amp;#39;] ? define([&amp;#39;.&amp;#x2F;core&amp;#39;], e) : e(d[&amp;#39;CryptoJS&amp;#39;]);
        &amp;#125;(this, function (d) &amp;#123;
            return function (e) &amp;#123;
                var f &amp;#x3D; d
                    , g &amp;#x3D; f[&amp;#39;lib&amp;#39;]
                    , h &amp;#x3D; g[&amp;#39;WordArray&amp;#39;]
                    , i &amp;#x3D; g[&amp;#39;Hasher&amp;#39;]
                    , j &amp;#x3D; f[&amp;#39;algo&amp;#39;]
                    ,
                    k &amp;#x3D; h[&amp;#39;create&amp;#39;]([0x0, 0x1, 0x2, 0x3, 0x4, 0x5, 0x6, 0x7, 0x8, 0x9, 0xa, 0xb, 0xc, 0xd, 0xe, 0xf, 0x7, 0x4, 0xd, 0x1, 0xa, 0x6, 0xf, 0x3, 0xc, 0x0, 0x9, 0x5, 0x2, 0xe, 0xb, 0x8, 0x3, 0xa, 0xe, 0x4, 0x9, 0xf, 0x8, 0x1, 0x2, 0x7, 0x0, 0x6, 0xd, 0xb, 0x5, 0xc, 0x1, 0x9, 0xb, 0xa, 0x0, 0x8, 0xc, 0x4, 0xd, 0x3, 0x7, 0xf, 0xe, 0x5, 0x6, 0x2, 0x4, 0x0, 0x5, 0x9, 0x7, 0xc, 0x2, 0xa, 0xe, 0x1, 0x3, 0x8, 0xb, 0x6, 0xf, 0xd])
                    ,
                    l &amp;#x3D; h[&amp;#39;create&amp;#39;]([0x5, 0xe, 0x7, 0x0, 0x9, 0x2, 0xb, 0x4, 0xd, 0x6, 0xf, 0x8, 0x1, 0xa, 0x3, 0xc, 0x6, 0xb, 0x3, 0x7, 0x0, 0xd, 0x5, 0xa, 0xe, 0xf, 0x8, 0xc, 0x4, 0x9, 0x1, 0x2, 0xf, 0x5, 0x1, 0x3, 0x7, 0xe, 0x6, 0x9, 0xb, 0x8, 0xc, 0x2, 0xa, 0x0, 0x4, 0xd, 0x8, 0x6, 0x4, 0x1, 0x3, 0xb, 0xf, 0x0, 0x5, 0xc, 0x2, 0xd, 0x9, 0x7, 0xa, 0xe, 0xc, 0xf, 0xa, 0x4, 0x1, 0x5, 0x8, 0x7, 0x6, 0x2, 0xd, 0xe, 0x0, 0x3, 0x9, 0xb])
                    ,
                    m &amp;#x3D; h[&amp;#39;create&amp;#39;]([0xb, 0xe, 0xf, 0xc, 0x5, 0x8, 0x7, 0x9, 0xb, 0xd, 0xe, 0xf, 0x6, 0x7, 0x9, 0x8, 0x7, 0x6, 0x8, 0xd, 0xb, 0x9, 0x7, 0xf, 0x7, 0xc, 0xf, 0x9, 0xb, 0x7, 0xd, 0xc, 0xb, 0xd, 0x6, 0x7, 0xe, 0x9, 0xd, 0xf, 0xe, 0x8, 0xd, 0x6, 0x5, 0xc, 0x7, 0x5, 0xb, 0xc, 0xe, 0xf, 0xe, 0xf, 0x9, 0x8, 0x9, 0xe, 0x5, 0x6, 0x8, 0x6, 0x5, 0xc, 0x9, 0xf, 0x5, 0xb, 0x6, 0x8, 0xd, 0xc, 0x5, 0xc, 0xd, 0xe, 0xb, 0x8, 0x5, 0x6])
                    ,
                    n &amp;#x3D; h[&amp;#39;create&amp;#39;]([0x8, 0x9, 0x9, 0xb, 0xd, 0xf, 0xf, 0x5, 0x7, 0x7, 0x8, 0xb, 0xe, 0xe, 0xc, 0x6, 0x9, 0xd, 0xf, 0x7, 0xc, 0x8, 0x9, 0xb, 0x7, 0x7, 0xc, 0x7, 0x6, 0xf, 0xd, 0xb, 0x9, 0x7, 0xf, 0xb, 0x8, 0x6, 0x6, 0xe, 0xc, 0xd, 0x5, 0xe, 0xd, 0xd, 0x7, 0x5, 0xf, 0x5, 0x8, 0xb, 0xe, 0xe, 0x6, 0xe, 0x6, 0x9, 0xc, 0x9, 0xc, 0x5, 0xf, 0x8, 0x8, 0x5, 0xc, 0x9, 0xc, 0x5, 0xe, 0x6, 0x8, 0xd, 0x6, 0x5, 0xf, 0xd, 0xb, 0xb])
                    , o &amp;#x3D; h[&amp;#39;create&amp;#39;]([0x0, 0x5a827999, 0x6ed9eba1, 0x8f1bbcdc, 0xa953fd4e])
                    , p &amp;#x3D; h[&amp;#39;create&amp;#39;]([0x50a28be6, 0x5c4dd124, 0x6d703ef3, 0x7a6d76e9, 0x0])
                    , q &amp;#x3D; j[&amp;#39;RIPEMD160&amp;#39;] &amp;#x3D; i[&amp;#39;extend&amp;#39;](&amp;#123;
                        &amp;#39;_doReset&amp;#39;: function () &amp;#123;
                            this[&amp;#39;_hash&amp;#39;] &amp;#x3D; h[&amp;#39;create&amp;#39;]([0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0]);
                        &amp;#125;,
                        &amp;#39;_doProcessBlock&amp;#39;: function (x, y) &amp;#123;
                            for (var z &amp;#x3D; 0x0; z &amp;lt; 0x10; z++) &amp;#123;
                                var A &amp;#x3D; y + z
                                    , B &amp;#x3D; x[A];
                                x[A] &amp;#x3D; (B &amp;lt;&amp;lt; 0x8 | B &amp;gt;&amp;gt;&amp;gt; 0x18) &amp;amp; 0xff00ff | (B &amp;lt;&amp;lt; 0x18 | B &amp;gt;&amp;gt;&amp;gt; 0x8) &amp;amp; 0xff00ff00;
                            &amp;#125;
                            var D &amp;#x3D; this[&amp;#39;_hash&amp;#39;][&amp;#39;words&amp;#39;], E &amp;#x3D; o[&amp;#39;words&amp;#39;], F &amp;#x3D; p[&amp;#39;words&amp;#39;], G &amp;#x3D; k[&amp;#39;words&amp;#39;], I &amp;#x3D; l[&amp;#39;words&amp;#39;],
                                J &amp;#x3D; m[&amp;#39;words&amp;#39;], K &amp;#x3D; n[&amp;#39;words&amp;#39;], L, N, O, P, Q, R, S, T, U, V;
                            R &amp;#x3D; L &amp;#x3D; D[0x0],
                                S &amp;#x3D; N &amp;#x3D; D[0x1],
                                T &amp;#x3D; O &amp;#x3D; D[0x2],
                                U &amp;#x3D; P &amp;#x3D; D[0x3],
                                V &amp;#x3D; Q &amp;#x3D; D[0x4];
                            var W;
                            for (var z &amp;#x3D; 0x0; z &amp;lt; 0x50; z +&amp;#x3D; 0x1) &amp;#123;
                                W &amp;#x3D; L + x[y + G[z]] | 0x0;
                                if (z &amp;lt; 0x10)
                                    W +&amp;#x3D; r(N, O, P) + E[0x0];
                                else &amp;#123;
                                    if (z &amp;lt; 0x20)
                                        W +&amp;#x3D; s(N, O, P) + E[0x1];
                                    else &amp;#123;
                                        if (z &amp;lt; 0x30)
                                            W +&amp;#x3D; t(N, O, P) + E[0x2];
                                        else
                                            z &amp;lt; 0x40 ? W +&amp;#x3D; u(N, O, P) + E[0x3] : W +&amp;#x3D; v(N, O, P) + E[0x4];
                                    &amp;#125;
                                &amp;#125;
                                W &amp;#x3D; W | 0x0,
                                    W &amp;#x3D; w(W, J[z]),
                                    W &amp;#x3D; W + Q | 0x0,
                                    L &amp;#x3D; Q,
                                    Q &amp;#x3D; P,
                                    P &amp;#x3D; w(O, 0xa),
                                    O &amp;#x3D; N,
                                    N &amp;#x3D; W,
                                    W &amp;#x3D; R + x[y + I[z]] | 0x0;
                                if (z &amp;lt; 0x10)
                                    W +&amp;#x3D; v(S, T, U) + F[0x0];
                                else &amp;#123;
                                    if (z &amp;lt; 0x20)
                                        W +&amp;#x3D; u(S, T, U) + F[0x1];
                                    else &amp;#123;
                                        if (z &amp;lt; 0x30)
                                            W +&amp;#x3D; t(S, T, U) + F[0x2];
                                        else
                                            z &amp;lt; 0x40 ? W +&amp;#x3D; s(S, T, U) + F[0x3] : W +&amp;#x3D; r(S, T, U) + F[0x4];
                                    &amp;#125;
                                &amp;#125;
                                W &amp;#x3D; W | 0x0,
                                    W &amp;#x3D; w(W, K[z]),
                                    W &amp;#x3D; W + V | 0x0,
                                    R &amp;#x3D; V,
                                    V &amp;#x3D; U,
                                    U &amp;#x3D; w(T, 0xa),
                                    T &amp;#x3D; S,
                                    S &amp;#x3D; W;
                            &amp;#125;
                            W &amp;#x3D; D[0x1] + O + U | 0x0,
                                D[0x1] &amp;#x3D; D[0x2] + P + V | 0x0,
                                D[0x2] &amp;#x3D; D[0x3] + Q + R | 0x0,
                                D[0x3] &amp;#x3D; D[0x4] + L + S | 0x0,
                                D[0x4] &amp;#x3D; D[0x0] + N + T | 0x0,
                                D[0x0] &amp;#x3D; W;
                        &amp;#125;,
                        &amp;#39;_doFinalize&amp;#39;: function () &amp;#123;
                            var x &amp;#x3D; this[&amp;#39;_data&amp;#39;]
                                , y &amp;#x3D; x[&amp;#39;words&amp;#39;]
                                , z &amp;#x3D; this[&amp;#39;_nDataBytes&amp;#39;] * 0x8
                                , A &amp;#x3D; x[&amp;#39;sigBytes&amp;#39;] * 0x8;
                            y[A &amp;gt;&amp;gt;&amp;gt; 0x5] |&amp;#x3D; 0x80 &amp;lt;&amp;lt; 0x18 - A % 0x20,
                                y[(A + 0x40 &amp;gt;&amp;gt;&amp;gt; 0x9 &amp;lt;&amp;lt; 0x4) + 0xe] &amp;#x3D; (z &amp;lt;&amp;lt; 0x8 | z &amp;gt;&amp;gt;&amp;gt; 0x18) &amp;amp; 0xff00ff | (z &amp;lt;&amp;lt; 0x18 | z &amp;gt;&amp;gt;&amp;gt; 0x8) &amp;amp; 0xff00ff00,
                                x[&amp;#39;sigBytes&amp;#39;] &amp;#x3D; (y[&amp;#39;length&amp;#39;] + 0x1) * 0x4,
                                this[&amp;#39;_process&amp;#39;]();
                            var B &amp;#x3D; this[&amp;#39;_hash&amp;#39;]
                                , D &amp;#x3D; B[&amp;#39;words&amp;#39;];
                            for (var E &amp;#x3D; 0x0; E &amp;lt; 0x5; E++) &amp;#123;
                                var F &amp;#x3D; D[E];
                                D[E] &amp;#x3D; (F &amp;lt;&amp;lt; 0x8 | F &amp;gt;&amp;gt;&amp;gt; 0x18) &amp;amp; 0xff00ff | (F &amp;lt;&amp;lt; 0x18 | F &amp;gt;&amp;gt;&amp;gt; 0x8) &amp;amp; 0xff00ff00;
                            &amp;#125;
                            return B;
                        &amp;#125;,
                        &amp;#39;clone&amp;#39;: function () &amp;#123;
                            var x &amp;#x3D; i[&amp;#39;clone&amp;#39;][&amp;#39;call&amp;#39;](this);
                            return x[&amp;#39;_hash&amp;#39;] &amp;#x3D; this[&amp;#39;_hash&amp;#39;][&amp;#39;clone&amp;#39;](),
                                x;
                        &amp;#125;
                    &amp;#125;);

                function r(A, B, D) &amp;#123;
                    return A ^ B ^ D;
                &amp;#125;

                function s(A, B, D) &amp;#123;
                    return A &amp;amp; B | ~A &amp;amp; D;
                &amp;#125;

                function t(A, B, D) &amp;#123;
                    return (A | ~B) ^ D;
                &amp;#125;

                function u(A, B, D) &amp;#123;
                    return A &amp;amp; D | B &amp;amp; ~D;
                &amp;#125;

                function v(A, B, D) &amp;#123;
                    return A ^ (B | ~D);
                &amp;#125;

                function w(y, z) &amp;#123;
                    return y &amp;lt;&amp;lt; z | y &amp;gt;&amp;gt;&amp;gt; 0x20 - z;
                &amp;#125;

                f[&amp;#39;RIPEMD160&amp;#39;] &amp;#x3D; i[&amp;#39;_createHelper&amp;#39;](q),
                    f[&amp;#39;HmacRIPEMD160&amp;#39;] &amp;#x3D; i[&amp;#39;_createHmacHelper&amp;#39;](q);
            &amp;#125;(Math),
                d[&amp;#39;RIPEMD160&amp;#39;];
        &amp;#125;));
    &amp;#125;
        , &amp;#123;
            &amp;#39;.&amp;#x2F;core&amp;#39;: 0x5
        &amp;#125;],
    0x1e: [function (a, b, c) &amp;#123;
        ;(function (d, e) &amp;#123;
            if (typeof c &amp;#x3D;&amp;#x3D;&amp;#x3D; &amp;#39;object&amp;#39;)
                b[&amp;#39;exports&amp;#39;] &amp;#x3D; c &amp;#x3D; e(a(&amp;#39;.&amp;#x2F;core&amp;#39;));
            else
                typeof define &amp;#x3D;&amp;#x3D;&amp;#x3D; &amp;#39;function&amp;#39; &amp;amp;&amp;amp; define[&amp;#39;amd&amp;#39;] ? define([&amp;#39;.&amp;#x2F;core&amp;#39;], e) : e(d[&amp;#39;CryptoJS&amp;#39;]);
        &amp;#125;(this, function (d) &amp;#123;
            return (function () &amp;#123;
                var e &amp;#x3D; d
                    , f &amp;#x3D; e[&amp;#39;lib&amp;#39;]
                    , g &amp;#x3D; f[&amp;#39;WordArray&amp;#39;]
                    , h &amp;#x3D; f[&amp;#39;Hasher&amp;#39;]
                    , i &amp;#x3D; e[&amp;#39;algo&amp;#39;]
                    , j &amp;#x3D; []
                    , k &amp;#x3D; i[&amp;#39;SHA1&amp;#39;] &amp;#x3D; h[&amp;#39;extend&amp;#39;](&amp;#123;
                    &amp;#39;_doReset&amp;#39;: function () &amp;#123;
                        this[&amp;#39;_hash&amp;#39;] &amp;#x3D; new g[&amp;#39;init&amp;#39;]([0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0]);
                    &amp;#125;,
                    &amp;#39;_doProcessBlock&amp;#39;: function (l, m) &amp;#123;
                        var o &amp;#x3D; this[&amp;#39;_hash&amp;#39;][&amp;#39;words&amp;#39;]
                            , p &amp;#x3D; o[0x0]
                            , q &amp;#x3D; o[0x1]
                            , r &amp;#x3D; o[0x2]
                            , s &amp;#x3D; o[0x3]
                            , u &amp;#x3D; o[0x4];
                        for (var v &amp;#x3D; 0x0; v &amp;lt; 0x50; v++) &amp;#123;
                            if (v &amp;lt; 0x10)
                                j[v] &amp;#x3D; l[m + v] | 0x0;
                            else &amp;#123;
                                var w &amp;#x3D; j[v - 0x3] ^ j[v - 0x8] ^ j[v - 0xe] ^ j[v - 0x10];
                                j[v] &amp;#x3D; w &amp;lt;&amp;lt; 0x1 | w &amp;gt;&amp;gt;&amp;gt; 0x1f;
                            &amp;#125;
                            var x &amp;#x3D; (p &amp;lt;&amp;lt; 0x5 | p &amp;gt;&amp;gt;&amp;gt; 0x1b) + u + j[v];
                            if (v &amp;lt; 0x14)
                                x +&amp;#x3D; (q &amp;amp; r | ~q &amp;amp; s) + 0x5a827999;
                            else &amp;#123;
                                if (v &amp;lt; 0x28)
                                    x +&amp;#x3D; (q ^ r ^ s) + 0x6ed9eba1;
                                else
                                    v &amp;lt; 0x3c ? x +&amp;#x3D; (q &amp;amp; r | q &amp;amp; s | r &amp;amp; s) - 0x70e44324 : x +&amp;#x3D; (q ^ r ^ s) - 0x359d3e2a;
                            &amp;#125;
                            u &amp;#x3D; s,
                                s &amp;#x3D; r,
                                r &amp;#x3D; q &amp;lt;&amp;lt; 0x1e | q &amp;gt;&amp;gt;&amp;gt; 0x2,
                                q &amp;#x3D; p,
                                p &amp;#x3D; x;
                        &amp;#125;
                        o[0x0] &amp;#x3D; o[0x0] + p | 0x0,
                            o[0x1] &amp;#x3D; o[0x1] + q | 0x0,
                            o[0x2] &amp;#x3D; o[0x2] + r | 0x0,
                            o[0x3] &amp;#x3D; o[0x3] + s | 0x0,
                            o[0x4] &amp;#x3D; o[0x4] + u | 0x0;
                    &amp;#125;,
                    &amp;#39;_doFinalize&amp;#39;: function () &amp;#123;
                        var l &amp;#x3D; this[&amp;#39;_data&amp;#39;]
                            , m &amp;#x3D; l[&amp;#39;words&amp;#39;]
                            , n &amp;#x3D; this[&amp;#39;_nDataBytes&amp;#39;] * 0x8
                            , o &amp;#x3D; l[&amp;#39;sigBytes&amp;#39;] * 0x8;
                        return m[o &amp;gt;&amp;gt;&amp;gt; 0x5] |&amp;#x3D; 0x80 &amp;lt;&amp;lt; 0x18 - o % 0x20,
                            m[(o + 0x40 &amp;gt;&amp;gt;&amp;gt; 0x9 &amp;lt;&amp;lt; 0x4) + 0xe] &amp;#x3D; Math[&amp;#39;floor&amp;#39;](n &amp;#x2F; 0x100000000),
                            m[(o + 0x40 &amp;gt;&amp;gt;&amp;gt; 0x9 &amp;lt;&amp;lt; 0x4) + 0xf] &amp;#x3D; n,
                            l[&amp;#39;sigBytes&amp;#39;] &amp;#x3D; m[&amp;#39;length&amp;#39;] * 0x4,
                            this[&amp;#39;_process&amp;#39;](),
                            this[&amp;#39;_hash&amp;#39;];
                    &amp;#125;,
                    &amp;#39;clone&amp;#39;: function () &amp;#123;
                        var l &amp;#x3D; h[&amp;#39;clone&amp;#39;][&amp;#39;call&amp;#39;](this);
                        return l[&amp;#39;_hash&amp;#39;] &amp;#x3D; this[&amp;#39;_hash&amp;#39;][&amp;#39;clone&amp;#39;](),
                            l;
                    &amp;#125;
                &amp;#125;);
                e[&amp;#39;SHA1&amp;#39;] &amp;#x3D; h[&amp;#39;_createHelper&amp;#39;](k),
                    e[&amp;#39;HmacSHA1&amp;#39;] &amp;#x3D; h[&amp;#39;_createHmacHelper&amp;#39;](k);
            &amp;#125;()),
                d[&amp;#39;SHA1&amp;#39;];
        &amp;#125;));
    &amp;#125;
        , &amp;#123;
            &amp;#39;.&amp;#x2F;core&amp;#39;: 0x5
        &amp;#125;],
    0x1f: [function (a, b, c) &amp;#123;
        ;(function (d, e, f) &amp;#123;
            if (typeof c &amp;#x3D;&amp;#x3D;&amp;#x3D; &amp;#39;object&amp;#39;)
                b[&amp;#39;exports&amp;#39;] &amp;#x3D; c &amp;#x3D; e(a(&amp;#39;.&amp;#x2F;core&amp;#39;), a(&amp;#39;.&amp;#x2F;sha256&amp;#39;));
            else
                typeof define &amp;#x3D;&amp;#x3D;&amp;#x3D; &amp;#39;function&amp;#39; &amp;amp;&amp;amp; define[&amp;#39;amd&amp;#39;] ? define([&amp;#39;.&amp;#x2F;core&amp;#39;, &amp;#39;.&amp;#x2F;sha256&amp;#39;], e) : e(d[&amp;#39;CryptoJS&amp;#39;]);
        &amp;#125;(this, function (d) &amp;#123;
            return (function () &amp;#123;
                var e &amp;#x3D; d
                    , f &amp;#x3D; e[&amp;#39;lib&amp;#39;]
                    , g &amp;#x3D; f[&amp;#39;WordArray&amp;#39;]
                    , h &amp;#x3D; e[&amp;#39;algo&amp;#39;]
                    , i &amp;#x3D; h[&amp;#39;SHA256&amp;#39;]
                    , j &amp;#x3D; h[&amp;#39;SHA224&amp;#39;] &amp;#x3D; i[&amp;#39;extend&amp;#39;](&amp;#123;
                    &amp;#39;_doReset&amp;#39;: function () &amp;#123;
                        this[&amp;#39;_hash&amp;#39;] &amp;#x3D; new g[&amp;#39;init&amp;#39;]([0xc1059ed8, 0x367cd507, 0x3070dd17, 0xf70e5939, 0xffc00b31, 0x68581511, 0x64f98fa7, 0xbefa4fa4]);
                    &amp;#125;,
                    &amp;#39;_doFinalize&amp;#39;: function () &amp;#123;
                        var k &amp;#x3D; i[&amp;#39;_doFinalize&amp;#39;][&amp;#39;call&amp;#39;](this);
                        return k[&amp;#39;sigBytes&amp;#39;] -&amp;#x3D; 0x4,
                            k;
                    &amp;#125;
                &amp;#125;);
                e[&amp;#39;SHA224&amp;#39;] &amp;#x3D; i[&amp;#39;_createHelper&amp;#39;](j),
                    e[&amp;#39;HmacSHA224&amp;#39;] &amp;#x3D; i[&amp;#39;_createHmacHelper&amp;#39;](j);
            &amp;#125;()),
                d[&amp;#39;SHA224&amp;#39;];
        &amp;#125;));
    &amp;#125;
        , &amp;#123;
            &amp;#39;.&amp;#x2F;core&amp;#39;: 0x5,
            &amp;#39;.&amp;#x2F;sha256&amp;#39;: 0x20
        &amp;#125;],
    0x20: [function (a, b, c) &amp;#123;
        ;(function (d, e) &amp;#123;
            if (typeof c &amp;#x3D;&amp;#x3D;&amp;#x3D; &amp;#39;object&amp;#39;)
                b[&amp;#39;exports&amp;#39;] &amp;#x3D; c &amp;#x3D; e(a(&amp;#39;.&amp;#x2F;core&amp;#39;));
            else
                typeof define &amp;#x3D;&amp;#x3D;&amp;#x3D; &amp;#39;function&amp;#39; &amp;amp;&amp;amp; define[&amp;#39;amd&amp;#39;] ? define([&amp;#39;.&amp;#x2F;core&amp;#39;], e) : e(d[&amp;#39;CryptoJS&amp;#39;]);
        &amp;#125;(this, function (d) &amp;#123;
            return function (e) &amp;#123;
                var f &amp;#x3D; d
                    , g &amp;#x3D; f[&amp;#39;lib&amp;#39;]
                    , h &amp;#x3D; g[&amp;#39;WordArray&amp;#39;]
                    , i &amp;#x3D; g[&amp;#39;Hasher&amp;#39;]
                    , j &amp;#x3D; f[&amp;#39;algo&amp;#39;]
                    , k &amp;#x3D; []
                    , l &amp;#x3D; [];
                (function () &amp;#123;
                    function o(s) &amp;#123;
                        var t &amp;#x3D; e[&amp;#39;sqrt&amp;#39;](s);
                        for (var u &amp;#x3D; 0x2; u &amp;lt;&amp;#x3D; t; u++) &amp;#123;
                            if (!(s % u))
                                return ![];
                        &amp;#125;
                        return !![];
                    &amp;#125;

                    function p(s) &amp;#123;
                        return (s - (s | 0x0)) * 0x100000000 | 0x0;
                    &amp;#125;

                    var q &amp;#x3D; 0x2
                        , r &amp;#x3D; 0x0;
                    while (r &amp;lt; 0x40) &amp;#123;
                        o(q) &amp;amp;&amp;amp; (r &amp;lt; 0x8 &amp;amp;&amp;amp; (k[r] &amp;#x3D; p(e[&amp;#39;pow&amp;#39;](q, 0x1 &amp;#x2F; 0x2))),
                            l[r] &amp;#x3D; p(e[&amp;#39;pow&amp;#39;](q, 0x1 &amp;#x2F; 0x3)),
                            r++),
                            q++;
                    &amp;#125;
                &amp;#125;());
                var m &amp;#x3D; []
                    , n &amp;#x3D; j[&amp;#39;SHA256&amp;#39;] &amp;#x3D; i[&amp;#39;extend&amp;#39;](&amp;#123;
                    &amp;#39;_doReset&amp;#39;: function () &amp;#123;
                        this[&amp;#39;_hash&amp;#39;] &amp;#x3D; new h[&amp;#39;init&amp;#39;](k[&amp;#39;slice&amp;#39;](0x0));
                    &amp;#125;,
                    &amp;#39;_doProcessBlock&amp;#39;: function (o, p) &amp;#123;
                        var q &amp;#x3D; this[&amp;#39;_hash&amp;#39;][&amp;#39;words&amp;#39;]
                            , r &amp;#x3D; q[0x0]
                            , s &amp;#x3D; q[0x1]
                            , t &amp;#x3D; q[0x2]
                            , u &amp;#x3D; q[0x3]
                            , v &amp;#x3D; q[0x4]
                            , w &amp;#x3D; q[0x5]
                            , x &amp;#x3D; q[0x6]
                            , y &amp;#x3D; q[0x7];
                        for (var z &amp;#x3D; 0x0; z &amp;lt; 0x40; z++) &amp;#123;
                            if (z &amp;lt; 0x10)
                                m[z] &amp;#x3D; o[p + z] | 0x0;
                            else &amp;#123;
                                var A &amp;#x3D; m[z - 0xf]
                                    , B &amp;#x3D; (A &amp;lt;&amp;lt; 0x19 | A &amp;gt;&amp;gt;&amp;gt; 0x7) ^ (A &amp;lt;&amp;lt; 0xe | A &amp;gt;&amp;gt;&amp;gt; 0x12) ^ A &amp;gt;&amp;gt;&amp;gt; 0x3
                                    , D &amp;#x3D; m[z - 0x2]
                                    , E &amp;#x3D; (D &amp;lt;&amp;lt; 0xf | D &amp;gt;&amp;gt;&amp;gt; 0x11) ^ (D &amp;lt;&amp;lt; 0xd | D &amp;gt;&amp;gt;&amp;gt; 0x13) ^ D &amp;gt;&amp;gt;&amp;gt; 0xa;
                                m[z] &amp;#x3D; B + m[z - 0x7] + E + m[z - 0x10];
                            &amp;#125;
                            var F &amp;#x3D; v &amp;amp; w ^ ~v &amp;amp; x
                                , G &amp;#x3D; r &amp;amp; s ^ r &amp;amp; t ^ s &amp;amp; t
                                , I &amp;#x3D; (r &amp;lt;&amp;lt; 0x1e | r &amp;gt;&amp;gt;&amp;gt; 0x2) ^ (r &amp;lt;&amp;lt; 0x13 | r &amp;gt;&amp;gt;&amp;gt; 0xd) ^ (r &amp;lt;&amp;lt; 0xa | r &amp;gt;&amp;gt;&amp;gt; 0x16)
                                , J &amp;#x3D; (v &amp;lt;&amp;lt; 0x1a | v &amp;gt;&amp;gt;&amp;gt; 0x6) ^ (v &amp;lt;&amp;lt; 0x15 | v &amp;gt;&amp;gt;&amp;gt; 0xb) ^ (v &amp;lt;&amp;lt; 0x7 | v &amp;gt;&amp;gt;&amp;gt; 0x19)
                                , L &amp;#x3D; y + J + F + l[z] + m[z]
                                , N &amp;#x3D; I + G;
                            y &amp;#x3D; x,
                                x &amp;#x3D; w,
                                w &amp;#x3D; v,
                                v &amp;#x3D; u + L | 0x0,
                                u &amp;#x3D; t,
                                t &amp;#x3D; s,
                                s &amp;#x3D; r,
                                r &amp;#x3D; L + N | 0x0;
                        &amp;#125;
                        q[0x0] &amp;#x3D; q[0x0] + r | 0x0,
                            q[0x1] &amp;#x3D; q[0x1] + s | 0x0,
                            q[0x2] &amp;#x3D; q[0x2] + t | 0x0,
                            q[0x3] &amp;#x3D; q[0x3] + u | 0x0,
                            q[0x4] &amp;#x3D; q[0x4] + v | 0x0,
                            q[0x5] &amp;#x3D; q[0x5] + w | 0x0,
                            q[0x6] &amp;#x3D; q[0x6] + x | 0x0,
                            q[0x7] &amp;#x3D; q[0x7] + y | 0x0;
                    &amp;#125;,
                    &amp;#39;_doFinalize&amp;#39;: function () &amp;#123;
                        var o &amp;#x3D; this[&amp;#39;_data&amp;#39;]
                            , p &amp;#x3D; o[&amp;#39;words&amp;#39;]
                            , q &amp;#x3D; this[&amp;#39;_nDataBytes&amp;#39;] * 0x8
                            , r &amp;#x3D; o[&amp;#39;sigBytes&amp;#39;] * 0x8;
                        return p[r &amp;gt;&amp;gt;&amp;gt; 0x5] |&amp;#x3D; 0x80 &amp;lt;&amp;lt; 0x18 - r % 0x20,
                            p[(r + 0x40 &amp;gt;&amp;gt;&amp;gt; 0x9 &amp;lt;&amp;lt; 0x4) + 0xe] &amp;#x3D; e[&amp;#39;floor&amp;#39;](q &amp;#x2F; 0x100000000),
                            p[(r + 0x40 &amp;gt;&amp;gt;&amp;gt; 0x9 &amp;lt;&amp;lt; 0x4) + 0xf] &amp;#x3D; q,
                            o[&amp;#39;sigBytes&amp;#39;] &amp;#x3D; p[&amp;#39;length&amp;#39;] * 0x4,
                            this[&amp;#39;_process&amp;#39;](),
                            this[&amp;#39;_hash&amp;#39;];
                    &amp;#125;,
                    &amp;#39;clone&amp;#39;: function () &amp;#123;
                        var o &amp;#x3D; i[&amp;#39;clone&amp;#39;][&amp;#39;call&amp;#39;](this);
                        return o[&amp;#39;_hash&amp;#39;] &amp;#x3D; this[&amp;#39;_hash&amp;#39;][&amp;#39;clone&amp;#39;](),
                            o;
                    &amp;#125;
                &amp;#125;);
                f[&amp;#39;SHA256&amp;#39;] &amp;#x3D; i[&amp;#39;_createHelper&amp;#39;](n),
                    f[&amp;#39;HmacSHA256&amp;#39;] &amp;#x3D; i[&amp;#39;_createHmacHelper&amp;#39;](n);
            &amp;#125;(Math),
                d[&amp;#39;SHA256&amp;#39;];
        &amp;#125;));
    &amp;#125;
        , &amp;#123;
            &amp;#39;.&amp;#x2F;core&amp;#39;: 0x5
        &amp;#125;],
    0x21: [function (a, b, c) &amp;#123;
        ;(function (d, e, f) &amp;#123;
            if (typeof c &amp;#x3D;&amp;#x3D;&amp;#x3D; &amp;#39;object&amp;#39;)
                b[&amp;#39;exports&amp;#39;] &amp;#x3D; c &amp;#x3D; e(a(&amp;#39;.&amp;#x2F;core&amp;#39;), a(&amp;#39;.&amp;#x2F;x64-core&amp;#39;));
            else
                typeof define &amp;#x3D;&amp;#x3D;&amp;#x3D; &amp;#39;function&amp;#39; &amp;amp;&amp;amp; define[&amp;#39;amd&amp;#39;] ? define([&amp;#39;.&amp;#x2F;core&amp;#39;, &amp;#39;.&amp;#x2F;x64-core&amp;#39;], e) : e(d[&amp;#39;CryptoJS&amp;#39;]);
        &amp;#125;(this, function (d) &amp;#123;
            return function (e) &amp;#123;
                var f &amp;#x3D; d
                    , g &amp;#x3D; f[&amp;#39;lib&amp;#39;]
                    , h &amp;#x3D; g[&amp;#39;WordArray&amp;#39;]
                    , i &amp;#x3D; g[&amp;#39;Hasher&amp;#39;]
                    , j &amp;#x3D; f[&amp;#39;x64&amp;#39;]
                    , k &amp;#x3D; j[&amp;#39;Word&amp;#39;]
                    , l &amp;#x3D; f[&amp;#39;algo&amp;#39;]
                    , m &amp;#x3D; []
                    , n &amp;#x3D; []
                    , o &amp;#x3D; [];
                (function () &amp;#123;
                    var r &amp;#x3D; 0x1
                        , s &amp;#x3D; 0x0;
                    for (var u &amp;#x3D; 0x0; u &amp;lt; 0x18; u++) &amp;#123;
                        m[r + 0x5 * s] &amp;#x3D; (u + 0x1) * (u + 0x2) &amp;#x2F; 0x2 % 0x40;
                        var v &amp;#x3D; s % 0x5
                            , w &amp;#x3D; (0x2 * r + 0x3 * s) % 0x5;
                        r &amp;#x3D; v,
                            s &amp;#x3D; w;
                    &amp;#125;
                    for (var r &amp;#x3D; 0x0; r &amp;lt; 0x5; r++) &amp;#123;
                        for (var s &amp;#x3D; 0x0; s &amp;lt; 0x5; s++) &amp;#123;
                            n[r + 0x5 * s] &amp;#x3D; s + (0x2 * r + 0x3 * s) % 0x5 * 0x5;
                        &amp;#125;
                    &amp;#125;
                    var z &amp;#x3D; 0x1;
                    for (var A &amp;#x3D; 0x0; A &amp;lt; 0x18; A++) &amp;#123;
                        var B &amp;#x3D; 0x0
                            , D &amp;#x3D; 0x0;
                        for (var E &amp;#x3D; 0x0; E &amp;lt; 0x7; E++) &amp;#123;
                            if (z &amp;amp; 0x1) &amp;#123;
                                var F &amp;#x3D; (0x1 &amp;lt;&amp;lt; E) - 0x1;
                                F &amp;lt; 0x20 ? D ^&amp;#x3D; 0x1 &amp;lt;&amp;lt; F : B ^&amp;#x3D; 0x1 &amp;lt;&amp;lt; F - 0x20;
                            &amp;#125;
                            z &amp;amp; 0x80 ? z &amp;#x3D; z &amp;lt;&amp;lt; 0x1 ^ 0x71 : z &amp;lt;&amp;lt;&amp;#x3D; 0x1;
                        &amp;#125;
                        o[A] &amp;#x3D; k[&amp;#39;create&amp;#39;](B, D);
                    &amp;#125;
                &amp;#125;());
                var p &amp;#x3D; [];
                (function () &amp;#123;
                    for (var r &amp;#x3D; 0x0; r &amp;lt; 0x19; r++) &amp;#123;
                        p[r] &amp;#x3D; k[&amp;#39;create&amp;#39;]();
                    &amp;#125;
                &amp;#125;());
                var q &amp;#x3D; l[&amp;#39;SHA3&amp;#39;] &amp;#x3D; i[&amp;#39;extend&amp;#39;](&amp;#123;
                    &amp;#39;cfg&amp;#39;: i[&amp;#39;cfg&amp;#39;][&amp;#39;extend&amp;#39;](&amp;#123;
                        &amp;#39;outputLength&amp;#39;: 0x200
                    &amp;#125;),
                    &amp;#39;_doReset&amp;#39;: function () &amp;#123;
                        var r &amp;#x3D; this[&amp;#39;_state&amp;#39;] &amp;#x3D; [];
                        for (var s &amp;#x3D; 0x0; s &amp;lt; 0x19; s++) &amp;#123;
                            r[s] &amp;#x3D; new k[&amp;#39;init&amp;#39;]();
                        &amp;#125;
                        this[&amp;#39;blockSize&amp;#39;] &amp;#x3D; (0x640 - 0x2 * this[&amp;#39;cfg&amp;#39;][&amp;#39;outputLength&amp;#39;]) &amp;#x2F; 0x20;
                    &amp;#125;,
                    &amp;#39;_doProcessBlock&amp;#39;: function (r, s) &amp;#123;
                        var t &amp;#x3D; this[&amp;#39;_state&amp;#39;]
                            , u &amp;#x3D; this[&amp;#39;blockSize&amp;#39;] &amp;#x2F; 0x2;
                        for (var v &amp;#x3D; 0x0; v &amp;lt; u; v++) &amp;#123;
                            var w &amp;#x3D; r[s + 0x2 * v]
                                , z &amp;#x3D; r[s + 0x2 * v + 0x1];
                            w &amp;#x3D; (w &amp;lt;&amp;lt; 0x8 | w &amp;gt;&amp;gt;&amp;gt; 0x18) &amp;amp; 0xff00ff | (w &amp;lt;&amp;lt; 0x18 | w &amp;gt;&amp;gt;&amp;gt; 0x8) &amp;amp; 0xff00ff00,
                                z &amp;#x3D; (z &amp;lt;&amp;lt; 0x8 | z &amp;gt;&amp;gt;&amp;gt; 0x18) &amp;amp; 0xff00ff | (z &amp;lt;&amp;lt; 0x18 | z &amp;gt;&amp;gt;&amp;gt; 0x8) &amp;amp; 0xff00ff00;
                            var A &amp;#x3D; t[v];
                            A[&amp;#39;high&amp;#39;] ^&amp;#x3D; z,
                                A[&amp;#39;low&amp;#39;] ^&amp;#x3D; w;
                        &amp;#125;
                        for (var B &amp;#x3D; 0x0; B &amp;lt; 0x18; B++) &amp;#123;
                            for (var D &amp;#x3D; 0x0; D &amp;lt; 0x5; D++) &amp;#123;
                                var E &amp;#x3D; 0x0
                                    , F &amp;#x3D; 0x0;
                                for (var G &amp;#x3D; 0x0; G &amp;lt; 0x5; G++) &amp;#123;
                                    var A &amp;#x3D; t[D + 0x5 * G];
                                    E ^&amp;#x3D; A[&amp;#39;high&amp;#39;],
                                        F ^&amp;#x3D; A[&amp;#39;low&amp;#39;];
                                &amp;#125;
                                var H &amp;#x3D; p[D];
                                H[&amp;#39;high&amp;#39;] &amp;#x3D; E,
                                    H[&amp;#39;low&amp;#39;] &amp;#x3D; F;
                            &amp;#125;
                            for (var D &amp;#x3D; 0x0; D &amp;lt; 0x5; D++) &amp;#123;
                                var I &amp;#x3D; p[(D + 0x4) % 0x5]
                                    , J &amp;#x3D; p[(D + 0x1) % 0x5]
                                    , K &amp;#x3D; J[&amp;#39;high&amp;#39;]
                                    , L &amp;#x3D; J[&amp;#39;low&amp;#39;]
                                    , E &amp;#x3D; I[&amp;#39;high&amp;#39;] ^ (K &amp;lt;&amp;lt; 0x1 | L &amp;gt;&amp;gt;&amp;gt; 0x1f)
                                    , F &amp;#x3D; I[&amp;#39;low&amp;#39;] ^ (L &amp;lt;&amp;lt; 0x1 | K &amp;gt;&amp;gt;&amp;gt; 0x1f);
                                for (var G &amp;#x3D; 0x0; G &amp;lt; 0x5; G++) &amp;#123;
                                    var A &amp;#x3D; t[D + 0x5 * G];
                                    A[&amp;#39;high&amp;#39;] ^&amp;#x3D; E,
                                        A[&amp;#39;low&amp;#39;] ^&amp;#x3D; F;
                                &amp;#125;
                            &amp;#125;
                            for (var N &amp;#x3D; 0x1; N &amp;lt; 0x19; N++) &amp;#123;
                                var E, F, A &amp;#x3D; t[N], O &amp;#x3D; A[&amp;#39;high&amp;#39;], P &amp;#x3D; A[&amp;#39;low&amp;#39;], Q &amp;#x3D; m[N];
                                Q &amp;lt; 0x20 ? (E &amp;#x3D; O &amp;lt;&amp;lt; Q | P &amp;gt;&amp;gt;&amp;gt; 0x20 - Q,
                                    F &amp;#x3D; P &amp;lt;&amp;lt; Q | O &amp;gt;&amp;gt;&amp;gt; 0x20 - Q) : (E &amp;#x3D; P &amp;lt;&amp;lt; Q - 0x20 | O &amp;gt;&amp;gt;&amp;gt; 0x40 - Q,
                                    F &amp;#x3D; O &amp;lt;&amp;lt; Q - 0x20 | P &amp;gt;&amp;gt;&amp;gt; 0x40 - Q);
                                var R &amp;#x3D; p[n[N]];
                                R[&amp;#39;high&amp;#39;] &amp;#x3D; E,
                                    R[&amp;#39;low&amp;#39;] &amp;#x3D; F;
                            &amp;#125;
                            var S &amp;#x3D; p[0x0]
                                , U &amp;#x3D; t[0x0];
                            S[&amp;#39;high&amp;#39;] &amp;#x3D; U[&amp;#39;high&amp;#39;],
                                S[&amp;#39;low&amp;#39;] &amp;#x3D; U[&amp;#39;low&amp;#39;];
                            for (var D &amp;#x3D; 0x0; D &amp;lt; 0x5; D++) &amp;#123;
                                for (var G &amp;#x3D; 0x0; G &amp;lt; 0x5; G++) &amp;#123;
                                    var N &amp;#x3D; D + 0x5 * G
                                        , A &amp;#x3D; t[N]
                                        , V &amp;#x3D; p[N]
                                        , W &amp;#x3D; p[(D + 0x1) % 0x5 + 0x5 * G]
                                        , X &amp;#x3D; p[(D + 0x2) % 0x5 + 0x5 * G];
                                    A[&amp;#39;high&amp;#39;] &amp;#x3D; V[&amp;#39;high&amp;#39;] ^ ~W[&amp;#39;high&amp;#39;] &amp;amp; X[&amp;#39;high&amp;#39;],
                                        A[&amp;#39;low&amp;#39;] &amp;#x3D; V[&amp;#39;low&amp;#39;] ^ ~W[&amp;#39;low&amp;#39;] &amp;amp; X[&amp;#39;low&amp;#39;];
                                &amp;#125;
                            &amp;#125;
                            var A &amp;#x3D; t[0x0]
                                , Y &amp;#x3D; o[B];
                            A[&amp;#39;high&amp;#39;] ^&amp;#x3D; Y[&amp;#39;high&amp;#39;],
                                A[&amp;#39;low&amp;#39;] ^&amp;#x3D; Y[&amp;#39;low&amp;#39;];
                        &amp;#125;
                    &amp;#125;,
                    &amp;#39;_doFinalize&amp;#39;: function () &amp;#123;
                        var r &amp;#x3D; this[&amp;#39;_data&amp;#39;]
                            , s &amp;#x3D; r[&amp;#39;words&amp;#39;]
                            , t &amp;#x3D; this[&amp;#39;_nDataBytes&amp;#39;] * 0x8
                            , u &amp;#x3D; r[&amp;#39;sigBytes&amp;#39;] * 0x8
                            , v &amp;#x3D; this[&amp;#39;blockSize&amp;#39;] * 0x20;
                        s[u &amp;gt;&amp;gt;&amp;gt; 0x5] |&amp;#x3D; 0x1 &amp;lt;&amp;lt; 0x18 - u % 0x20,
                            s[(e[&amp;#39;ceil&amp;#39;]((u + 0x1) &amp;#x2F; v) * v &amp;gt;&amp;gt;&amp;gt; 0x5) - 0x1] |&amp;#x3D; 0x80,
                            r[&amp;#39;sigBytes&amp;#39;] &amp;#x3D; s[&amp;#39;length&amp;#39;] * 0x4,
                            this[&amp;#39;_process&amp;#39;]();
                        var w &amp;#x3D; this[&amp;#39;_state&amp;#39;]
                            , x &amp;#x3D; this[&amp;#39;cfg&amp;#39;][&amp;#39;outputLength&amp;#39;] &amp;#x2F; 0x8
                            , y &amp;#x3D; x &amp;#x2F; 0x8
                            , z &amp;#x3D; [];
                        for (var A &amp;#x3D; 0x0; A &amp;lt; y; A++) &amp;#123;
                            var B &amp;#x3D; w[A]
                                , D &amp;#x3D; B[&amp;#39;high&amp;#39;]
                                , E &amp;#x3D; B[&amp;#39;low&amp;#39;];
                            D &amp;#x3D; (D &amp;lt;&amp;lt; 0x8 | D &amp;gt;&amp;gt;&amp;gt; 0x18) &amp;amp; 0xff00ff | (D &amp;lt;&amp;lt; 0x18 | D &amp;gt;&amp;gt;&amp;gt; 0x8) &amp;amp; 0xff00ff00,
                                E &amp;#x3D; (E &amp;lt;&amp;lt; 0x8 | E &amp;gt;&amp;gt;&amp;gt; 0x18) &amp;amp; 0xff00ff | (E &amp;lt;&amp;lt; 0x18 | E &amp;gt;&amp;gt;&amp;gt; 0x8) &amp;amp; 0xff00ff00,
                                z[&amp;#39;push&amp;#39;](E),
                                z[&amp;#39;push&amp;#39;](D);
                        &amp;#125;
                        return new h[&amp;#39;init&amp;#39;](z, x);
                    &amp;#125;,
                    &amp;#39;clone&amp;#39;: function () &amp;#123;
                        var r &amp;#x3D; i[&amp;#39;clone&amp;#39;][&amp;#39;call&amp;#39;](this)
                            , s &amp;#x3D; r[&amp;#39;_state&amp;#39;] &amp;#x3D; this[&amp;#39;_state&amp;#39;][&amp;#39;slice&amp;#39;](0x0);
                        for (var t &amp;#x3D; 0x0; t &amp;lt; 0x19; t++) &amp;#123;
                            s[t] &amp;#x3D; s[t][&amp;#39;clone&amp;#39;]();
                        &amp;#125;
                        return r;
                    &amp;#125;
                &amp;#125;);
                f[&amp;#39;SHA3&amp;#39;] &amp;#x3D; i[&amp;#39;_createHelper&amp;#39;](q),
                    f[&amp;#39;HmacSHA3&amp;#39;] &amp;#x3D; i[&amp;#39;_createHmacHelper&amp;#39;](q);
            &amp;#125;(Math),
                d[&amp;#39;SHA3&amp;#39;];
        &amp;#125;));
    &amp;#125;
        , &amp;#123;
            &amp;#39;.&amp;#x2F;core&amp;#39;: 0x5,
            &amp;#39;.&amp;#x2F;x64-core&amp;#39;: 0x25
        &amp;#125;],
    0x22: [function (a, b, c) &amp;#123;
        ;(function (d, e, f) &amp;#123;
            if (typeof c &amp;#x3D;&amp;#x3D;&amp;#x3D; &amp;#39;object&amp;#39;)
                b[&amp;#39;exports&amp;#39;] &amp;#x3D; c &amp;#x3D; e(a(&amp;#39;.&amp;#x2F;core&amp;#39;), a(&amp;#39;.&amp;#x2F;x64-core&amp;#39;), a(&amp;#39;.&amp;#x2F;sha512&amp;#39;));
            else
                typeof define &amp;#x3D;&amp;#x3D;&amp;#x3D; &amp;#39;function&amp;#39; &amp;amp;&amp;amp; define[&amp;#39;amd&amp;#39;] ? define([&amp;#39;.&amp;#x2F;core&amp;#39;, &amp;#39;.&amp;#x2F;x64-core&amp;#39;, &amp;#39;.&amp;#x2F;sha512&amp;#39;], e) : e(d[&amp;#39;CryptoJS&amp;#39;]);
        &amp;#125;(this, function (d) &amp;#123;
            return (function () &amp;#123;
                var e &amp;#x3D; d
                    , f &amp;#x3D; e[&amp;#39;x64&amp;#39;]
                    , g &amp;#x3D; f[&amp;#39;Word&amp;#39;]
                    , h &amp;#x3D; f[&amp;#39;WordArray&amp;#39;]
                    , i &amp;#x3D; e[&amp;#39;algo&amp;#39;]
                    , j &amp;#x3D; i[&amp;#39;SHA512&amp;#39;]
                    , k &amp;#x3D; i[&amp;#39;SHA384&amp;#39;] &amp;#x3D; j[&amp;#39;extend&amp;#39;](&amp;#123;
                    &amp;#39;_doReset&amp;#39;: function () &amp;#123;
                        this[&amp;#39;_hash&amp;#39;] &amp;#x3D; new h[&amp;#39;init&amp;#39;]([new g[&amp;#39;init&amp;#39;](0xcbbb9d5d, 0xc1059ed8), new g[&amp;#39;init&amp;#39;](0x629a292a, 0x367cd507), new g[&amp;#39;init&amp;#39;](0x9159015a, 0x3070dd17), new g[&amp;#39;init&amp;#39;](0x152fecd8, 0xf70e5939), new g[&amp;#39;init&amp;#39;](0x67332667, 0xffc00b31), new g[&amp;#39;init&amp;#39;](0x8eb44a87, 0x68581511), new g[&amp;#39;init&amp;#39;](0xdb0c2e0d, 0x64f98fa7), new g[&amp;#39;init&amp;#39;](0x47b5481d, 0xbefa4fa4)]);
                    &amp;#125;,
                    &amp;#39;_doFinalize&amp;#39;: function () &amp;#123;
                        var l &amp;#x3D; j[&amp;#39;_doFinalize&amp;#39;][&amp;#39;call&amp;#39;](this);
                        return l[&amp;#39;sigBytes&amp;#39;] -&amp;#x3D; 0x10,
                            l;
                    &amp;#125;
                &amp;#125;);
                e[&amp;#39;SHA384&amp;#39;] &amp;#x3D; j[&amp;#39;_createHelper&amp;#39;](k),
                    e[&amp;#39;HmacSHA384&amp;#39;] &amp;#x3D; j[&amp;#39;_createHmacHelper&amp;#39;](k);
            &amp;#125;()),
                d[&amp;#39;SHA384&amp;#39;];
        &amp;#125;));
    &amp;#125;
        , &amp;#123;
            &amp;#39;.&amp;#x2F;core&amp;#39;: 0x5,
            &amp;#39;.&amp;#x2F;sha512&amp;#39;: 0x23,
            &amp;#39;.&amp;#x2F;x64-core&amp;#39;: 0x25
        &amp;#125;],
    0x23: [function (a, b, c) &amp;#123;
        ;(function (d, e, f) &amp;#123;
            if (typeof c &amp;#x3D;&amp;#x3D;&amp;#x3D; &amp;#39;object&amp;#39;)
                b[&amp;#39;exports&amp;#39;] &amp;#x3D; c &amp;#x3D; e(a(&amp;#39;.&amp;#x2F;core&amp;#39;), a(&amp;#39;.&amp;#x2F;x64-core&amp;#39;));
            else
                typeof define &amp;#x3D;&amp;#x3D;&amp;#x3D; &amp;#39;function&amp;#39; &amp;amp;&amp;amp; define[&amp;#39;amd&amp;#39;] ? define([&amp;#39;.&amp;#x2F;core&amp;#39;, &amp;#39;.&amp;#x2F;x64-core&amp;#39;], e) : e(d[&amp;#39;CryptoJS&amp;#39;]);
        &amp;#125;(this, function (d) &amp;#123;
            return (function () &amp;#123;
                var e &amp;#x3D; d
                    , f &amp;#x3D; e[&amp;#39;lib&amp;#39;]
                    , g &amp;#x3D; f[&amp;#39;Hasher&amp;#39;]
                    , h &amp;#x3D; e[&amp;#39;x64&amp;#39;]
                    , i &amp;#x3D; h[&amp;#39;Word&amp;#39;]
                    , j &amp;#x3D; h[&amp;#39;WordArray&amp;#39;]
                    , k &amp;#x3D; e[&amp;#39;algo&amp;#39;];

                function l() &amp;#123;
                    return i[&amp;#39;create&amp;#39;][&amp;#39;apply&amp;#39;](i, arguments);
                &amp;#125;

                var m &amp;#x3D; [l(0x428a2f98, 0xd728ae22), l(0x71374491, 0x23ef65cd), l(0xb5c0fbcf, 0xec4d3b2f), l(0xe9b5dba5, 0x8189dbbc), l(0x3956c25b, 0xf348b538), l(0x59f111f1, 0xb605d019), l(0x923f82a4, 0xaf194f9b), l(0xab1c5ed5, 0xda6d8118), l(0xd807aa98, 0xa3030242), l(0x12835b01, 0x45706fbe), l(0x243185be, 0x4ee4b28c), l(0x550c7dc3, 0xd5ffb4e2), l(0x72be5d74, 0xf27b896f), l(0x80deb1fe, 0x3b1696b1), l(0x9bdc06a7, 0x25c71235), l(0xc19bf174, 0xcf692694), l(0xe49b69c1, 0x9ef14ad2), l(0xefbe4786, 0x384f25e3), l(0xfc19dc6, 0x8b8cd5b5), l(0x240ca1cc, 0x77ac9c65), l(0x2de92c6f, 0x592b0275), l(0x4a7484aa, 0x6ea6e483), l(0x5cb0a9dc, 0xbd41fbd4), l(0x76f988da, 0x831153b5), l(0x983e5152, 0xee66dfab), l(0xa831c66d, 0x2db43210), l(0xb00327c8, 0x98fb213f), l(0xbf597fc7, 0xbeef0ee4), l(0xc6e00bf3, 0x3da88fc2), l(0xd5a79147, 0x930aa725), l(0x6ca6351, 0xe003826f), l(0x14292967, 0xa0e6e70), l(0x27b70a85, 0x46d22ffc), l(0x2e1b2138, 0x5c26c926), l(0x4d2c6dfc, 0x5ac42aed), l(0x53380d13, 0x9d95b3df), l(0x650a7354, 0x8baf63de), l(0x766a0abb, 0x3c77b2a8), l(0x81c2c92e, 0x47edaee6), l(0x92722c85, 0x1482353b), l(0xa2bfe8a1, 0x4cf10364), l(0xa81a664b, 0xbc423001), l(0xc24b8b70, 0xd0f89791), l(0xc76c51a3, 0x654be30), l(0xd192e819, 0xd6ef5218), l(0xd6990624, 0x5565a910), l(0xf40e3585, 0x5771202a), l(0x106aa070, 0x32bbd1b8), l(0x19a4c116, 0xb8d2d0c8), l(0x1e376c08, 0x5141ab53), l(0x2748774c, 0xdf8eeb99), l(0x34b0bcb5, 0xe19b48a8), l(0x391c0cb3, 0xc5c95a63), l(0x4ed8aa4a, 0xe3418acb), l(0x5b9cca4f, 0x7763e373), l(0x682e6ff3, 0xd6b2b8a3), l(0x748f82ee, 0x5defb2fc), l(0x78a5636f, 0x43172f60), l(0x84c87814, 0xa1f0ab72), l(0x8cc70208, 0x1a6439ec), l(0x90befffa, 0x23631e28), l(0xa4506ceb, 0xde82bde9), l(0xbef9a3f7, 0xb2c67915), l(0xc67178f2, 0xe372532b), l(0xca273ece, 0xea26619c), l(0xd186b8c7, 0x21c0c207), l(0xeada7dd6, 0xcde0eb1e), l(0xf57d4f7f, 0xee6ed178), l(0x6f067aa, 0x72176fba), l(0xa637dc5, 0xa2c898a6), l(0x113f9804, 0xbef90dae), l(0x1b710b35, 0x131c471b), l(0x28db77f5, 0x23047d84), l(0x32caab7b, 0x40c72493), l(0x3c9ebe0a, 0x15c9bebc), l(0x431d67c4, 0x9c100d4c), l(0x4cc5d4be, 0xcb3e42b6), l(0x597f299c, 0xfc657e2a), l(0x5fcb6fab, 0x3ad6faec), l(0x6c44198c, 0x4a475817)]
                    , n &amp;#x3D; [];
                (function () &amp;#123;
                    for (var p &amp;#x3D; 0x0; p &amp;lt; 0x50; p++) &amp;#123;
                        n[p] &amp;#x3D; l();
                    &amp;#125;
                &amp;#125;());
                var o &amp;#x3D; k[&amp;#39;SHA512&amp;#39;] &amp;#x3D; g[&amp;#39;extend&amp;#39;](&amp;#123;
                    &amp;#39;_doReset&amp;#39;: function () &amp;#123;
                        this[&amp;#39;_hash&amp;#39;] &amp;#x3D; new j[&amp;#39;init&amp;#39;]([new i[&amp;#39;init&amp;#39;](0x6a09e667, 0xf3bcc908), new i[&amp;#39;init&amp;#39;](0xbb67ae85, 0x84caa73b), new i[&amp;#39;init&amp;#39;](0x3c6ef372, 0xfe94f82b), new i[&amp;#39;init&amp;#39;](0xa54ff53a, 0x5f1d36f1), new i[&amp;#39;init&amp;#39;](0x510e527f, 0xade682d1), new i[&amp;#39;init&amp;#39;](0x9b05688c, 0x2b3e6c1f), new i[&amp;#39;init&amp;#39;](0x1f83d9ab, 0xfb41bd6b), new i[&amp;#39;init&amp;#39;](0x5be0cd19, 0x137e2179)]);
                    &amp;#125;,
                    &amp;#39;_doProcessBlock&amp;#39;: function (p, q) &amp;#123;
                        var r &amp;#x3D; this[&amp;#39;_hash&amp;#39;][&amp;#39;words&amp;#39;]
                            , s &amp;#x3D; r[0x0]
                            , t &amp;#x3D; r[0x1]
                            , u &amp;#x3D; r[0x2]
                            , v &amp;#x3D; r[0x3]
                            , w &amp;#x3D; r[0x4]
                            , x &amp;#x3D; r[0x5]
                            , y &amp;#x3D; r[0x6]
                            , z &amp;#x3D; r[0x7]
                            , A &amp;#x3D; s[&amp;#39;high&amp;#39;]
                            , B &amp;#x3D; s[&amp;#39;low&amp;#39;]
                            , D &amp;#x3D; t[&amp;#39;high&amp;#39;]
                            , E &amp;#x3D; t[&amp;#39;low&amp;#39;]
                            , F &amp;#x3D; u[&amp;#39;high&amp;#39;]
                            , G &amp;#x3D; u[&amp;#39;low&amp;#39;]
                            , I &amp;#x3D; v[&amp;#39;high&amp;#39;]
                            , J &amp;#x3D; v[&amp;#39;low&amp;#39;]
                            , L &amp;#x3D; w[&amp;#39;high&amp;#39;]
                            , N &amp;#x3D; w[&amp;#39;low&amp;#39;]
                            , O &amp;#x3D; x[&amp;#39;high&amp;#39;]
                            , P &amp;#x3D; x[&amp;#39;low&amp;#39;]
                            , Q &amp;#x3D; y[&amp;#39;high&amp;#39;]
                            , R &amp;#x3D; y[&amp;#39;low&amp;#39;]
                            , S &amp;#x3D; z[&amp;#39;high&amp;#39;]
                            , T &amp;#x3D; z[&amp;#39;low&amp;#39;]
                            , U &amp;#x3D; A
                            , V &amp;#x3D; B
                            , X &amp;#x3D; D
                            , Y &amp;#x3D; E
                            , Z &amp;#x3D; F
                            , a0 &amp;#x3D; G
                            , a1 &amp;#x3D; I
                            , a2 &amp;#x3D; J
                            , a3 &amp;#x3D; L
                            , a4 &amp;#x3D; N
                            , a5 &amp;#x3D; O
                            , a6 &amp;#x3D; P
                            , a7 &amp;#x3D; Q
                            , a8 &amp;#x3D; R
                            , a9 &amp;#x3D; S
                            , aa &amp;#x3D; T;
                        for (var ab &amp;#x3D; 0x0; ab &amp;lt; 0x50; ab++) &amp;#123;
                            var ac, ad, ae &amp;#x3D; n[ab];
                            if (ab &amp;lt; 0x10)
                                ad &amp;#x3D; ae[&amp;#39;high&amp;#39;] &amp;#x3D; p[q + ab * 0x2] | 0x0,
                                    ac &amp;#x3D; ae[&amp;#39;low&amp;#39;] &amp;#x3D; p[q + ab * 0x2 + 0x1] | 0x0;
                            else &amp;#123;
                                var af &amp;#x3D; n[ab - 0xf]
                                    , ag &amp;#x3D; af[&amp;#39;high&amp;#39;]
                                    , ai &amp;#x3D; af[&amp;#39;low&amp;#39;]
                                    , aj &amp;#x3D; (ag &amp;gt;&amp;gt;&amp;gt; 0x1 | ai &amp;lt;&amp;lt; 0x1f) ^ (ag &amp;gt;&amp;gt;&amp;gt; 0x8 | ai &amp;lt;&amp;lt; 0x18) ^ ag &amp;gt;&amp;gt;&amp;gt; 0x7
                                    ,
                                    ak &amp;#x3D; (ai &amp;gt;&amp;gt;&amp;gt; 0x1 | ag &amp;lt;&amp;lt; 0x1f) ^ (ai &amp;gt;&amp;gt;&amp;gt; 0x8 | ag &amp;lt;&amp;lt; 0x18) ^ (ai &amp;gt;&amp;gt;&amp;gt; 0x7 | ag &amp;lt;&amp;lt; 0x19)
                                    , am &amp;#x3D; n[ab - 0x2]
                                    , an &amp;#x3D; am[&amp;#39;high&amp;#39;]
                                    , ao &amp;#x3D; am[&amp;#39;low&amp;#39;]
                                    , ap &amp;#x3D; (an &amp;gt;&amp;gt;&amp;gt; 0x13 | ao &amp;lt;&amp;lt; 0xd) ^ (an &amp;lt;&amp;lt; 0x3 | ao &amp;gt;&amp;gt;&amp;gt; 0x1d) ^ an &amp;gt;&amp;gt;&amp;gt; 0x6
                                    ,
                                    aq &amp;#x3D; (ao &amp;gt;&amp;gt;&amp;gt; 0x13 | an &amp;lt;&amp;lt; 0xd) ^ (ao &amp;lt;&amp;lt; 0x3 | an &amp;gt;&amp;gt;&amp;gt; 0x1d) ^ (ao &amp;gt;&amp;gt;&amp;gt; 0x6 | an &amp;lt;&amp;lt; 0x1a)
                                    , ar &amp;#x3D; n[ab - 0x7]
                                    , as &amp;#x3D; ar[&amp;#39;high&amp;#39;]
                                    , at &amp;#x3D; ar[&amp;#39;low&amp;#39;]
                                    , au &amp;#x3D; n[ab - 0x10]
                                    , av &amp;#x3D; au[&amp;#39;high&amp;#39;]
                                    , aw &amp;#x3D; au[&amp;#39;low&amp;#39;];
                                ac &amp;#x3D; ak + at,
                                    ad &amp;#x3D; aj + as + (ac &amp;gt;&amp;gt;&amp;gt; 0x0 &amp;lt; ak &amp;gt;&amp;gt;&amp;gt; 0x0 ? 0x1 : 0x0),
                                    ac &amp;#x3D; ac + aq,
                                    ad &amp;#x3D; ad + ap + (ac &amp;gt;&amp;gt;&amp;gt; 0x0 &amp;lt; aq &amp;gt;&amp;gt;&amp;gt; 0x0 ? 0x1 : 0x0),
                                    ac &amp;#x3D; ac + aw,
                                    ad &amp;#x3D; ad + av + (ac &amp;gt;&amp;gt;&amp;gt; 0x0 &amp;lt; aw &amp;gt;&amp;gt;&amp;gt; 0x0 ? 0x1 : 0x0),
                                    ae[&amp;#39;high&amp;#39;] &amp;#x3D; ad,
                                    ae[&amp;#39;low&amp;#39;] &amp;#x3D; ac;
                            &amp;#125;
                            var ax &amp;#x3D; a3 &amp;amp; a5 ^ ~a3 &amp;amp; a7
                                , ay &amp;#x3D; a4 &amp;amp; a6 ^ ~a4 &amp;amp; a8
                                , az &amp;#x3D; U &amp;amp; X ^ U &amp;amp; Z ^ X &amp;amp; Z
                                , aA &amp;#x3D; V &amp;amp; Y ^ V &amp;amp; a0 ^ Y &amp;amp; a0
                                , aB &amp;#x3D; (U &amp;gt;&amp;gt;&amp;gt; 0x1c | V &amp;lt;&amp;lt; 0x4) ^ (U &amp;lt;&amp;lt; 0x1e | V &amp;gt;&amp;gt;&amp;gt; 0x2) ^ (U &amp;lt;&amp;lt; 0x19 | V &amp;gt;&amp;gt;&amp;gt; 0x7)
                                , aC &amp;#x3D; (V &amp;gt;&amp;gt;&amp;gt; 0x1c | U &amp;lt;&amp;lt; 0x4) ^ (V &amp;lt;&amp;lt; 0x1e | U &amp;gt;&amp;gt;&amp;gt; 0x2) ^ (V &amp;lt;&amp;lt; 0x19 | U &amp;gt;&amp;gt;&amp;gt; 0x7)
                                , aD &amp;#x3D; (a3 &amp;gt;&amp;gt;&amp;gt; 0xe | a4 &amp;lt;&amp;lt; 0x12) ^ (a3 &amp;gt;&amp;gt;&amp;gt; 0x12 | a4 &amp;lt;&amp;lt; 0xe) ^ (a3 &amp;lt;&amp;lt; 0x17 | a4 &amp;gt;&amp;gt;&amp;gt; 0x9)
                                , aE &amp;#x3D; (a4 &amp;gt;&amp;gt;&amp;gt; 0xe | a3 &amp;lt;&amp;lt; 0x12) ^ (a4 &amp;gt;&amp;gt;&amp;gt; 0x12 | a3 &amp;lt;&amp;lt; 0xe) ^ (a4 &amp;lt;&amp;lt; 0x17 | a3 &amp;gt;&amp;gt;&amp;gt; 0x9)
                                , aF &amp;#x3D; m[ab]
                                , aG &amp;#x3D; aF[&amp;#39;high&amp;#39;]
                                , aH &amp;#x3D; aF[&amp;#39;low&amp;#39;]
                                , aI &amp;#x3D; aa + aE
                                , aJ &amp;#x3D; a9 + aD + (aI &amp;gt;&amp;gt;&amp;gt; 0x0 &amp;lt; aa &amp;gt;&amp;gt;&amp;gt; 0x0 ? 0x1 : 0x0)
                                , aI &amp;#x3D; aI + ay
                                , aJ &amp;#x3D; aJ + ax + (aI &amp;gt;&amp;gt;&amp;gt; 0x0 &amp;lt; ay &amp;gt;&amp;gt;&amp;gt; 0x0 ? 0x1 : 0x0)
                                , aI &amp;#x3D; aI + aH
                                , aJ &amp;#x3D; aJ + aG + (aI &amp;gt;&amp;gt;&amp;gt; 0x0 &amp;lt; aH &amp;gt;&amp;gt;&amp;gt; 0x0 ? 0x1 : 0x0)
                                , aI &amp;#x3D; aI + ac
                                , aJ &amp;#x3D; aJ + ad + (aI &amp;gt;&amp;gt;&amp;gt; 0x0 &amp;lt; ac &amp;gt;&amp;gt;&amp;gt; 0x0 ? 0x1 : 0x0)
                                , aK &amp;#x3D; aC + aA
                                , aL &amp;#x3D; aB + az + (aK &amp;gt;&amp;gt;&amp;gt; 0x0 &amp;lt; aC &amp;gt;&amp;gt;&amp;gt; 0x0 ? 0x1 : 0x0);
                            a9 &amp;#x3D; a7,
                                aa &amp;#x3D; a8,
                                a7 &amp;#x3D; a5,
                                a8 &amp;#x3D; a6,
                                a5 &amp;#x3D; a3,
                                a6 &amp;#x3D; a4,
                                a4 &amp;#x3D; a2 + aI | 0x0,
                                a3 &amp;#x3D; a1 + aJ + (a4 &amp;gt;&amp;gt;&amp;gt; 0x0 &amp;lt; a2 &amp;gt;&amp;gt;&amp;gt; 0x0 ? 0x1 : 0x0) | 0x0,
                                a1 &amp;#x3D; Z,
                                a2 &amp;#x3D; a0,
                                Z &amp;#x3D; X,
                                a0 &amp;#x3D; Y,
                                X &amp;#x3D; U,
                                Y &amp;#x3D; V,
                                V &amp;#x3D; aI + aK | 0x0,
                                U &amp;#x3D; aJ + aL + (V &amp;gt;&amp;gt;&amp;gt; 0x0 &amp;lt; aI &amp;gt;&amp;gt;&amp;gt; 0x0 ? 0x1 : 0x0) | 0x0;
                        &amp;#125;
                        B &amp;#x3D; s[&amp;#39;low&amp;#39;] &amp;#x3D; B + V,
                            s[&amp;#39;high&amp;#39;] &amp;#x3D; A + U + (B &amp;gt;&amp;gt;&amp;gt; 0x0 &amp;lt; V &amp;gt;&amp;gt;&amp;gt; 0x0 ? 0x1 : 0x0),
                            E &amp;#x3D; t[&amp;#39;low&amp;#39;] &amp;#x3D; E + Y,
                            t[&amp;#39;high&amp;#39;] &amp;#x3D; D + X + (E &amp;gt;&amp;gt;&amp;gt; 0x0 &amp;lt; Y &amp;gt;&amp;gt;&amp;gt; 0x0 ? 0x1 : 0x0),
                            G &amp;#x3D; u[&amp;#39;low&amp;#39;] &amp;#x3D; G + a0,
                            u[&amp;#39;high&amp;#39;] &amp;#x3D; F + Z + (G &amp;gt;&amp;gt;&amp;gt; 0x0 &amp;lt; a0 &amp;gt;&amp;gt;&amp;gt; 0x0 ? 0x1 : 0x0),
                            J &amp;#x3D; v[&amp;#39;low&amp;#39;] &amp;#x3D; J + a2,
                            v[&amp;#39;high&amp;#39;] &amp;#x3D; I + a1 + (J &amp;gt;&amp;gt;&amp;gt; 0x0 &amp;lt; a2 &amp;gt;&amp;gt;&amp;gt; 0x0 ? 0x1 : 0x0),
                            N &amp;#x3D; w[&amp;#39;low&amp;#39;] &amp;#x3D; N + a4,
                            w[&amp;#39;high&amp;#39;] &amp;#x3D; L + a3 + (N &amp;gt;&amp;gt;&amp;gt; 0x0 &amp;lt; a4 &amp;gt;&amp;gt;&amp;gt; 0x0 ? 0x1 : 0x0),
                            P &amp;#x3D; x[&amp;#39;low&amp;#39;] &amp;#x3D; P + a6,
                            x[&amp;#39;high&amp;#39;] &amp;#x3D; O + a5 + (P &amp;gt;&amp;gt;&amp;gt; 0x0 &amp;lt; a6 &amp;gt;&amp;gt;&amp;gt; 0x0 ? 0x1 : 0x0),
                            R &amp;#x3D; y[&amp;#39;low&amp;#39;] &amp;#x3D; R + a8,
                            y[&amp;#39;high&amp;#39;] &amp;#x3D; Q + a7 + (R &amp;gt;&amp;gt;&amp;gt; 0x0 &amp;lt; a8 &amp;gt;&amp;gt;&amp;gt; 0x0 ? 0x1 : 0x0),
                            T &amp;#x3D; z[&amp;#39;low&amp;#39;] &amp;#x3D; T + aa,
                            z[&amp;#39;high&amp;#39;] &amp;#x3D; S + a9 + (T &amp;gt;&amp;gt;&amp;gt; 0x0 &amp;lt; aa &amp;gt;&amp;gt;&amp;gt; 0x0 ? 0x1 : 0x0);
                    &amp;#125;,
                    &amp;#39;_doFinalize&amp;#39;: function () &amp;#123;
                        var p &amp;#x3D; this[&amp;#39;_data&amp;#39;]
                            , q &amp;#x3D; p[&amp;#39;words&amp;#39;]
                            , r &amp;#x3D; this[&amp;#39;_nDataBytes&amp;#39;] * 0x8
                            , s &amp;#x3D; p[&amp;#39;sigBytes&amp;#39;] * 0x8;
                        q[s &amp;gt;&amp;gt;&amp;gt; 0x5] |&amp;#x3D; 0x80 &amp;lt;&amp;lt; 0x18 - s % 0x20,
                            q[(s + 0x80 &amp;gt;&amp;gt;&amp;gt; 0xa &amp;lt;&amp;lt; 0x5) + 0x1e] &amp;#x3D; Math[&amp;#39;floor&amp;#39;](r &amp;#x2F; 0x100000000),
                            q[(s + 0x80 &amp;gt;&amp;gt;&amp;gt; 0xa &amp;lt;&amp;lt; 0x5) + 0x1f] &amp;#x3D; r,
                            p[&amp;#39;sigBytes&amp;#39;] &amp;#x3D; q[&amp;#39;length&amp;#39;] * 0x4,
                            this[&amp;#39;_process&amp;#39;]();
                        var t &amp;#x3D; this[&amp;#39;_hash&amp;#39;][&amp;#39;toX32&amp;#39;]();
                        return t;
                    &amp;#125;,
                    &amp;#39;clone&amp;#39;: function () &amp;#123;
                        var p &amp;#x3D; g[&amp;#39;clone&amp;#39;][&amp;#39;call&amp;#39;](this);
                        return p[&amp;#39;_hash&amp;#39;] &amp;#x3D; this[&amp;#39;_hash&amp;#39;][&amp;#39;clone&amp;#39;](),
                            p;
                    &amp;#125;,
                    &amp;#39;blockSize&amp;#39;: 0x400 &amp;#x2F; 0x20
                &amp;#125;);
                e[&amp;#39;SHA512&amp;#39;] &amp;#x3D; g[&amp;#39;_createHelper&amp;#39;](o),
                    e[&amp;#39;HmacSHA512&amp;#39;] &amp;#x3D; g[&amp;#39;_createHmacHelper&amp;#39;](o);
            &amp;#125;()),
                d[&amp;#39;SHA512&amp;#39;];
        &amp;#125;));
    &amp;#125;
        , &amp;#123;
            &amp;#39;.&amp;#x2F;core&amp;#39;: 0x5,
            &amp;#39;.&amp;#x2F;x64-core&amp;#39;: 0x25
        &amp;#125;],
    0x24: [function (a, b, c) &amp;#123;
        ;(function (d, e, f) &amp;#123;
            if (typeof c &amp;#x3D;&amp;#x3D;&amp;#x3D; &amp;#39;object&amp;#39;)
                b[&amp;#39;exports&amp;#39;] &amp;#x3D; c &amp;#x3D; e(a(&amp;#39;.&amp;#x2F;core&amp;#39;), a(&amp;#39;.&amp;#x2F;enc-base64&amp;#39;), a(&amp;#39;.&amp;#x2F;md5&amp;#39;), a(&amp;#39;.&amp;#x2F;evpkdf&amp;#39;), a(&amp;#39;.&amp;#x2F;cipher-core&amp;#39;));
            else
                typeof define &amp;#x3D;&amp;#x3D;&amp;#x3D; &amp;#39;function&amp;#39; &amp;amp;&amp;amp; define[&amp;#39;amd&amp;#39;] ? define([&amp;#39;.&amp;#x2F;core&amp;#39;, &amp;#39;.&amp;#x2F;enc-base64&amp;#39;, &amp;#39;.&amp;#x2F;md5&amp;#39;, &amp;#39;.&amp;#x2F;evpkdf&amp;#39;, &amp;#39;.&amp;#x2F;cipher-core&amp;#39;], e) : e(d[&amp;#39;CryptoJS&amp;#39;]);
        &amp;#125;(this, function (d) &amp;#123;
            return (function () &amp;#123;
                var e &amp;#x3D; d
                    , f &amp;#x3D; e[&amp;#39;lib&amp;#39;]
                    , g &amp;#x3D; f[&amp;#39;WordArray&amp;#39;]
                    , h &amp;#x3D; f[&amp;#39;BlockCipher&amp;#39;]
                    , i &amp;#x3D; e[&amp;#39;algo&amp;#39;]
                    ,
                    j &amp;#x3D; [0x39, 0x31, 0x29, 0x21, 0x19, 0x11, 0x9, 0x1, 0x3a, 0x32, 0x2a, 0x22, 0x1a, 0x12, 0xa, 0x2, 0x3b, 0x33, 0x2b, 0x23, 0x1b, 0x13, 0xb, 0x3, 0x3c, 0x34, 0x2c, 0x24, 0x3f, 0x37, 0x2f, 0x27, 0x1f, 0x17, 0xf, 0x7, 0x3e, 0x36, 0x2e, 0x26, 0x1e, 0x16, 0xe, 0x6, 0x3d, 0x35, 0x2d, 0x25, 0x1d, 0x15, 0xd, 0x5, 0x1c, 0x14, 0xc, 0x4]
                    ,
                    k &amp;#x3D; [0xe, 0x11, 0xb, 0x18, 0x1, 0x5, 0x3, 0x1c, 0xf, 0x6, 0x15, 0xa, 0x17, 0x13, 0xc, 0x4, 0x1a, 0x8, 0x10, 0x7, 0x1b, 0x14, 0xd, 0x2, 0x29, 0x34, 0x1f, 0x25, 0x2f, 0x37, 0x1e, 0x28, 0x33, 0x2d, 0x21, 0x30, 0x2c, 0x31, 0x27, 0x38, 0x22, 0x35, 0x2e, 0x2a, 0x32, 0x24, 0x1d, 0x20]
                    , l &amp;#x3D; [0x1, 0x2, 0x4, 0x6, 0x8, 0xa, 0xc, 0xe, 0xf, 0x11, 0x13, 0x15, 0x17, 0x19, 0x1b, 0x1c]
                    , m &amp;#x3D; [&amp;#123;
                        0x0: 0x808200,
                        0x10000000: 0x8000,
                        0x20000000: 0x808002,
                        0x30000000: 0x2,
                        0x40000000: 0x200,
                        0x50000000: 0x808202,
                        0x60000000: 0x800202,
                        0x70000000: 0x800000,
                        0x80000000: 0x202,
                        0x90000000: 0x800200,
                        0xa0000000: 0x8200,
                        0xb0000000: 0x808000,
                        0xc0000000: 0x8002,
                        0xd0000000: 0x800002,
                        0xe0000000: 0x0,
                        0xf0000000: 0x8202,
                        0x8000000: 0x0,
                        0x18000000: 0x808202,
                        0x28000000: 0x8202,
                        0x38000000: 0x8000,
                        0x48000000: 0x808200,
                        0x58000000: 0x200,
                        0x68000000: 0x808002,
                        0x78000000: 0x2,
                        0x88000000: 0x800200,
                        0x98000000: 0x8200,
                        0xa8000000: 0x808000,
                        0xb8000000: 0x800202,
                        0xc8000000: 0x800002,
                        0xd8000000: 0x8002,
                        0xe8000000: 0x202,
                        0xf8000000: 0x800000,
                        0x1: 0x8000,
                        0x10000001: 0x2,
                        0x20000001: 0x808200,
                        0x30000001: 0x800000,
                        0x40000001: 0x808002,
                        0x50000001: 0x8200,
                        0x60000001: 0x200,
                        0x70000001: 0x800202,
                        0x80000001: 0x808202,
                        0x90000001: 0x808000,
                        0xa0000001: 0x800002,
                        0xb0000001: 0x8202,
                        0xc0000001: 0x202,
                        0xd0000001: 0x800200,
                        0xe0000001: 0x8002,
                        0xf0000001: 0x0,
                        0x8000001: 0x808202,
                        0x18000001: 0x808000,
                        0x28000001: 0x800000,
                        0x38000001: 0x200,
                        0x48000001: 0x8000,
                        0x58000001: 0x800002,
                        0x68000001: 0x2,
                        0x78000001: 0x8202,
                        0x88000001: 0x8002,
                        0x98000001: 0x800202,
                        0xa8000001: 0x202,
                        0xb8000001: 0x808200,
                        0xc8000001: 0x800200,
                        0xd8000001: 0x0,
                        0xe8000001: 0x8200,
                        0xf8000001: 0x808002
                    &amp;#125;, &amp;#123;
                        0x0: 0x40084010,
                        0x1000000: 0x4000,
                        0x2000000: 0x80000,
                        0x3000000: 0x40080010,
                        0x4000000: 0x40000010,
                        0x5000000: 0x40084000,
                        0x6000000: 0x40004000,
                        0x7000000: 0x10,
                        0x8000000: 0x84000,
                        0x9000000: 0x40004010,
                        0xa000000: 0x40000000,
                        0xb000000: 0x84010,
                        0xc000000: 0x80010,
                        0xd000000: 0x0,
                        0xe000000: 0x4010,
                        0xf000000: 0x40080000,
                        0x800000: 0x40004000,
                        0x1800000: 0x84010,
                        0x2800000: 0x10,
                        0x3800000: 0x40004010,
                        0x4800000: 0x40084010,
                        0x5800000: 0x40000000,
                        0x6800000: 0x80000,
                        0x7800000: 0x40080010,
                        0x8800000: 0x80010,
                        0x9800000: 0x0,
                        0xa800000: 0x4000,
                        0xb800000: 0x40080000,
                        0xc800000: 0x40000010,
                        0xd800000: 0x84000,
                        0xe800000: 0x40084000,
                        0xf800000: 0x4010,
                        0x10000000: 0x0,
                        0x11000000: 0x40080010,
                        0x12000000: 0x40004010,
                        0x13000000: 0x40084000,
                        0x14000000: 0x40080000,
                        0x15000000: 0x10,
                        0x16000000: 0x84010,
                        0x17000000: 0x4000,
                        0x18000000: 0x4010,
                        0x19000000: 0x80000,
                        0x1a000000: 0x80010,
                        0x1b000000: 0x40000010,
                        0x1c000000: 0x84000,
                        0x1d000000: 0x40004000,
                        0x1e000000: 0x40000000,
                        0x1f000000: 0x40084010,
                        0x10800000: 0x84010,
                        0x11800000: 0x80000,
                        0x12800000: 0x40080000,
                        0x13800000: 0x4000,
                        0x14800000: 0x40004000,
                        0x15800000: 0x40084010,
                        0x16800000: 0x10,
                        0x17800000: 0x40000000,
                        0x18800000: 0x40084000,
                        0x19800000: 0x40000010,
                        0x1a800000: 0x40004010,
                        0x1b800000: 0x80010,
                        0x1c800000: 0x0,
                        0x1d800000: 0x4010,
                        0x1e800000: 0x40080010,
                        0x1f800000: 0x84000
                    &amp;#125;, &amp;#123;
                        0x0: 0x104,
                        0x100000: 0x0,
                        0x200000: 0x4000100,
                        0x300000: 0x10104,
                        0x400000: 0x10004,
                        0x500000: 0x4000004,
                        0x600000: 0x4010104,
                        0x700000: 0x4010000,
                        0x800000: 0x4000000,
                        0x900000: 0x4010100,
                        0xa00000: 0x10100,
                        0xb00000: 0x4010004,
                        0xc00000: 0x4000104,
                        0xd00000: 0x10000,
                        0xe00000: 0x4,
                        0xf00000: 0x100,
                        0x80000: 0x4010100,
                        0x180000: 0x4010004,
                        0x280000: 0x0,
                        0x380000: 0x4000100,
                        0x480000: 0x4000004,
                        0x580000: 0x10000,
                        0x680000: 0x10004,
                        0x780000: 0x104,
                        0x880000: 0x4,
                        0x980000: 0x100,
                        0xa80000: 0x4010000,
                        0xb80000: 0x10104,
                        0xc80000: 0x10100,
                        0xd80000: 0x4000104,
                        0xe80000: 0x4010104,
                        0xf80000: 0x4000000,
                        0x1000000: 0x4010100,
                        0x1100000: 0x10004,
                        0x1200000: 0x10000,
                        0x1300000: 0x4000100,
                        0x1400000: 0x100,
                        0x1500000: 0x4010104,
                        0x1600000: 0x4000004,
                        0x1700000: 0x0,
                        0x1800000: 0x4000104,
                        0x1900000: 0x4000000,
                        0x1a00000: 0x4,
                        0x1b00000: 0x10100,
                        0x1c00000: 0x4010000,
                        0x1d00000: 0x104,
                        0x1e00000: 0x10104,
                        0x1f00000: 0x4010004,
                        0x1080000: 0x4000000,
                        0x1180000: 0x104,
                        0x1280000: 0x4010100,
                        0x1380000: 0x0,
                        0x1480000: 0x10004,
                        0x1580000: 0x4000100,
                        0x1680000: 0x100,
                        0x1780000: 0x4010004,
                        0x1880000: 0x10000,
                        0x1980000: 0x4010104,
                        0x1a80000: 0x10104,
                        0x1b80000: 0x4000004,
                        0x1c80000: 0x4000104,
                        0x1d80000: 0x4010000,
                        0x1e80000: 0x4,
                        0x1f80000: 0x10100
                    &amp;#125;, &amp;#123;
                        0x0: 0x80401000,
                        0x10000: 0x80001040,
                        0x20000: 0x401040,
                        0x30000: 0x80400000,
                        0x40000: 0x0,
                        0x50000: 0x401000,
                        0x60000: 0x80000040,
                        0x70000: 0x400040,
                        0x80000: 0x80000000,
                        0x90000: 0x400000,
                        0xa0000: 0x40,
                        0xb0000: 0x80001000,
                        0xc0000: 0x80400040,
                        0xd0000: 0x1040,
                        0xe0000: 0x1000,
                        0xf0000: 0x80401040,
                        0x8000: 0x80001040,
                        0x18000: 0x40,
                        0x28000: 0x80400040,
                        0x38000: 0x80001000,
                        0x48000: 0x401000,
                        0x58000: 0x80401040,
                        0x68000: 0x0,
                        0x78000: 0x80400000,
                        0x88000: 0x1000,
                        0x98000: 0x80401000,
                        0xa8000: 0x400000,
                        0xb8000: 0x1040,
                        0xc8000: 0x80000000,
                        0xd8000: 0x400040,
                        0xe8000: 0x401040,
                        0xf8000: 0x80000040,
                        0x100000: 0x400040,
                        0x110000: 0x401000,
                        0x120000: 0x80000040,
                        0x130000: 0x0,
                        0x140000: 0x1040,
                        0x150000: 0x80400040,
                        0x160000: 0x80401000,
                        0x170000: 0x80001040,
                        0x180000: 0x80401040,
                        0x190000: 0x80000000,
                        0x1a0000: 0x80400000,
                        0x1b0000: 0x401040,
                        0x1c0000: 0x80001000,
                        0x1d0000: 0x400000,
                        0x1e0000: 0x40,
                        0x1f0000: 0x1000,
                        0x108000: 0x80400000,
                        0x118000: 0x80401040,
                        0x128000: 0x0,
                        0x138000: 0x401000,
                        0x148000: 0x400040,
                        0x158000: 0x80000000,
                        0x168000: 0x80001040,
                        0x178000: 0x40,
                        0x188000: 0x80000040,
                        0x198000: 0x1000,
                        0x1a8000: 0x80001000,
                        0x1b8000: 0x80400040,
                        0x1c8000: 0x1040,
                        0x1d8000: 0x80401000,
                        0x1e8000: 0x400000,
                        0x1f8000: 0x401040
                    &amp;#125;, &amp;#123;
                        0x0: 0x80,
                        0x1000: 0x1040000,
                        0x2000: 0x40000,
                        0x3000: 0x20000000,
                        0x4000: 0x20040080,
                        0x5000: 0x1000080,
                        0x6000: 0x21000080,
                        0x7000: 0x40080,
                        0x8000: 0x1000000,
                        0x9000: 0x20040000,
                        0xa000: 0x20000080,
                        0xb000: 0x21040080,
                        0xc000: 0x21040000,
                        0xd000: 0x0,
                        0xe000: 0x1040080,
                        0xf000: 0x21000000,
                        0x800: 0x1040080,
                        0x1800: 0x21000080,
                        0x2800: 0x80,
                        0x3800: 0x1040000,
                        0x4800: 0x40000,
                        0x5800: 0x20040080,
                        0x6800: 0x21040000,
                        0x7800: 0x20000000,
                        0x8800: 0x20040000,
                        0x9800: 0x0,
                        0xa800: 0x21040080,
                        0xb800: 0x1000080,
                        0xc800: 0x20000080,
                        0xd800: 0x21000000,
                        0xe800: 0x1000000,
                        0xf800: 0x40080,
                        0x10000: 0x40000,
                        0x11000: 0x80,
                        0x12000: 0x20000000,
                        0x13000: 0x21000080,
                        0x14000: 0x1000080,
                        0x15000: 0x21040000,
                        0x16000: 0x20040080,
                        0x17000: 0x1000000,
                        0x18000: 0x21040080,
                        0x19000: 0x21000000,
                        0x1a000: 0x1040000,
                        0x1b000: 0x20040000,
                        0x1c000: 0x40080,
                        0x1d000: 0x20000080,
                        0x1e000: 0x0,
                        0x1f000: 0x1040080,
                        0x10800: 0x21000080,
                        0x11800: 0x1000000,
                        0x12800: 0x1040000,
                        0x13800: 0x20040080,
                        0x14800: 0x20000000,
                        0x15800: 0x1040080,
                        0x16800: 0x80,
                        0x17800: 0x21040000,
                        0x18800: 0x40080,
                        0x19800: 0x21040080,
                        0x1a800: 0x0,
                        0x1b800: 0x21000000,
                        0x1c800: 0x1000080,
                        0x1d800: 0x40000,
                        0x1e800: 0x20040000,
                        0x1f800: 0x20000080
                    &amp;#125;, &amp;#123;
                        0x0: 0x10000008,
                        0x100: 0x2000,
                        0x200: 0x10200000,
                        0x300: 0x10202008,
                        0x400: 0x10002000,
                        0x500: 0x200000,
                        0x600: 0x200008,
                        0x700: 0x10000000,
                        0x800: 0x0,
                        0x900: 0x10002008,
                        0xa00: 0x202000,
                        0xb00: 0x8,
                        0xc00: 0x10200008,
                        0xd00: 0x202008,
                        0xe00: 0x2008,
                        0xf00: 0x10202000,
                        0x80: 0x10200000,
                        0x180: 0x10202008,
                        0x280: 0x8,
                        0x380: 0x200000,
                        0x480: 0x202008,
                        0x580: 0x10000008,
                        0x680: 0x10002000,
                        0x780: 0x2008,
                        0x880: 0x200008,
                        0x980: 0x2000,
                        0xa80: 0x10002008,
                        0xb80: 0x10200008,
                        0xc80: 0x0,
                        0xd80: 0x10202000,
                        0xe80: 0x202000,
                        0xf80: 0x10000000,
                        0x1000: 0x10002000,
                        0x1100: 0x10200008,
                        0x1200: 0x10202008,
                        0x1300: 0x2008,
                        0x1400: 0x200000,
                        0x1500: 0x10000000,
                        0x1600: 0x10000008,
                        0x1700: 0x202000,
                        0x1800: 0x202008,
                        0x1900: 0x0,
                        0x1a00: 0x8,
                        0x1b00: 0x10200000,
                        0x1c00: 0x2000,
                        0x1d00: 0x10002008,
                        0x1e00: 0x10202000,
                        0x1f00: 0x200008,
                        0x1080: 0x8,
                        0x1180: 0x202000,
                        0x1280: 0x200000,
                        0x1380: 0x10000008,
                        0x1480: 0x10002000,
                        0x1580: 0x2008,
                        0x1680: 0x10202008,
                        0x1780: 0x10200000,
                        0x1880: 0x10202000,
                        0x1980: 0x10200008,
                        0x1a80: 0x2000,
                        0x1b80: 0x202008,
                        0x1c80: 0x200008,
                        0x1d80: 0x0,
                        0x1e80: 0x10000000,
                        0x1f80: 0x10002008
                    &amp;#125;, &amp;#123;
                        0x0: 0x100000,
                        0x10: 0x2000401,
                        0x20: 0x400,
                        0x30: 0x100401,
                        0x40: 0x2100401,
                        0x50: 0x0,
                        0x60: 0x1,
                        0x70: 0x2100001,
                        0x80: 0x2000400,
                        0x90: 0x100001,
                        0xa0: 0x2000001,
                        0xb0: 0x2100400,
                        0xc0: 0x2100000,
                        0xd0: 0x401,
                        0xe0: 0x100400,
                        0xf0: 0x2000000,
                        0x8: 0x2100001,
                        0x18: 0x0,
                        0x28: 0x2000401,
                        0x38: 0x2100400,
                        0x48: 0x100000,
                        0x58: 0x2000001,
                        0x68: 0x2000000,
                        0x78: 0x401,
                        0x88: 0x100401,
                        0x98: 0x2000400,
                        0xa8: 0x2100000,
                        0xb8: 0x100001,
                        0xc8: 0x400,
                        0xd8: 0x2100401,
                        0xe8: 0x1,
                        0xf8: 0x100400,
                        0x100: 0x2000000,
                        0x110: 0x100000,
                        0x120: 0x2000401,
                        0x130: 0x2100001,
                        0x140: 0x100001,
                        0x150: 0x2000400,
                        0x160: 0x2100400,
                        0x170: 0x100401,
                        0x180: 0x401,
                        0x190: 0x2100401,
                        0x1a0: 0x100400,
                        0x1b0: 0x1,
                        0x1c0: 0x0,
                        0x1d0: 0x2100000,
                        0x1e0: 0x2000001,
                        0x1f0: 0x400,
                        0x108: 0x100400,
                        0x118: 0x2000401,
                        0x128: 0x2100001,
                        0x138: 0x1,
                        0x148: 0x2000000,
                        0x158: 0x100000,
                        0x168: 0x401,
                        0x178: 0x2100400,
                        0x188: 0x2000001,
                        0x198: 0x2100000,
                        0x1a8: 0x0,
                        0x1b8: 0x2100401,
                        0x1c8: 0x100401,
                        0x1d8: 0x400,
                        0x1e8: 0x2000400,
                        0x1f8: 0x100001
                    &amp;#125;, &amp;#123;
                        0x0: 0x8000820,
                        0x1: 0x20000,
                        0x2: 0x8000000,
                        0x3: 0x20,
                        0x4: 0x20020,
                        0x5: 0x8020820,
                        0x6: 0x8020800,
                        0x7: 0x800,
                        0x8: 0x8020000,
                        0x9: 0x8000800,
                        0xa: 0x20800,
                        0xb: 0x8020020,
                        0xc: 0x820,
                        0xd: 0x0,
                        0xe: 0x8000020,
                        0xf: 0x20820,
                        0x80000000: 0x800,
                        0x80000001: 0x8020820,
                        0x80000002: 0x8000820,
                        0x80000003: 0x8000000,
                        0x80000004: 0x8020000,
                        0x80000005: 0x20800,
                        0x80000006: 0x20820,
                        0x80000007: 0x20,
                        0x80000008: 0x8000020,
                        0x80000009: 0x820,
                        0x8000000a: 0x20020,
                        0x8000000b: 0x8020800,
                        0x8000000c: 0x0,
                        0x8000000d: 0x8020020,
                        0x8000000e: 0x8000800,
                        0x8000000f: 0x20000,
                        0x10: 0x20820,
                        0x11: 0x8020800,
                        0x12: 0x20,
                        0x13: 0x800,
                        0x14: 0x8000800,
                        0x15: 0x8000020,
                        0x16: 0x8020020,
                        0x17: 0x20000,
                        0x18: 0x0,
                        0x19: 0x20020,
                        0x1a: 0x8020000,
                        0x1b: 0x8000820,
                        0x1c: 0x8020820,
                        0x1d: 0x20800,
                        0x1e: 0x820,
                        0x1f: 0x8000000,
                        0x80000010: 0x20000,
                        0x80000011: 0x800,
                        0x80000012: 0x8020020,
                        0x80000013: 0x20820,
                        0x80000014: 0x20,
                        0x80000015: 0x8020000,
                        0x80000016: 0x8000000,
                        0x80000017: 0x8000820,
                        0x80000018: 0x8020820,
                        0x80000019: 0x8000020,
                        0x8000001a: 0x8000800,
                        0x8000001b: 0x0,
                        0x8000001c: 0x20800,
                        0x8000001d: 0x820,
                        0x8000001e: 0x20020,
                        0x8000001f: 0x8020800
                    &amp;#125;]
                    , n &amp;#x3D; [0xf8000001, 0x1f800000, 0x1f80000, 0x1f8000, 0x1f800, 0x1f80, 0x1f8, 0x8000001f]
                    , o &amp;#x3D; i[&amp;#39;DES&amp;#39;] &amp;#x3D; h[&amp;#39;extend&amp;#39;](&amp;#123;
                        &amp;#39;_doReset&amp;#39;: function () &amp;#123;
                            var s &amp;#x3D; this[&amp;#39;_key&amp;#39;]
                                , t &amp;#x3D; s[&amp;#39;words&amp;#39;]
                                , u &amp;#x3D; [];
                            for (var v &amp;#x3D; 0x0; v &amp;lt; 0x38; v++) &amp;#123;
                                var w &amp;#x3D; j[v] - 0x1;
                                u[v] &amp;#x3D; t[w &amp;gt;&amp;gt;&amp;gt; 0x5] &amp;gt;&amp;gt;&amp;gt; 0x1f - w % 0x20 &amp;amp; 0x1;
                            &amp;#125;
                            var x &amp;#x3D; this[&amp;#39;_subKeys&amp;#39;] &amp;#x3D; [];
                            for (var y &amp;#x3D; 0x0; y &amp;lt; 0x10; y++) &amp;#123;
                                var z &amp;#x3D; x[y] &amp;#x3D; []
                                    , A &amp;#x3D; l[y];
                                for (var v &amp;#x3D; 0x0; v &amp;lt; 0x18; v++) &amp;#123;
                                    z[v &amp;#x2F; 0x6 | 0x0] |&amp;#x3D; u[(k[v] - 0x1 + A) % 0x1c] &amp;lt;&amp;lt; 0x1f - v % 0x6,
                                        z[0x4 + (v &amp;#x2F; 0x6 | 0x0)] |&amp;#x3D; u[0x1c + (k[v + 0x18] - 0x1 + A) % 0x1c] &amp;lt;&amp;lt; 0x1f - v % 0x6;
                                &amp;#125;
                                z[0x0] &amp;#x3D; z[0x0] &amp;lt;&amp;lt; 0x1 | z[0x0] &amp;gt;&amp;gt;&amp;gt; 0x1f;
                                for (var v &amp;#x3D; 0x1; v &amp;lt; 0x7; v++) &amp;#123;
                                    z[v] &amp;#x3D; z[v] &amp;gt;&amp;gt;&amp;gt; (v - 0x1) * 0x4 + 0x3;
                                &amp;#125;
                                z[0x7] &amp;#x3D; z[0x7] &amp;lt;&amp;lt; 0x5 | z[0x7] &amp;gt;&amp;gt;&amp;gt; 0x1b;
                            &amp;#125;
                            var B &amp;#x3D; this[&amp;#39;_invSubKeys&amp;#39;] &amp;#x3D; [];
                            for (var v &amp;#x3D; 0x0; v &amp;lt; 0x10; v++) &amp;#123;
                                B[v] &amp;#x3D; x[0xf - v];
                            &amp;#125;
                        &amp;#125;,
                        &amp;#39;encryptBlock&amp;#39;: function (s, t) &amp;#123;
                            this[&amp;#39;_doCryptBlock&amp;#39;](s, t, this[&amp;#39;_subKeys&amp;#39;]);
                        &amp;#125;,
                        &amp;#39;decryptBlock&amp;#39;: function (s, t) &amp;#123;
                            this[&amp;#39;_doCryptBlock&amp;#39;](s, t, this[&amp;#39;_invSubKeys&amp;#39;]);
                        &amp;#125;,
                        &amp;#39;_doCryptBlock&amp;#39;: function (s, u, v) &amp;#123;
                            this[&amp;#39;_lBlock&amp;#39;] &amp;#x3D; s[u],
                                this[&amp;#39;_rBlock&amp;#39;] &amp;#x3D; s[u + 0x1],
                                p[&amp;#39;call&amp;#39;](this, 0x4, 0xf0f0f0f),
                                p[&amp;#39;call&amp;#39;](this, 0x10, 0xffff),
                                q[&amp;#39;call&amp;#39;](this, 0x2, 0x33333333),
                                q[&amp;#39;call&amp;#39;](this, 0x8, 0xff00ff),
                                p[&amp;#39;call&amp;#39;](this, 0x1, 0x55555555);
                            for (var w &amp;#x3D; 0x0; w &amp;lt; 0x10; w++) &amp;#123;
                                var x &amp;#x3D; v[w]
                                    , y &amp;#x3D; this[&amp;#39;_lBlock&amp;#39;]
                                    , z &amp;#x3D; this[&amp;#39;_rBlock&amp;#39;]
                                    , A &amp;#x3D; 0x0;
                                for (var B &amp;#x3D; 0x0; B &amp;lt; 0x8; B++) &amp;#123;
                                    A |&amp;#x3D; m[B][((z ^ x[B]) &amp;amp; n[B]) &amp;gt;&amp;gt;&amp;gt; 0x0];
                                &amp;#125;
                                this[&amp;#39;_lBlock&amp;#39;] &amp;#x3D; z,
                                    this[&amp;#39;_rBlock&amp;#39;] &amp;#x3D; y ^ A;
                            &amp;#125;
                            var D &amp;#x3D; this[&amp;#39;_lBlock&amp;#39;];
                            this[&amp;#39;_lBlock&amp;#39;] &amp;#x3D; this[&amp;#39;_rBlock&amp;#39;],
                                this[&amp;#39;_rBlock&amp;#39;] &amp;#x3D; D,
                                p[&amp;#39;call&amp;#39;](this, 0x1, 0x55555555),
                                q[&amp;#39;call&amp;#39;](this, 0x8, 0xff00ff),
                                q[&amp;#39;call&amp;#39;](this, 0x2, 0x33333333),
                                p[&amp;#39;call&amp;#39;](this, 0x10, 0xffff),
                                p[&amp;#39;call&amp;#39;](this, 0x4, 0xf0f0f0f),
                                s[u] &amp;#x3D; this[&amp;#39;_lBlock&amp;#39;],
                                s[u + 0x1] &amp;#x3D; this[&amp;#39;_rBlock&amp;#39;];
                        &amp;#125;,
                        &amp;#39;keySize&amp;#39;: 0x40 &amp;#x2F; 0x20,
                        &amp;#39;ivSize&amp;#39;: 0x40 &amp;#x2F; 0x20,
                        &amp;#39;blockSize&amp;#39;: 0x40 &amp;#x2F; 0x20
                    &amp;#125;);

                function p(s, u) &amp;#123;
                    var v &amp;#x3D; (this[&amp;#39;_lBlock&amp;#39;] &amp;gt;&amp;gt;&amp;gt; s ^ this[&amp;#39;_rBlock&amp;#39;]) &amp;amp; u;
                    this[&amp;#39;_rBlock&amp;#39;] ^&amp;#x3D; v,
                        this[&amp;#39;_lBlock&amp;#39;] ^&amp;#x3D; v &amp;lt;&amp;lt; s;
                &amp;#125;

                function q(s, u) &amp;#123;
                    var v &amp;#x3D; (this[&amp;#39;_rBlock&amp;#39;] &amp;gt;&amp;gt;&amp;gt; s ^ this[&amp;#39;_lBlock&amp;#39;]) &amp;amp; u;
                    this[&amp;#39;_lBlock&amp;#39;] ^&amp;#x3D; v,
                        this[&amp;#39;_rBlock&amp;#39;] ^&amp;#x3D; v &amp;lt;&amp;lt; s;
                &amp;#125;

                e[&amp;#39;DES&amp;#39;] &amp;#x3D; h[&amp;#39;_createHelper&amp;#39;](o);
                var r &amp;#x3D; i[&amp;#39;TripleDES&amp;#39;] &amp;#x3D; h[&amp;#39;extend&amp;#39;](&amp;#123;
                    &amp;#39;_doReset&amp;#39;: function () &amp;#123;
                        var s &amp;#x3D; this[&amp;#39;_key&amp;#39;]
                            , t &amp;#x3D; s[&amp;#39;words&amp;#39;];
                        if (t[&amp;#39;length&amp;#39;] !&amp;#x3D;&amp;#x3D; 0x2 &amp;amp;&amp;amp; t[&amp;#39;length&amp;#39;] !&amp;#x3D;&amp;#x3D; 0x4 &amp;amp;&amp;amp; t[&amp;#39;length&amp;#39;] &amp;lt; 0x6)
                            throw new Error(&amp;#39;Invalid\x20key\x20length\x20-\x203DES\x20requires\x20the\x20key\x20length\x20to\x20be\x2064,\x20128,\x20192\x20or\x20&amp;gt;192.&amp;#39;);
                        var u &amp;#x3D; t[&amp;#39;slice&amp;#39;](0x0, 0x2)
                            , v &amp;#x3D; t[&amp;#39;length&amp;#39;] &amp;lt; 0x4 ? t[&amp;#39;slice&amp;#39;](0x0, 0x2) : t[&amp;#39;slice&amp;#39;](0x2, 0x4)
                            , w &amp;#x3D; t[&amp;#39;length&amp;#39;] &amp;lt; 0x6 ? t[&amp;#39;slice&amp;#39;](0x0, 0x2) : t[&amp;#39;slice&amp;#39;](0x4, 0x6);
                        this[&amp;#39;_des1&amp;#39;] &amp;#x3D; o[&amp;#39;createEncryptor&amp;#39;](g[&amp;#39;create&amp;#39;](u)),
                            this[&amp;#39;_des2&amp;#39;] &amp;#x3D; o[&amp;#39;createEncryptor&amp;#39;](g[&amp;#39;create&amp;#39;](v)),
                            this[&amp;#39;_des3&amp;#39;] &amp;#x3D; o[&amp;#39;createEncryptor&amp;#39;](g[&amp;#39;create&amp;#39;](w));
                    &amp;#125;,
                    &amp;#39;encryptBlock&amp;#39;: function (s, t) &amp;#123;
                        this[&amp;#39;_des1&amp;#39;][&amp;#39;encryptBlock&amp;#39;](s, t),
                            this[&amp;#39;_des2&amp;#39;][&amp;#39;decryptBlock&amp;#39;](s, t),
                            this[&amp;#39;_des3&amp;#39;][&amp;#39;encryptBlock&amp;#39;](s, t);
                    &amp;#125;,
                    &amp;#39;decryptBlock&amp;#39;: function (s, t) &amp;#123;
                        this[&amp;#39;_des3&amp;#39;][&amp;#39;decryptBlock&amp;#39;](s, t),
                            this[&amp;#39;_des2&amp;#39;][&amp;#39;encryptBlock&amp;#39;](s, t),
                            this[&amp;#39;_des1&amp;#39;][&amp;#39;decryptBlock&amp;#39;](s, t);
                    &amp;#125;,
                    &amp;#39;keySize&amp;#39;: 0xc0 &amp;#x2F; 0x20,
                    &amp;#39;ivSize&amp;#39;: 0x40 &amp;#x2F; 0x20,
                    &amp;#39;blockSize&amp;#39;: 0x40 &amp;#x2F; 0x20
                &amp;#125;);
                e[&amp;#39;TripleDES&amp;#39;] &amp;#x3D; h[&amp;#39;_createHelper&amp;#39;](r);
            &amp;#125;()),
                d[&amp;#39;TripleDES&amp;#39;];
        &amp;#125;));
    &amp;#125;
        , &amp;#123;
            &amp;#39;.&amp;#x2F;cipher-core&amp;#39;: 0x4,
            &amp;#39;.&amp;#x2F;core&amp;#39;: 0x5,
            &amp;#39;.&amp;#x2F;enc-base64&amp;#39;: 0x6,
            &amp;#39;.&amp;#x2F;evpkdf&amp;#39;: 0x9,
            &amp;#39;.&amp;#x2F;md5&amp;#39;: 0xe
        &amp;#125;],
    0x25: [function (a, b, c) &amp;#123;
        ;(function (d, e) &amp;#123;
            if (typeof c &amp;#x3D;&amp;#x3D;&amp;#x3D; &amp;#39;object&amp;#39;)
                b[&amp;#39;exports&amp;#39;] &amp;#x3D; c &amp;#x3D; e(a(&amp;#39;.&amp;#x2F;core&amp;#39;));
            else
                typeof define &amp;#x3D;&amp;#x3D;&amp;#x3D; &amp;#39;function&amp;#39; &amp;amp;&amp;amp; define[&amp;#39;amd&amp;#39;] ? define([&amp;#39;.&amp;#x2F;core&amp;#39;], e) : e(d[&amp;#39;CryptoJS&amp;#39;]);
        &amp;#125;(this, function (d) &amp;#123;
            return function (e) &amp;#123;
                var f &amp;#x3D; d
                    , g &amp;#x3D; f[&amp;#39;lib&amp;#39;]
                    , h &amp;#x3D; g[&amp;#39;Base&amp;#39;]
                    , i &amp;#x3D; g[&amp;#39;WordArray&amp;#39;]
                    , j &amp;#x3D; f[&amp;#39;x64&amp;#39;] &amp;#x3D; &amp;#123;&amp;#125;
                    , k &amp;#x3D; j[&amp;#39;Word&amp;#39;] &amp;#x3D; h[&amp;#39;extend&amp;#39;](&amp;#123;
                    &amp;#39;init&amp;#39;: function (m, n) &amp;#123;
                        this[&amp;#39;high&amp;#39;] &amp;#x3D; m,
                            this[&amp;#39;low&amp;#39;] &amp;#x3D; n;
                    &amp;#125;
                &amp;#125;)
                    , l &amp;#x3D; j[&amp;#39;WordArray&amp;#39;] &amp;#x3D; h[&amp;#39;extend&amp;#39;](&amp;#123;
                    &amp;#39;init&amp;#39;: function (m, n) &amp;#123;
                        m &amp;#x3D; this[&amp;#39;words&amp;#39;] &amp;#x3D; m || [],
                            n !&amp;#x3D; e ? this[&amp;#39;sigBytes&amp;#39;] &amp;#x3D; n : this[&amp;#39;sigBytes&amp;#39;] &amp;#x3D; m[&amp;#39;length&amp;#39;] * 0x8;
                    &amp;#125;,
                    &amp;#39;toX32&amp;#39;: function () &amp;#123;
                        var m &amp;#x3D; this[&amp;#39;words&amp;#39;]
                            , n &amp;#x3D; m[&amp;#39;length&amp;#39;]
                            , o &amp;#x3D; [];
                        for (var p &amp;#x3D; 0x0; p &amp;lt; n; p++) &amp;#123;
                            var q &amp;#x3D; m[p];
                            o[&amp;#39;push&amp;#39;](q[&amp;#39;high&amp;#39;]),
                                o[&amp;#39;push&amp;#39;](q[&amp;#39;low&amp;#39;]);
                        &amp;#125;
                        return i[&amp;#39;create&amp;#39;](o, this[&amp;#39;sigBytes&amp;#39;]);
                    &amp;#125;,
                    &amp;#39;clone&amp;#39;: function () &amp;#123;
                        var m &amp;#x3D; h[&amp;#39;clone&amp;#39;][&amp;#39;call&amp;#39;](this)
                            , n &amp;#x3D; m[&amp;#39;words&amp;#39;] &amp;#x3D; this[&amp;#39;words&amp;#39;][&amp;#39;slice&amp;#39;](0x0)
                            , o &amp;#x3D; n[&amp;#39;length&amp;#39;];
                        for (var p &amp;#x3D; 0x0; p &amp;lt; o; p++) &amp;#123;
                            n[p] &amp;#x3D; n[p][&amp;#39;clone&amp;#39;]();
                        &amp;#125;
                        return m;
                    &amp;#125;
                &amp;#125;);
            &amp;#125;(),
                d;
        &amp;#125;));
    &amp;#125;
        , &amp;#123;
            &amp;#39;.&amp;#x2F;core&amp;#39;: 0x5
        &amp;#125;]
&amp;#125;, &amp;#123;&amp;#125;, [0x2]));

function get_token(page) &amp;#123;
    var e &amp;#x3D; Date[&amp;#39;now&amp;#39;]()
        , f &amp;#x3D; asxe(&amp;#39;crypto-js&amp;#39;)
        , g &amp;#x3D; &amp;#39;666yuanrenxue66&amp;#39;
        , h &amp;#x3D; f[&amp;#39;AES&amp;#39;][&amp;#39;encrypt&amp;#39;](e + String(page), g, &amp;#123;
        &amp;#39;mode&amp;#39;: f[&amp;#39;mode&amp;#39;][&amp;#39;ECB&amp;#39;],
        &amp;#39;padding&amp;#39;: f[&amp;#39;pad&amp;#39;][&amp;#39;Pkcs7&amp;#39;]
    &amp;#125;)
        , i &amp;#x3D; &amp;#39;&amp;#x2F;api&amp;#x2F;match2023&amp;#x2F;1&amp;#39;
        , j &amp;#x3D; &amp;#123;
        &amp;#39;page&amp;#39;: String(page),
        &amp;#39;token&amp;#39;: f[&amp;#39;MD5&amp;#39;](h[&amp;#39;toString&amp;#39;]())[&amp;#39;toString&amp;#39;](),
        &amp;#39;now&amp;#39;: e
    &amp;#125;;
    return j
&amp;#125;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://www.asxe.vip/2023/05/05/ImageMagic%E7%9A%84API%E6%96%87%E6%A1%A3(%E4%B8%AD%E8%8B%B1%E6%96%87%E7%89%88)/</guid>
            <title>ImageMagic库API文档(中英文版)</title>
            <link>https://www.asxe.vip/2023/05/05/ImageMagic%E7%9A%84API%E6%96%87%E6%A1%A3(%E4%B8%AD%E8%8B%B1%E6%96%87%E7%89%88)/</link>
            <category term="Python" scheme="https://www.asxe.vip/categories/python/" />
            <category term="ImageMagic" scheme="https://www.asxe.vip/categories/python/imagemagic/" />
            <category term="API文档" scheme="https://www.asxe.vip/tags/API%E6%96%87%E6%A1%A3/" />
            <category term="ImageMagic" scheme="https://www.asxe.vip/tags/ImageMagic/" />
            <pubDate>Fri, 05 May 2023 18:58:58 +0800</pubDate>
            <description><![CDATA[ &lt;div class=&#34;tab&#34; data-id=&#34;id1&#34; data-title=&#34;中文文档&#34;&gt;
&lt;h1 id=&#34;欢迎&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#欢迎&#34;&gt;#&lt;/a&gt; 欢迎！&lt;/h1&gt;
&lt;p&gt;如果说你看到了这里，那么有两种可能，要么是为 ImageMagic 而来，要么就是闲逛，不过，这里都欢迎你的到来！&lt;/p&gt;
&lt;h1 id=&#34;获取imagemagic&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#获取imagemagic&#34;&gt;#&lt;/a&gt; 获取 ImageMagic&lt;/h1&gt;
&lt;ol&gt;
&lt;li&gt;使用 pip 下载：&lt;br /&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;pip &lt;span class=&#34;token function&#34;&gt;install&lt;/span&gt; ImageMagic&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;从源进行构建：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL2FzeGV6L0ltYWdlTWFnaWM=&#34;&gt;源&lt;/span&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;docs&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#docs&#34;&gt;#&lt;/a&gt; DOCS&lt;/h1&gt;
&lt;p&gt;感谢使用 ImageMagic，这是 Python 的第三方库 ImageMagic 的临时文档，请查阅。若在使用过程中有什么问题或是你觉得可以改进的地方，请联系我！&lt;/p&gt;
&lt;h2 id=&#34;image模块&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#image模块&#34;&gt;#&lt;/a&gt; Image 模块&lt;/h2&gt;
&lt;h3 id=&#34;word_to_image&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#word_to_image&#34;&gt;#&lt;/a&gt; word_to_image()&lt;/h3&gt;
&lt;p&gt;将文本转换成图片&lt;br /&gt;
 &lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; ImageMagic &lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; Image
Image&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;word_to_image&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;这里是你要转成图片的文本&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;F:/image/1.png&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;fontPath&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;F:/ttf/字语时光体.ttf&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/p&gt;
&lt;h3 id=&#34;voice_to_word&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#voice_to_word&#34;&gt;#&lt;/a&gt; voice_to_word()&lt;/h3&gt;
&lt;p&gt;识别音频里的内容，使用讯飞的语音转写，你需要去&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9jb25zb2xlLnhmeXVuLmNuL3NlcnZpY2VzL2xmYXNy&#34;&gt;点击这里&lt;/span&gt;获取你的 appid 以及 key，支持格式为 WAV, FLAC, OPUS, M4A, MP3&lt;br /&gt;
&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; ImageMagic &lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; Image

appid &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;&#34;&lt;/span&gt;
key &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;&#34;&lt;/span&gt;
filepath &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;F:/mp3/test.mp3&#34;&lt;/span&gt;
audio &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; Image&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;Audio&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;appid&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;key&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;filepath&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
text &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; audio&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;voice_to_word&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;text&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/p&gt;
&lt;h3 id=&#34;audio_to_image&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#audio_to_image&#34;&gt;#&lt;/a&gt; audio_to_image()&lt;/h3&gt;
&lt;p&gt;将音频内容转为图片，同样，你需要去&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9jb25zb2xlLnhmeXVuLmNuL3NlcnZpY2VzL2xmYXNy&#34;&gt;点击这里&lt;/span&gt;获取你的 appid 以及 key，支持格式为 WAV, FLAC, OPUS, M4A, MP3&lt;br /&gt;
&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; ImageMagic &lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; Image

appid &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;&#34;&lt;/span&gt;
key &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;&#34;&lt;/span&gt;
filepath &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;F:/mp3/test.mp3&#34;&lt;/span&gt;
Image&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;audio_to_image&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;appid&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;key&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;filepath&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;F:/image/test.png&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;#最后一个参数是图片保存地址&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/p&gt;
&lt;h3 id=&#34;categorize_image&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#categorize_image&#34;&gt;#&lt;/a&gt; categorize_image()&lt;/h3&gt;
&lt;p&gt;分类文件夹里的图片，格式包括 jpg, jpeg, png, webp, bmp, tif, tiff, gif, svg, wmf，会在此文件夹下生成以已有文件的后缀为名的新文件夹，并将同类文件复制到里面&lt;br /&gt;
 &lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; ImageMagic &lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; Image
Image&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;categorize_image&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;F:/images&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;#这里输入你的文件夹路径&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/p&gt;
&lt;h3 id=&#34;convert&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#convert&#34;&gt;#&lt;/a&gt; convert()&lt;/h3&gt;
&lt;p&gt;转换图片格式&lt;br /&gt;
 &lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; ImageMagic &lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; Image
Image&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;convert&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;F:/image/test.png&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;webp&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;F:/image/test.webp&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;#第一个参数是原文件路径，第二个是转换的格式，第三个是保存路径&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/p&gt;
&lt;h3 id=&#34;equal_scale_image&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#equal_scale_image&#34;&gt;#&lt;/a&gt; equal_scale_image()&lt;/h3&gt;
&lt;p&gt;将图片等比例缩小或者放大&lt;br /&gt;
 &lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; ImageMagic &lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; Image
Image&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;equal_scale_image&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;F:/image/test.png&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;F:/image/save.png&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;#最后一个参数是变化倍数&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/p&gt;
&lt;h3 id=&#34;customize_image&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#customize_image&#34;&gt;#&lt;/a&gt; customize_image()&lt;/h3&gt;
&lt;p&gt;自定义修改图片分辨率，若是不输入第三和四个参数，那么将会使用原参数&lt;br /&gt;
 &lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; ImageMagic &lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; Image
Image&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;customize_image&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;F:/image/test.png&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;F:/image/save.png&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1960&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1080&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/p&gt;
&lt;h3 id=&#34;lbp_image_hash&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#lbp_image_hash&#34;&gt;#&lt;/a&gt; lbp_image_hash()&lt;/h3&gt;
&lt;p&gt;哈希局部二值算法计算图片哈希值&lt;br /&gt;
 &lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; ImageMagic &lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; Image
&lt;span class=&#34;token builtin&#34;&gt;hash&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; Image&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;lbp_image_hash&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;F:/image/test.png&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;hash&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/p&gt;
&lt;h3 id=&#34;p_image_hash&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#p_image_hash&#34;&gt;#&lt;/a&gt; p_image_hash()&lt;/h3&gt;
&lt;p&gt;感知哈希算法计算图片哈希值&lt;br /&gt;
 &lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; ImageMagic &lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; Image
&lt;span class=&#34;token builtin&#34;&gt;hash&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; Image&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;p_image_hash&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;F:/image/test.png&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;hash&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/p&gt;
&lt;h3 id=&#34;pca_image_hash&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#pca_image_hash&#34;&gt;#&lt;/a&gt; pca_image_hash()&lt;/h3&gt;
&lt;p&gt;主成分分析算法计算图片哈希值&lt;br /&gt;
 &lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; ImageMagic &lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; Image
&lt;span class=&#34;token builtin&#34;&gt;hash&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; Image&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;pca_image_hash&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;F:/image/test.png&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/p&gt;
&lt;h3 id=&#34;fft_image_hash&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#fft_image_hash&#34;&gt;#&lt;/a&gt; fft_image_hash()&lt;/h3&gt;
&lt;p&gt;傅里叶变换算法计算哈希值&lt;br /&gt;
 &lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; ImageMagic &lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; Image
&lt;span class=&#34;token builtin&#34;&gt;hash&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; Image&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;fft_image_hash&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;F:/image/test.png&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/p&gt;
&lt;h3 id=&#34;average_image_hash&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#average_image_hash&#34;&gt;#&lt;/a&gt; average_image_hash()&lt;/h3&gt;
&lt;p&gt;哈希平均算法计算图片哈希值&lt;br /&gt;
 &lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; ImageMagic &lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; Image
&lt;span class=&#34;token builtin&#34;&gt;hash&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; Image&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;average_image_hash&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;F:/image/test.png&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;hash&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/p&gt;
&lt;h3 id=&#34;remove_same_images&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#remove_same_images&#34;&gt;#&lt;/a&gt; remove_same_images()&lt;/h3&gt;
&lt;p&gt;删除某目录下相同的图片且每张图片保留一张。&lt;br /&gt;
具体实现：通过计算图片的哈希值，相同图片则会被删除。&lt;br /&gt;
&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; ImageMagic &lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; Image
Image&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;remove_same_images&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;F:/image&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/p&gt;
&lt;h2 id=&#34;aocr模块&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#aocr模块&#34;&gt;#&lt;/a&gt; Aocr 模块&lt;/h2&gt;
&lt;p&gt;使用本模块请前往&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly90ZXNzZXJhY3Qtb2NyLmdpdGh1Yi5pby90ZXNzZG9jL0luc3RhbGxhdGlvbi5odG1s&#34;&gt;点击这里&lt;/span&gt;下载 OCR 引擎&lt;/p&gt;
&lt;h3 id=&#34;image_to_text&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#image_to_text&#34;&gt;#&lt;/a&gt; image_to_text()&lt;/h3&gt;
&lt;p&gt;识别图像中的文本，参数 filePath：图片路径，lang：图片里的语言，默认中文，可以多语言，例：&#39;chi_sim+eng&#39;,timeout: 识别超时时间，默认 0，即无&lt;br /&gt;
 &lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; ImageMagic &lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; Aocr
text &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; Aocr&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;image_to_text&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;F:/image/test.png&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/p&gt;
&lt;h3 id=&#34;image_to_pdf&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#image_to_pdf&#34;&gt;#&lt;/a&gt; image_to_pdf()&lt;/h3&gt;
&lt;p&gt;将图片转为可搜索的 pdf 文件&lt;br /&gt;
 &lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; ImageMagic &lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; Aocr
Aocr&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;image_to_pdf&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;F:/image/test.png&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;F:/pdf/test.pdf&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/p&gt;
&lt;h3 id=&#34;image_to_hocr&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#image_to_hocr&#34;&gt;#&lt;/a&gt; image_to_hocr()&lt;/h3&gt;
&lt;p&gt;将图片转为 HOCR&lt;br /&gt;
&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; ImageMagic &lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; Aocr
hocr &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; Aocr&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;image_to_hocr&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;F:/image/test,png&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/p&gt;
&lt;h3 id=&#34;image_to_altoxml&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#image_to_altoxml&#34;&gt;#&lt;/a&gt; image_to_AltoXml()&lt;/h3&gt;
&lt;p&gt;将图片转为 AltXml&lt;br /&gt;
&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; ImageMagic &lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; Aocr
xml &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; Aocr&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;image_to_AltoXml&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;F:/image/test.png&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/p&gt;
&lt;h3 id=&#34;get_image_data&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#get_image_data&#34;&gt;#&lt;/a&gt; get_image_data()&lt;/h3&gt;
&lt;p&gt;获取图片详细的数据，包括框、置信度、行号和页码。需要 tesseract 版本 3.05+&lt;br /&gt;
&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; ImageMagic &lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; Aocr
data &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; Aocr&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;get_image_data&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;F:/image/test.png&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/p&gt;
&lt;h3 id=&#34;get_image_osd&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#get_image_osd&#34;&gt;#&lt;/a&gt; get_image_osd()&lt;/h3&gt;
&lt;p&gt;获取有关方向和脚本检测的信息&lt;br /&gt;
 &lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; ImageMagic &lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; Aocr
osd &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; Aocr&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;get_image_osd&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;F:/image/test.png&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/p&gt;
&lt;h3 id=&#34;get_image_boxs&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#get_image_boxs&#34;&gt;#&lt;/a&gt; get_image_boxs()&lt;/h3&gt;
&lt;p&gt;获取图片边界框的估计值&lt;br /&gt;
 &lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; ImageMagic &lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; Aocr
boxs &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; Aocr&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;get_image_boxs&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;F:/image/test.png&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/p&gt;
&lt;h3 id=&#34;check_languages&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#check_languages&#34;&gt;#&lt;/a&gt; check_languages()&lt;/h3&gt;
&lt;p&gt;获取已安装的语言包&lt;br /&gt;
 &lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; ImageMagic &lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; Aocr
lang &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; Aocr&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;check_languages&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;lang&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;tab&#34; data-id=&#34;id1&#34; data-title=&#34;English Docs&#34;&gt;
&lt;h1 id=&#34;welcome-to-you&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#welcome-to-you&#34;&gt;#&lt;/a&gt; Welcome to you !&lt;/h1&gt;
&lt;p&gt;If you see it, there are two possibilities, either for ImageMagic or just hanging out, but you&#39;re welcome here!&lt;/p&gt;
&lt;h1 id=&#34;where-to-get-it&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#where-to-get-it&#34;&gt;#&lt;/a&gt; Where to get it ?&lt;/h1&gt;
&lt;ol&gt;
&lt;li&gt;Download using pip:&lt;br /&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;pip &lt;span class=&#34;token function&#34;&gt;install&lt;/span&gt; ImageMagic&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;Build from source:&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL2FzeGV6L0ltYWdlTWFnaWM=&#34;&gt;source&lt;/span&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;docs-2&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#docs-2&#34;&gt;#&lt;/a&gt; DOCS&lt;/h1&gt;
&lt;p&gt;Thanks for using ImageMagic, which is temporary documentation for Python&#39;s third-party library ImageMagic, check it out. If there are any problems during use or what you think can be improved, please contact me!&lt;/p&gt;
&lt;h2 id=&#34;image-module&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#image-module&#34;&gt;#&lt;/a&gt; Image module&lt;/h2&gt;
&lt;h3 id=&#34;word_to_image-2&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#word_to_image-2&#34;&gt;#&lt;/a&gt; word_to_image()&lt;/h3&gt;
&lt;p&gt;Convert text to images&lt;br /&gt;
&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; ImageMagic &lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; Image
Image&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;word_to_image&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;Here&#39;s the text you want to turn into an image.&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;F:/image/1.png&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;fontPath&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;F:/ttf/test.ttf&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/p&gt;
&lt;h3 id=&#34;voice_to_word-2&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#voice_to_word-2&#34;&gt;#&lt;/a&gt; voice_to_word()&lt;/h3&gt;
&lt;p&gt;To identify the content in the audio and use iFLYTEK&#39;s voice transcription, you need to go to [click here] (&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9jb25zb2xlLnhmeXVuLmNuL3NlcnZpY2VzL2xmYXNy&#34;&gt;https://console.xfyun.cn/services/lfasr&lt;/span&gt;) to get your appid and key, which are supported in WAV, FLAC, OPUS, M4A, MP3.&lt;br /&gt;
&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; ImageMagic &lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; Image

appid &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;&#34;&lt;/span&gt;
key &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;&#34;&lt;/span&gt;
filepath &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;F:/mp3/test.mp3&#34;&lt;/span&gt;
audio &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; Image&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;Audio&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;appid&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;key&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;filepath&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
text &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; audio&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;voice_to_word&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;text&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/p&gt;
&lt;h3 id=&#34;audio_to_image-2&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#audio_to_image-2&#34;&gt;#&lt;/a&gt; audio_to_image()&lt;/h3&gt;
&lt;p&gt;To convert audio content to images, you need to go to [click here] (&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9jb25zb2xlLnhmeXVuLmNuL3NlcnZpY2VzL2xmYXNy&#34;&gt;https://console.xfyun.cn/services/lfasr&lt;/span&gt;) to get your appid and key, which are supported in WAV, FLAC, OPUS, M4A, MP3.&lt;br /&gt;
&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; ImageMagic &lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; Image

appid &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;&#34;&lt;/span&gt;
key &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;&#34;&lt;/span&gt;
filepath &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;F:/mp3/test.mp3&#34;&lt;/span&gt;
Image&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;audio_to_image&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;appid&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;key&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;filepath&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;F:/image/test.png&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;#The last parameter is the address where the image is saved.&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/p&gt;
&lt;h3 id=&#34;categorize_image-2&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#categorize_image-2&#34;&gt;#&lt;/a&gt; categorize_image()&lt;/h3&gt;
&lt;p&gt;The images in the category folder, including jpg, jpeg, png, webp, bmp, tif, tiff, gif, svg, wmf, will generate a new folder named with the suffix of the existing file under this folder, and copy the same kind of files into it.&lt;br /&gt;
&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; ImageMagic &lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; Image
Image&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;categorize_image&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;F:/images&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;#Enter your folder path here&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/p&gt;
&lt;h3 id=&#34;convert-2&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#convert-2&#34;&gt;#&lt;/a&gt; convert()&lt;/h3&gt;
&lt;p&gt;Convert image format.&lt;br /&gt;
&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; ImageMagic &lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; Image
Image&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;convert&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;F:/image/test.png&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;webp&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;F:/image/test.webp&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;#The first parameter is the path to the original file, the second is the converted format, and the third is the saved path.&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/p&gt;
&lt;h3 id=&#34;equal_scale_image-2&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#equal_scale_image-2&#34;&gt;#&lt;/a&gt; equal_scale_image()&lt;/h3&gt;
&lt;p&gt;Reduce or enlarge the image at equal scale.&lt;br /&gt;
&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; ImageMagic &lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; Image
Image&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;equal_scale_image&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;F:/image/test.png&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;F:/image/save.png&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;#The last parameter is the multiplier.&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/p&gt;
&lt;h3 id=&#34;customize_image-2&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#customize_image-2&#34;&gt;#&lt;/a&gt; customize_image()&lt;/h3&gt;
&lt;p&gt;Customize the image resolution, if you do not enter the third and fourth parameters, the original parameters will be used.&lt;br /&gt;
&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; ImageMagic &lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; Image
Image&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;customize_image&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;F:/image/test.png&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;F:/image/save.png&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1960&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1080&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/p&gt;
&lt;h3 id=&#34;lbp_image_hash-2&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#lbp_image_hash-2&#34;&gt;#&lt;/a&gt; lbp_image_hash()&lt;/h3&gt;
&lt;p&gt;The hash local binary algorithm calculates the image hash value.&lt;br /&gt;
&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; ImageMagic &lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; Image
&lt;span class=&#34;token builtin&#34;&gt;hash&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; Image&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;lbp_image_hash&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;F:/image/test.png&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;hash&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/p&gt;
&lt;h3 id=&#34;p_image_hash-2&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#p_image_hash-2&#34;&gt;#&lt;/a&gt; p_image_hash()&lt;/h3&gt;
&lt;p&gt;The hash awareness algorithm calculates the image hash value.&lt;br /&gt;
&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; ImageMagic &lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; Image
&lt;span class=&#34;token builtin&#34;&gt;hash&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; Image&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;p_image_hash&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;F:/image/test.png&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;hash&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/p&gt;
&lt;h3 id=&#34;pca_image_hash-2&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#pca_image_hash-2&#34;&gt;#&lt;/a&gt; pca_image_hash()&lt;/h3&gt;
&lt;p&gt;The principal component analysis algorithm calculates the image hash value.&lt;br /&gt;
&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; ImageMagic &lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; Image
&lt;span class=&#34;token builtin&#34;&gt;hash&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; Image&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;pca_image_hash&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;F:/image/test.png&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/p&gt;
&lt;h3 id=&#34;fft_image_hash-2&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#fft_image_hash-2&#34;&gt;#&lt;/a&gt; fft_image_hash()&lt;/h3&gt;
&lt;p&gt;The Fourier transform algorithm computes the hash value.&lt;br /&gt;
&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; ImageMagic &lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; Image
&lt;span class=&#34;token builtin&#34;&gt;hash&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; Image&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;fft_image_hash&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;F:/image/test.png&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/p&gt;
&lt;h3 id=&#34;average_image_hash-2&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#average_image_hash-2&#34;&gt;#&lt;/a&gt; average_image_hash()&lt;/h3&gt;
&lt;p&gt;The hash averaging algorithm calculates the image hash value.&lt;br /&gt;
&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; ImageMagic &lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; Image
&lt;span class=&#34;token builtin&#34;&gt;hash&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; Image&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;average_image_hash&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;F:/image/test.png&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;hash&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/p&gt;
&lt;h3 id=&#34;remove_same_images-2&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#remove_same_images-2&#34;&gt;#&lt;/a&gt; remove_same_images()&lt;/h3&gt;
&lt;p&gt;Delete the same images in a directory and keep one image per image.&lt;br /&gt;
Implementation: By calculating the hash value of the image, the same image will be deleted.&lt;br /&gt;
&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; ImageMagic &lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; Image
Image&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;remove_same_images&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;F:/image&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/p&gt;
&lt;h2 id=&#34;aocr-module&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#aocr-module&#34;&gt;#&lt;/a&gt; Aocr module&lt;/h2&gt;
&lt;p&gt;To use this module, go to [click here] (&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly90ZXNzZXJhY3Qtb2NyLmdpdGh1Yi5pby90ZXNzZG9jL0luc3RhbGxhdGlvbi5odG1s&#34;&gt;https://tesseract-ocr.github.io/tessdoc/Installation.html&lt;/span&gt;) to download the OCR engine.&lt;/p&gt;
&lt;h3 id=&#34;image_to_text-2&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#image_to_text-2&#34;&gt;#&lt;/a&gt; image_to_text()&lt;/h3&gt;
&lt;p&gt;Identify text in an image, parameters filePath: image path, lang: language in the image, default Chinese, can be multilingual, for example: &#39;chi_sim+eng&#39;, timeout: recognition timeout, default 0, that is, none.&lt;br /&gt;
&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; ImageMagic &lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; Aocr
text &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; Aocr&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;image_to_text&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;F:/image/test.png&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/p&gt;
&lt;h3 id=&#34;image_to_pdf-2&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#image_to_pdf-2&#34;&gt;#&lt;/a&gt; image_to_pdf()&lt;/h3&gt;
&lt;p&gt;Turn images into searchable PDF files.&lt;br /&gt;
&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; ImageMagic &lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; Aocr
Aocr&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;image_to_pdf&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;F:/image/test.png&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;F:/pdf/test.pdf&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/p&gt;
&lt;h3 id=&#34;image_to_hocr-2&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#image_to_hocr-2&#34;&gt;#&lt;/a&gt; image_to_hocr()&lt;/h3&gt;
&lt;p&gt;Turn the picture into HOCR.&lt;br /&gt;
&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; ImageMagic &lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; Aocr
hocr &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; Aocr&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;image_to_hocr&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;F:/image/test,png&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/p&gt;
&lt;h3 id=&#34;image_to_altoxml-2&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#image_to_altoxml-2&#34;&gt;#&lt;/a&gt; image_to_AltoXml()&lt;/h3&gt;
&lt;p&gt;Convert the image to AltXml.&lt;br /&gt;
&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; ImageMagic &lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; Aocr
xml &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; Aocr&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;image_to_AltoXml&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;F:/image/test.png&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/p&gt;
&lt;h3 id=&#34;get_image_data-2&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#get_image_data-2&#34;&gt;#&lt;/a&gt; get_image_data()&lt;/h3&gt;
&lt;p&gt;Get detailed data for an image, including boxes, confidence, line numbers, and page numbers. Requires tesseract version 3.05+.&lt;br /&gt;
&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; ImageMagic &lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; Aocr
data &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; Aocr&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;get_image_data&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;F:/image/test.png&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/p&gt;
&lt;h3 id=&#34;get_image_osd-2&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#get_image_osd-2&#34;&gt;#&lt;/a&gt; get_image_osd()&lt;/h3&gt;
&lt;p&gt;Get information about orientation and script detection.&lt;br /&gt;
&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; ImageMagic &lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; Aocr
osd &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; Aocr&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;get_image_osd&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;F:/image/test.png&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/p&gt;
&lt;h3 id=&#34;get_image_boxs-2&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#get_image_boxs-2&#34;&gt;#&lt;/a&gt; get_image_boxs()&lt;/h3&gt;
&lt;p&gt;Gets an estimate of the picture bounding box.&lt;br /&gt;
&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; ImageMagic &lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; Aocr
boxs &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; Aocr&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;get_image_boxs&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;F:/image/test.png&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/p&gt;
&lt;h3 id=&#34;check_languages-2&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#check_languages-2&#34;&gt;#&lt;/a&gt; check_languages()&lt;/h3&gt;
&lt;p&gt;Gets the installed language packs.&lt;br /&gt;
&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; ImageMagic &lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; Aocr
lang &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; Aocr&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;check_languages&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;lang&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/p&gt;
&lt;/div&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://www.asxe.vip/2023/05/01/%E7%88%AC%E5%8F%96%E9%93%9C%E9%92%9F%E6%AD%8C%E5%8D%95%E9%9F%B3%E4%B9%90/</guid>
            <title>爬取铜钟歌单音乐</title>
            <link>https://www.asxe.vip/2023/05/01/%E7%88%AC%E5%8F%96%E9%93%9C%E9%92%9F%E6%AD%8C%E5%8D%95%E9%9F%B3%E4%B9%90/</link>
            <category term="Python" scheme="https://www.asxe.vip/categories/python/" />
            <category term="爬虫" scheme="https://www.asxe.vip/categories/python/spider/" />
            <category term="python" scheme="https://www.asxe.vip/tags/python/" />
            <category term="爬虫" scheme="https://www.asxe.vip/tags/%E7%88%AC%E8%99%AB/" />
            <pubDate>Mon, 01 May 2023 17:46:20 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;开始&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#开始&#34;&gt;#&lt;/a&gt; 开始&lt;/h1&gt;
&lt;ol&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly90b256aG9uLmNvbS8=&#34;&gt;网站&lt;/span&gt;&lt;br /&gt;
注意：我们这次仅仅是爬取某歌单里的音乐&lt;br /&gt;
&lt;span class=&#34;label warnning&#34;&gt;仅限交流与学习，勿作非法用途&lt;/span&gt;&lt;br /&gt;
&lt;span class=&#34;label warnning&#34;&gt;版权所有，转载请注明出处，本页如有违规，请联系删除&lt;/span&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;正文&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#正文&#34;&gt;#&lt;/a&gt; 正文&lt;/h1&gt;
&lt;ol&gt;
&lt;li&gt;有不懂的地方请在评论区留言&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;div class=&#34;caption&#34;&gt;&lt;span&gt;铜钟网&lt;/span&gt;&lt;/div&gt;&lt;code class=&#34;language-python&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; requests
&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; json

res &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token boolean&#34;&gt;None&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;#模块级定义，因为下面用了全局变量&lt;/span&gt;

&lt;span class=&#34;token keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;TongZhong&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;

    &lt;span class=&#34;token keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;__init__&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;self&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
        self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;api &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;https://tonzhon.com/api/playlists/63749694e6e9cbb9d6f1b10b&#39;&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;#这是歌单的 API 地址，注意，不是歌单的地址，而是歌单的 API 地址，两者有区分&lt;/span&gt;
        self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;qq &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;https://music-api.tonzhon.com/song_source/qq/&amp;#123;song_id&amp;#125;&#39;&lt;/span&gt;
        self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;kuwo &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;https://music-api.tonzhon.com/song_source/kuwo/&amp;#123;song_id&amp;#125;&#39;&lt;/span&gt;
        self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;netease &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;https://music-api.tonzhon.com/song_source/netease/&amp;#123;song_id&amp;#125;&#39;&lt;/span&gt;
        self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;headers&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;
            &lt;span class=&#34;token string&#34;&gt;&#39;user-agent&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/112.0.0.0 Safari/537.36 Edg/112.0.1722.64&#39;&lt;/span&gt;
        &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;

    &lt;span class=&#34;token keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;get_index&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;self&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
        all_response &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; requests&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;get&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;api&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;headers&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;headers&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;json&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
        songs &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; all_response&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;get&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;playlist&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;get&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;songs&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
        &lt;span class=&#34;token comment&#34;&gt;#三个列表递推，得到所有元素&lt;/span&gt;
        song_ids &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;song&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;get&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;originalId&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;for&lt;/span&gt; song &lt;span class=&#34;token keyword&#34;&gt;in&lt;/span&gt; songs&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;
        song_names &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;song&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;get&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;name&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;for&lt;/span&gt; song &lt;span class=&#34;token keyword&#34;&gt;in&lt;/span&gt; songs&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;
        platforms &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;song&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;get&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;platform&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;for&lt;/span&gt; song &lt;span class=&#34;token keyword&#34;&gt;in&lt;/span&gt; songs&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;
        &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; song_ids&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;song_names&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;platforms

    &lt;span class=&#34;token keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;get_response&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;self&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;song_id&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;song_name&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;platform&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
        &lt;span class=&#34;token keyword&#34;&gt;global&lt;/span&gt; res  &lt;span class=&#34;token comment&#34;&gt;#全局变量&lt;/span&gt;
        &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; platform &lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;qq&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
            res &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; requests&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;get&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;qq&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;format&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;song_id&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;song_id&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;headers&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;headers&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;json&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
        &lt;span class=&#34;token keyword&#34;&gt;elif&lt;/span&gt; platform &lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;kuwo&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
            res &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; requests&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;get&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;kuwo&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;format&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;song_id&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;song_id&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;headers&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;headers&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;json&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
        &lt;span class=&#34;token keyword&#34;&gt;elif&lt;/span&gt; platform &lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;netease&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
            res &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; requests&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;get&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;netease&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;format&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;song_id&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;song_id&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;headers&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;headers&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;json&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
        &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; res &lt;span class=&#34;token keyword&#34;&gt;is&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;not&lt;/span&gt; &lt;span class=&#34;token boolean&#34;&gt;None&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
            &lt;span class=&#34;token keyword&#34;&gt;try&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
                links &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; res&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;get&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;data&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;get&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;songSource&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;#这个元素可能不存在，因此需用 try-except 语句&lt;/span&gt;
                res &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; requests&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;get&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;links&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
                &lt;span class=&#34;token keyword&#34;&gt;with&lt;/span&gt; &lt;span class=&#34;token builtin&#34;&gt;open&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string-interpolation&#34;&gt;&lt;span class=&#34;token string&#34;&gt;f&#39;./music/&lt;/span&gt;&lt;span class=&#34;token interpolation&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;song_name&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;.mp3&#39;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;wb&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;as&lt;/span&gt; f&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
                    f&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;write&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;res&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;content&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
            &lt;span class=&#34;token keyword&#34;&gt;except&lt;/span&gt; AttributeError &lt;span class=&#34;token keyword&#34;&gt;as&lt;/span&gt; a&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
                &lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string-interpolation&#34;&gt;&lt;span class=&#34;token string&#34;&gt;f&#39;错误：&lt;/span&gt;&lt;span class=&#34;token interpolation&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;a&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
        &lt;span class=&#34;token keyword&#34;&gt;else&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
            &lt;span class=&#34;token keyword&#34;&gt;pass&lt;/span&gt;

&lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; __name__ &lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;__main__&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    song_ids&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;song_names&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;platforms &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; TongZhong&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;get_index&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;for&lt;/span&gt; song_id&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;song_name&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;platform &lt;span class=&#34;token keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;token builtin&#34;&gt;zip&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;song_ids&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;song_names&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;platforms&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;#有三个元素，用 zip () 语法&lt;/span&gt;
        TongZhong&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;get_response&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;song_id&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;song_name&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;platform&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/p&gt;
&lt;h1 id=&#34;效果&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#效果&#34;&gt;#&lt;/a&gt; 效果&lt;/h1&gt;
&lt;p&gt;&lt;img data-src=&#34;https://i.imgloc.com/2023/05/01/iLNmjo.png&#34; alt=&#34;iLNmjo.png&#34; /&gt;&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://www.asxe.vip/2023/04/22/GitHub%E9%A1%B5%E9%9D%A2%E8%87%AA%E5%AE%9A%E4%B9%89%E5%9F%9F%E5%90%8D%EF%BC%88%E5%8F%82%E8%80%83%E4%BA%8E%E5%AE%98%E6%96%B9%E6%96%87%E6%A1%A3%EF%BC%89/</guid>
            <title>GitHub页面自定义域名（参考于官方文档）</title>
            <link>https://www.asxe.vip/2023/04/22/GitHub%E9%A1%B5%E9%9D%A2%E8%87%AA%E5%AE%9A%E4%B9%89%E5%9F%9F%E5%90%8D%EF%BC%88%E5%8F%82%E8%80%83%E4%BA%8E%E5%AE%98%E6%96%B9%E6%96%87%E6%A1%A3%EF%BC%89/</link>
            <category term="GitHub" scheme="https://www.asxe.vip/tags/GitHub/" />
            <category term="避坑" scheme="https://www.asxe.vip/tags/%E9%81%BF%E5%9D%91/" />
            <pubDate>Sat, 22 Apr 2023 22:13:13 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;开头&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#开头&#34;&gt;#&lt;/a&gt; 开头&lt;/h1&gt;
&lt;p&gt;我为什么发这篇文章？因为今天采购了新的域名，并准备给博客换上新的” 名字 “，在配置过程中遇到的一些问题和坑，在此提出，说不定以后会有人用着呢。&lt;/p&gt;
&lt;p&gt;注意本页底部的避坑一栏！&lt;/p&gt;
&lt;p&gt;若是仍有不懂的地方，可以在评论区留言哦！&lt;/p&gt;
&lt;h1 id=&#34;开始&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#开始&#34;&gt;#&lt;/a&gt; 开始&lt;/h1&gt;
&lt;p&gt;&lt;span class=&#34;label danger&#34;&gt;注意：以下配置方法选择其一即可！！！&lt;/span&gt;&lt;/p&gt;
&lt;h2 id=&#34;配置子域名&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#配置子域名&#34;&gt;#&lt;/a&gt; 配置子域名&lt;/h2&gt;
&lt;p&gt;配置过程中，最重要的就是 DNS 解析，配置子域名很简单，如下&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;记录类型选择 CNAME，记录值就是你的原域名，即&lt;span class=&#34;label info&#34;&gt; &amp;lt;user&amp;gt;.github.io&lt;/span&gt;，请注意，我建议你将博客仓库的仓库名设为与你的用户名相同&lt;/li&gt;
&lt;li&gt;主机记录最好为&lt;span class=&#34;label info&#34;&gt; www&lt;/span&gt; 或者&lt;span class=&#34;label info&#34;&gt; blog&lt;/span&gt;，因为官方文档上给的就是这两个！&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;配置apex域名&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#配置apex域名&#34;&gt;#&lt;/a&gt; 配置 apex 域名&lt;/h2&gt;
&lt;p&gt;&lt;span class=&#34;label danger&#34;&gt;下面两种解析方法任选其一即可&lt;/span&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;记录类型选择 A 类型，记录值则有四个，如下&lt;br /&gt;
 &lt;pre class=&#34;line-numbers language-none&#34;&gt;&lt;code class=&#34;language-none&#34;&gt;185.199.108.153
185.199.109.153
185.199.110.153
185.199.111.153&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;br /&gt;
 即你需要解析四个 A 记录&lt;/li&gt;
&lt;li&gt;你也可以选择 AAAA 记录，即 IPv6，但是这种方法的速度很慢！记录值也是四个，如下&lt;br /&gt;
 &lt;pre class=&#34;line-numbers language-none&#34;&gt;&lt;code class=&#34;language-none&#34;&gt;2606:50c0:8000::153
2606:50c0:8001::153
2606:50c0:8002::153
2606:50c0:8003::153&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;配置apex域和www子域变体&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#配置apex域和www子域变体&#34;&gt;#&lt;/a&gt; 配置 apex 域和 www 子域变体&lt;/h2&gt;
&lt;p&gt;这个就很简单了，就是将上面两种配置都解析上，但是子域名解析的主机记录必须为 www&lt;/p&gt;
&lt;h1 id=&#34;最后&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#最后&#34;&gt;#&lt;/a&gt; 最后&lt;/h1&gt;
&lt;p&gt;选择以上任意一种解析后，即可到 GitHub 进行设置&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;打开你的博客仓库并进入设置&lt;/li&gt;
&lt;li&gt;点击到 pages，即页面&lt;/li&gt;
&lt;li&gt;将你的域名输入其中，然后保存即可&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;避坑&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#避坑&#34;&gt;#&lt;/a&gt; 避坑！&lt;/h1&gt;
&lt;ol&gt;
&lt;li&gt;当你在保存域名时，很有可能会报【asxe.vip 及其备用名称配置不正确&lt;br /&gt;
域不会解析到 GitHub 页面服务器。有关详细信息，请参阅文档 （NotServedByPagesError）。】&lt;br /&gt;
其实这个并不会影响访问你的博客，可以忽略&lt;/li&gt;
&lt;li&gt;若你解析了 CNAME 类型，就需要在仓库里添加一个文件，名称为 CNAME，&lt;span class=&#34;label danger&#34;&gt;注意必须是全部大写&lt;/span&gt;，里面写你的域名即可&lt;/li&gt;
&lt;li&gt;基于 hexo 搭建的博客，当你推送时可能会删掉仓库原所有文件，即包括了&lt;span class=&#34;label info&#34;&gt; CNAME 文件&lt;/span&gt;，那么你可以将此文件放在你博客文件夹根目录的 source 文件夹里面，这样你每次提交的时候就会带上这个文件一起提交在仓库了，如下&lt;br /&gt;
&lt;img data-src=&#34;https://i.328888.xyz/2023/04/22/i5RLQ5.png&#34; alt=&#34;i5RLQ5.png&#34; /&gt;&lt;/li&gt;
&lt;/ol&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://www.asxe.vip/2023/04/21/%E9%9A%8F%E6%9C%BA%E5%9B%BE%E7%89%87API/</guid>
            <title>随机图片API</title>
            <link>https://www.asxe.vip/2023/04/21/%E9%9A%8F%E6%9C%BA%E5%9B%BE%E7%89%87API/</link>
            <category term="二次元" scheme="https://www.asxe.vip/tags/%E4%BA%8C%E6%AC%A1%E5%85%83/" />
            <category term="API" scheme="https://www.asxe.vip/tags/API/" />
            <category term="三次元" scheme="https://www.asxe.vip/tags/%E4%B8%89%E6%AC%A1%E5%85%83/" />
            <pubDate>Fri, 21 Apr 2023 12:26:02 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;api&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#api&#34;&gt;#&lt;/a&gt; API&lt;/h1&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9hcGkuYXN4ZS52aXAv&#34;&gt;API&lt;/span&gt;&lt;/p&gt;
&lt;h1 id=&#34;说明&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#说明&#34;&gt;#&lt;/a&gt; 说明&lt;/h1&gt;
&lt;ol&gt;
&lt;li&gt;图片格式均为 webp，经过压缩优化处理，资源消耗更少，访问速度更快&lt;/li&gt;
&lt;li&gt;图库将长期更新，图片来源为网络以及 AI 绘画（stable diffusion）&lt;/li&gt;
&lt;li&gt;大家如果有好的图片投稿，可以评论区留言哦，留下你的邮箱！我会联系你！&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;新增&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#新增&#34;&gt;#&lt;/a&gt; 新增&lt;/h1&gt;
&lt;ol&gt;
&lt;li&gt;23 年 4 月 24 日新增：三次元白丝 API，二次元风景图 API&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;注意&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#注意&#34;&gt;#&lt;/a&gt; 注意&lt;/h1&gt;
&lt;p&gt;不建议使用爬虫，会导致加载速度变慢！&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://www.asxe.vip/2023/04/12/%E5%9F%BA%E4%BA%8Emirai%E5%92%8Cgraia%E7%9A%84QQ%E6%9C%BA%E5%99%A8%E4%BA%BA/</guid>
            <title>基于mirai和graia的QQ机器人</title>
            <link>https://www.asxe.vip/2023/04/12/%E5%9F%BA%E4%BA%8Emirai%E5%92%8Cgraia%E7%9A%84QQ%E6%9C%BA%E5%99%A8%E4%BA%BA/</link>
            <category term="Python" scheme="https://www.asxe.vip/categories/python/" />
            <category term="QQ机器人" scheme="https://www.asxe.vip/tags/QQ%E6%9C%BA%E5%99%A8%E4%BA%BA/" />
            <category term="python" scheme="https://www.asxe.vip/tags/python/" />
            <pubDate>Wed, 12 Apr 2023 17:24:42 +0800</pubDate>
            <description><![CDATA[ &lt;h2 id=&#34;开始&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#开始&#34;&gt;#&lt;/a&gt; 开始&lt;/h2&gt;
&lt;p&gt;本文所用代码已发布到 GitHub，&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL2FzeGV6L0dhbGF4eS1SaXZlci1Cb3Q=&#34;&gt;地址&lt;/span&gt;&lt;br /&gt;
 mirai 下载最新版本即可&lt;br /&gt;
&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL21hbW9lL21pcmFpL3JlbGVhc2Vz&#34;&gt; mirai&lt;/span&gt;&lt;/p&gt;
&lt;h2 id=&#34;功能&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#功能&#34;&gt;#&lt;/a&gt; 功能&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;ChatGPT  API 版（无上下文）（需魔法） /gpt&lt;/li&gt;
&lt;li&gt;New Bing （有上下文）（需魔法） /bing&lt;/li&gt;
&lt;li&gt;AI 绘画 /aip&lt;/li&gt;
&lt;li&gt;随机动漫图片&lt;/li&gt;
&lt;li&gt;基本翻译 /tra&lt;/li&gt;
&lt;li&gt;人工图库（我亲手挑选的）&lt;/li&gt;
&lt;li&gt;音乐（目前支持酷我和网易云）/kw   /wyy&lt;/li&gt;
&lt;li&gt;随机一言&lt;/li&gt;
&lt;li&gt;群违规词检测&lt;/li&gt;
&lt;li&gt;入群申请检测与审核 （我设的是 QQ 等级大于三颗星的才能通过，你们可以自行修改）&lt;/li&gt;
&lt;li&gt;定时推送实况天气&lt;/li&gt;
&lt;li&gt;定时发送笑话段子（时间设在 14：20，因为大家才睡了午觉没啥精神）&lt;/li&gt;
&lt;li&gt;/kick   /ma   /uma   /mo   /umo   /tra   /shutdown&lt;/li&gt;
&lt;li&gt;控制端后门&lt;br /&gt;
更多功能正在开发中，欢迎大家评论区提建议哦&lt;br /&gt;
………………&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;新增功能&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#新增功能&#34;&gt;#&lt;/a&gt; 新增功能&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;星期四定时推送疯狂星期四文案&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;部分功能使用方法及解释&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#部分功能使用方法及解释&#34;&gt;#&lt;/a&gt; 部分功能使用方法及解释&lt;/h3&gt;
&lt;p&gt;ChatGPT：/gpt 问题&lt;br /&gt;
 New Bing：/bing 问题&lt;br /&gt;
 ai 绘画：/aip 描述&lt;br /&gt;
音乐：/kw 音乐名  和  /wyy 音乐名&lt;br /&gt;
翻译：/tra en 文本 （将文本翻译为英文） 和  /tra zh 文本 （将文本翻译为中文）&lt;br /&gt;
关机：/shutdown  （仅系统管理员可用）&lt;br /&gt;
清除 new bing 记忆或者重启程序：/clean&lt;br /&gt;
 控制端后门：/s 文本  这段命令可以让机器人将文本发送至指定群聊，仅系统管理员可用（这段指令只能私发给机器人）&lt;br /&gt;
/kick @xxx  踢出某人（注意指令和艾特间的空格）&lt;br /&gt;
/ma 开启全体禁言&lt;br /&gt;
 /uma 关闭全体禁言&lt;br /&gt;
 /mo @xxx 时间 （禁言某成员，时间单位为分钟）&lt;br /&gt;
/umo @xxx 解除某成员禁言&lt;/p&gt;
&lt;h2 id=&#34;注意&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#注意&#34;&gt;#&lt;/a&gt; 注意！！&lt;/h2&gt;
&lt;p&gt;1.ChatGPT 需要你有一个&lt;span class=&#34;label info&#34;&gt; api key&lt;/span&gt;&lt;br /&gt;
2.New Bing 需要你有一个&lt;span class=&#34;label info&#34;&gt;通过候补名单的账号&lt;/span&gt;&lt;br /&gt;
 3.New Bing cookie 获取方法如下：&lt;br /&gt;
首先去&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9taWNyb3NvZnRlZGdlLm1pY3Jvc29mdC5jb20vYWRkb25zL2RldGFpbC9jb29raWVlZGl0b3IvbmVhcGxtZmtnaGFnZWJva2tocGpwb2ViaGRsZWRsZmk=&#34;&gt;点这！&lt;/span&gt;下载好 cookie editor&lt;br /&gt;
 然后：&lt;br /&gt;
&lt;img data-src=&#34;https://i.imgloc.com/2023/04/12/iXrLj3.png&#34; alt=&#34;iXrLj3.png&#34; /&gt;&lt;br /&gt;
 点击 Export as JSON，然后去 modules 目录下的 cookie.json 文件粘贴上就行了&lt;/p&gt;
&lt;p&gt;若有什么不懂的，请在评论区留言！！！&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://www.asxe.vip/2023/03/28/%E7%88%AC%E8%99%AB%E4%B9%8Bhttpx%E5%BA%93/</guid>
            <title>HTTP2.0之httpx</title>
            <link>https://www.asxe.vip/2023/03/28/%E7%88%AC%E8%99%AB%E4%B9%8Bhttpx%E5%BA%93/</link>
            <category term="Python" scheme="https://www.asxe.vip/categories/python/" />
            <category term="爬虫" scheme="https://www.asxe.vip/categories/python/spider/" />
            <category term="python" scheme="https://www.asxe.vip/tags/python/" />
            <category term="爬虫" scheme="https://www.asxe.vip/tags/%E7%88%AC%E8%99%AB/" />
            <pubDate>Tue, 28 Mar 2023 21:04:23 +0800</pubDate>
            <description><![CDATA[ &lt;h2 id=&#34;开始&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#开始&#34;&gt;#&lt;/a&gt; 开始&lt;/h2&gt;
&lt;p&gt;在大家写爬虫的时候，想必用得最多的库就是&lt;span class=&#34;label info&#34;&gt; requests&lt;/span&gt; 了，在长久的使用过程中，大家便会发现，若是&lt;span class=&#34;label warning&#34;&gt; HTTP1.1&lt;/span&gt; 的链接，那么&lt;span class=&#34;label info&#34;&gt; requests&lt;/span&gt; 是完全没啥问题的，但如若为&lt;span class=&#34;label warning&#34;&gt; HTTP2.0&lt;/span&gt;，那么就不行了，因为&lt;span class=&#34;label info&#34;&gt; requests&lt;/span&gt; 并未支持&lt;span class=&#34;label warning&#34;&gt; HTTP2.0&lt;/span&gt;，因此本文介绍一个支持&lt;span class=&#34;label warning&#34;&gt; HTTP2.0&lt;/span&gt; 的库 --&lt;span class=&#34;label info&#34;&gt;httpx&lt;/span&gt;&lt;/p&gt;
&lt;h2 id=&#34;正文&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#正文&#34;&gt;#&lt;/a&gt; 正文&lt;/h2&gt;
&lt;h3 id=&#34;安装httpx&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#安装httpx&#34;&gt;#&lt;/a&gt; 安装 httpx&lt;/h3&gt;
&lt;p&gt;&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;div class=&#34;caption&#34;&gt;&lt;span&gt;安装&lt;/span&gt;&lt;/div&gt;&lt;code class=&#34;language-python&#34;&gt;pip3 install &lt;span class=&#34;token string&#34;&gt;&#34;httpx[http2]&#34;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/p&gt;
&lt;h3 id=&#34;基本使用&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#基本使用&#34;&gt;#&lt;/a&gt; 基本使用&lt;/h3&gt;
&lt;p&gt;&lt;span class=&#34;label info&#34;&gt;httpx&lt;/span&gt; 的 api 与&lt;span class=&#34;label info&#34;&gt; requests&lt;/span&gt; 相似，例如&lt;br /&gt;
 &lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; httpx

url&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;https://www.baidu.com&#39;&lt;/span&gt;
res&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;httpx&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;get&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;url&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;res&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;status_code&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;res&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;text&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;br /&gt;
 有点感觉没？&lt;br /&gt;
 相同的，也可以带上一些对象&lt;br /&gt;
 &lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; httpx

header&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;
    &lt;span class=&#34;token string&#34;&gt;&#39;user-agent&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/111.0.0.0 Safari/537.36 Edg/111.0.1661.54&#39;&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;

url&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;https://www.baidu.com&#39;&lt;/span&gt;
res&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;httpx&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;get&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;url&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;headers&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;header&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;res&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;status_code&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;res&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;text&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;br /&gt;
 这里即是带上了一个&lt;span class=&#34;label info&#34;&gt; headers&lt;/span&gt; 对象&lt;br /&gt;
但是这并不是本文的重点！我们接着说&lt;br /&gt;
链接：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9zcGExNi5zY3JhcGUuY2VudGVy&#34;&gt;https://spa16.scrape.center&lt;/span&gt;&lt;br /&gt;
 这个链接是&lt;span class=&#34;label warning&#34;&gt; HTTP2.0&lt;/span&gt; 的&lt;br /&gt;
我们使用&lt;span class=&#34;label info&#34;&gt; httpx&lt;/span&gt; 请求一下&lt;br /&gt;
 &lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;div class=&#34;caption&#34;&gt;&lt;span&gt;测试&lt;/span&gt;&lt;/div&gt;&lt;code class=&#34;language-python&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; httpx

header&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;
    &lt;span class=&#34;token string&#34;&gt;&#39;user-agent&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/111.0.0.0 Safari/537.36 Edg/111.0.1661.54&#39;&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;

url&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;https://spa16.scrape.center&#39;&lt;/span&gt;
res&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;httpx&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;get&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;url&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;headers&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;header&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;res&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;text&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;br /&gt;
 可以发现，程序报错了！&lt;br /&gt;
&lt;img data-src=&#34;https://i.imgloc.com/2023/03/28/iWAYW3.png&#34; alt=&#34;iWAYW3.png&#34; /&gt;&lt;br /&gt;
 这是怎么回事？不是说好了支持&lt;span class=&#34;label warning&#34;&gt; HTTP2.0&lt;/span&gt; 吗？什么情况？&lt;br /&gt;
别急，那是因为&lt;span class=&#34;label info&#34;&gt; httpx&lt;/span&gt; 默认是开启的&lt;span class=&#34;label warning&#34;&gt; http1.1&lt;/span&gt; 的，需要我们声明一下才行，如下&lt;br /&gt;
 &lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; httpx

header&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;
    &lt;span class=&#34;token string&#34;&gt;&#39;user-agent&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/111.0.0.0 Safari/537.36 Edg/111.0.1661.54&#39;&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;
url&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;https://spa16.scrape.center&#39;&lt;/span&gt;

client&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;httpx&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;Client&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;http2&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token boolean&#34;&gt;True&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
res&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;client&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;get&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;url&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;headers&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;header&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;res&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;text&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;res&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;http_version&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;br /&gt;
 此处我们声明一个&lt;span class=&#34;label info&#34;&gt; Client&lt;/span&gt; 对象，并将&lt;span class=&#34;label danger&#34;&gt; http2 设置为 true&lt;/span&gt;，那么便开启了&lt;span class=&#34;label warning&#34;&gt; HTTP2.0&lt;/span&gt; 的支持&lt;br /&gt;
&lt;img data-src=&#34;https://i.imgloc.com/2023/03/28/iWDfdF.png&#34; alt=&#34;iWDfdF.png&#34; /&gt;&lt;br /&gt;
 可以看到，打印出来的 HTTP 版本也确实是&lt;span class=&#34;label warning&#34;&gt; HTTP2.0&lt;/span&gt; 的，访问成功了！&lt;/p&gt;
&lt;h3 id=&#34;扩展&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#扩展&#34;&gt;#&lt;/a&gt; 扩展&lt;/h3&gt;
&lt;p&gt;httpx 库还支持异步请求，异步操作请查看这一篇博客&lt;br /&gt;
&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9hc3hlei5naXRodWIuaW8vMjAyMy8wMy8wOC8lRTUlQkMlODIlRTYlQUQlQTUlRTclODglQUMlRTglOTklQUIlRTYlOUMlQkElRTUlODglQjYlRTQlQjglOEUlRTUlQUUlOUUlRTQlQkUlOEIv&#34;&gt;链接&lt;/span&gt;&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://www.asxe.vip/2023/03/12/%E6%96%B0%E7%89%88%E6%9C%89%E9%81%93%E7%BF%BB%E8%AF%91%E4%B9%8Bjs%E9%80%86%E5%90%91/</guid>
            <title>新版有道翻译之js逆向</title>
            <link>https://www.asxe.vip/2023/03/12/%E6%96%B0%E7%89%88%E6%9C%89%E9%81%93%E7%BF%BB%E8%AF%91%E4%B9%8Bjs%E9%80%86%E5%90%91/</link>
            <category term="Python" scheme="https://www.asxe.vip/categories/python/" />
            <category term="爬虫" scheme="https://www.asxe.vip/categories/python/spider/" />
            <category term="python" scheme="https://www.asxe.vip/tags/python/" />
            <category term="爬虫" scheme="https://www.asxe.vip/tags/%E7%88%AC%E8%99%AB/" />
            <category term="js逆向" scheme="https://www.asxe.vip/tags/js%E9%80%86%E5%90%91/" />
            <pubDate>Sun, 12 Mar 2023 10:18:38 +0800</pubDate>
            <description><![CDATA[ &lt;h2 id=&#34;准备&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#准备&#34;&gt;#&lt;/a&gt; 准备&lt;/h2&gt;
&lt;p&gt;本文仅讲解某道的 js 逆向部分，json 逆向不进行讲解&lt;/p&gt;
&lt;p&gt;网址：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9mYW55aS55b3VkYW8uY29tLw==&#34;&gt;网址&lt;/span&gt;&lt;/p&gt;
&lt;h2 id=&#34;开始&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#开始&#34;&gt;#&lt;/a&gt; 开始&lt;/h2&gt;
&lt;h3 id=&#34;查找api&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#查找api&#34;&gt;#&lt;/a&gt; 查找 api&lt;/h3&gt;
&lt;p&gt;进入首页，F12 打开检查页面，选择网络记录并选择&lt;span class=&#34;label info&#34;&gt; XHR&lt;/span&gt; 类&lt;br /&gt;
在翻译框中任意输入，即可看到抓取到两个 api, 如下&lt;br /&gt;
&lt;img data-src=&#34;https://i.imgloc.com/2023/03/12/suOHv.png&#34; alt=&#34;suOHv.png&#34; /&gt;&lt;br /&gt;
 我们点开&lt;span class=&#34;label info&#34;&gt; key&lt;/span&gt;api 并查看其响应，如下&lt;br /&gt;
&lt;img data-src=&#34;https://i.imgloc.com/2023/03/12/sujay.png&#34; alt=&#34;sujay.png&#34; /&gt;&lt;br /&gt;
 可以看到其并非翻译接口，接下来点开另一个 api 并查看其响应，如下&lt;br /&gt;
&lt;img data-src=&#34;https://i.imgloc.com/2023/03/12/suIk5.png&#34; alt=&#34;suIk5.png&#34; /&gt;&lt;br /&gt;
 这个则是一堆密文，即是返回的翻译结果等进行了 json 加密&lt;/p&gt;
&lt;h3 id=&#34;查找加密函数&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#查找加密函数&#34;&gt;#&lt;/a&gt; 查找加密函数&lt;/h3&gt;
&lt;p&gt;我们查看其&lt;span class=&#34;label info&#34;&gt;表单数据&lt;/span&gt;（即负载），如下&lt;br /&gt;
&lt;img data-src=&#34;https://i.imgloc.com/2023/03/12/suXOC.png&#34; alt=&#34;suXOC.png&#34; /&gt;&lt;br /&gt;
 其中参数&lt;span class=&#34;label info&#34;&gt; i&lt;/span&gt;, 很明显就是输入的文字，此时我们再输入任意文字在翻译框中，经对比，可以发现仅有&lt;span class=&#34;label info&#34;&gt; sign&lt;/span&gt; 和&lt;span class=&#34;label info&#34;&gt; mysticTime&lt;/span&gt; 是变化的，&lt;br /&gt;
此时便在源代码中搜索&lt;span class=&#34;label info&#34;&gt; sign:&lt;/span&gt;,（加个冒号方便查找），最后找到一处&lt;br /&gt;
&lt;img data-src=&#34;https://i.imgloc.com/2023/03/12/sueBJ.png&#34; alt=&#34;sueBJ.png&#34; /&gt;&lt;br /&gt;
 此处定义了一个&lt;span class=&#34;label info&#34;&gt; t 变量&lt;/span&gt;，用于获取时间戳，而&lt;span class=&#34;label info&#34;&gt; mysticTime&lt;/span&gt; 的返回值正是&lt;span class=&#34;label info&#34;&gt; t 变量&lt;/span&gt;，则判定&lt;span class=&#34;label info&#34;&gt; mysticTime&lt;/span&gt; 为时间戳，&lt;br /&gt;
&lt;span class=&#34;label info&#34;&gt;sign&lt;/span&gt; 则是调用了一个&lt;span class=&#34;label warning&#34;&gt;方法 v&lt;/span&gt;，其中传入参数&lt;span class=&#34;label info&#34;&gt; t&lt;/span&gt; 和&lt;span class=&#34;label info&#34;&gt; e&lt;/span&gt;,&lt;span class=&#34;label info&#34;&gt;t&lt;/span&gt; 我们知道了是时间戳，那么&lt;span class=&#34;label info&#34;&gt; e&lt;/span&gt; 呢？&lt;br /&gt;
那么我们便在&lt;span class=&#34;label info&#34;&gt; sign&lt;/span&gt; 处打上断点，再翻译一遍，可以发现程序此时停在了&lt;span class=&#34;label info&#34;&gt; sign&lt;/span&gt; 处，我们将鼠标放在&lt;span class=&#34;label info&#34;&gt; e&lt;/span&gt; 上，可以看到&lt;span class=&#34;label info&#34;&gt; e&lt;/span&gt; 的值是一个字符串&lt;br /&gt;
&lt;img data-src=&#34;https://i.imgloc.com/2023/03/12/suSOd.png&#34; alt=&#34;suSOd.png&#34; /&gt;&lt;/p&gt;
&lt;p&gt;知道了&lt;span class=&#34;label info&#34;&gt; t&lt;/span&gt; 和&lt;span class=&#34;label info&#34;&gt; e&lt;/span&gt;, 那么我们就要看&lt;span class=&#34;label warning&#34;&gt;方法 v&lt;/span&gt; 是一个什么，将鼠标放在&lt;span class=&#34;label info&#34;&gt; v&lt;/span&gt; 上，即可看到方法位于哪里，如下&lt;br /&gt;
&lt;img data-src=&#34;https://i.imgloc.com/2023/03/12/susaq.png&#34; alt=&#34;susaq.png&#34; /&gt;&lt;br /&gt;
 定位到&lt;span class=&#34;label warning&#34;&gt; v 方法&lt;/span&gt;，如下&lt;br /&gt;
&lt;img data-src=&#34;https://i.imgloc.com/2023/03/12/suKJa.png&#34; alt=&#34;suKJa.png&#34; /&gt;&lt;br /&gt;
&lt;span class=&#34;label warning&#34;&gt;v 方法&lt;/span&gt;返回的是一个&lt;span class=&#34;label warning&#34;&gt; g 方法&lt;/span&gt;处理过后的值，用同样的方法定位到&lt;span class=&#34;label warning&#34;&gt;方法 g&lt;/span&gt;，如下&lt;br /&gt;
&lt;img data-src=&#34;https://i.imgloc.com/2023/03/12/suMDx.png&#34; alt=&#34;suMDx.png&#34; /&gt;&lt;br /&gt;
 可以清晰的看到是一个&lt;span class=&#34;label danger&#34;&gt; MD5 加密&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;思路梳理&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#思路梳理&#34;&gt;#&lt;/a&gt; 思路梳理&lt;/h3&gt;
&lt;p&gt;我们知道了表单中的&lt;span class=&#34;label info&#34;&gt;参数 i&lt;/span&gt; 就是要翻译的文字，&lt;span class=&#34;label info&#34;&gt;mysticTime&lt;/span&gt; 则是时间戳，&lt;span class=&#34;label info&#34;&gt;sign&lt;/span&gt; 则是对拼接后的字符串进行&lt;span class=&#34;label info&#34;&gt; MD5 加密&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;python原理复现&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#python原理复现&#34;&gt;#&lt;/a&gt; python 原理复现&lt;/h3&gt;
&lt;h4 id=&#34;md5加密&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#md5加密&#34;&gt;#&lt;/a&gt; MD5 加密&lt;/h4&gt;
&lt;p&gt;&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;div class=&#34;caption&#34;&gt;&lt;span&gt;md5加密&lt;/span&gt;&lt;/div&gt;&lt;code class=&#34;language-python&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;md5&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;self&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;value&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    md &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; hashlib&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;md5&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
    md&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;update&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;value&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;encode&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; md&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;hexdigest&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/p&gt;
&lt;h4 id=&#34;时间戳&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#时间戳&#34;&gt;#&lt;/a&gt; 时间戳&lt;/h4&gt;
&lt;p&gt;&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;div class=&#34;caption&#34;&gt;&lt;span&gt;时间戳&lt;/span&gt;&lt;/div&gt;&lt;code class=&#34;language-python&#34;&gt;time_get&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;time&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;time&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1000&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/p&gt;
&lt;h2 id=&#34;完整代码&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#完整代码&#34;&gt;#&lt;/a&gt; 完整代码&lt;/h2&gt;
&lt;p&gt;&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;div class=&#34;caption&#34;&gt;&lt;span&gt;完整代码&lt;/span&gt;&lt;/div&gt;&lt;code class=&#34;language-python&#34;&gt;&lt;span class=&#34;token comment&#34;&gt;#此代码仅返回加密的 json，若需看到明文，还需要进行 json 逆向，本文不予解释&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; requests
&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; hashlib
&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; time

&lt;span class=&#34;token keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;Spider&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;

    &lt;span class=&#34;token keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;__init__&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;self&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
        self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;headers&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;
            &lt;span class=&#34;token string&#34;&gt;&#39;Cookie&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;OUTFOX_SEARCH_USER_ID=-864231348@10.108.162.133; OUTFOX_SEARCH_USER_ID_NCOO=972176560.743925; _ga=GA1.2.1317022467.1665466107; UM_distinctid=184aa25fe24a7b-0ff2966cce682a-7d5d5471-144000-184aa25fe2514e1; DICT_UGC=be3af0da19b5c5e6aa4e17bd8d90b28a|; JSESSIONID=abcIJ43UT_s_Q5TofIUwy&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
            &lt;span class=&#34;token string&#34;&gt;&#39;User-Agent&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/108.0.0.0 Safari/537.36 Edg/108.0.1462.76&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
            &lt;span class=&#34;token string&#34;&gt;&#39;Referer&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;https://fanyi.youdao.com/&#39;&lt;/span&gt;
        &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;
        self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;url&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;https://dict.youdao.com/webtranslate&#39;&lt;/span&gt;

    &lt;span class=&#34;token keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;md5&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;self&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;value&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
        md &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; hashlib&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;md5&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
        md&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;update&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;value&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;encode&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
        &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; md&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;hexdigest&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;

    &lt;span class=&#34;token keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;spider&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;self&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;text&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
        time_get&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;time&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;time&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
        sign&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;md5&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string-interpolation&#34;&gt;&lt;span class=&#34;token string&#34;&gt;f&#34;client=fanyideskweb&amp;amp;mysticTime=&lt;/span&gt;&lt;span class=&#34;token interpolation&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;time_get&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&amp;amp;product=webfanyi&amp;amp;key=fsdsogkndfokasodnaso&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
        data &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;
            &lt;span class=&#34;token string&#34;&gt;&#34;i&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;text&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
            &lt;span class=&#34;token string&#34;&gt;&#34;from&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;auto&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
            &lt;span class=&#34;token string&#34;&gt;&#34;to&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;auto&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
            &lt;span class=&#34;token string&#34;&gt;&#34;domain&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;0&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
            &lt;span class=&#34;token string&#34;&gt;&#34;dictResult&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;true&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
            &lt;span class=&#34;token string&#34;&gt;&#34;keyid&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;webfanyi&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
            &lt;span class=&#34;token string&#34;&gt;&#34;sign&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; sign&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
            &lt;span class=&#34;token string&#34;&gt;&#34;client&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;fanyideskweb&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
            &lt;span class=&#34;token string&#34;&gt;&#34;product&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;webfanyi&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
            &lt;span class=&#34;token string&#34;&gt;&#34;appVersion&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;1.0.0&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
            &lt;span class=&#34;token string&#34;&gt;&#34;vendor&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;web&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
            &lt;span class=&#34;token string&#34;&gt;&#34;pointParam&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;client,mysticTime,product&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
            &lt;span class=&#34;token string&#34;&gt;&#34;mysticTime&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;time_get&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
            &lt;span class=&#34;token string&#34;&gt;&#34;keyfrom&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;fanyi.web&#34;&lt;/span&gt;
        &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;
        response&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;requests&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;post&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;url&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;data&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;data&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;headers&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;headers&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;verify&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token boolean&#34;&gt;False&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
        &lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;response&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;text&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; __name__&lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;__main__&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;while&lt;/span&gt; &lt;span class=&#34;token boolean&#34;&gt;True&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
        get_text&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;input&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;请输入文字:&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
        Spider&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;spider&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;get_text&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://www.asxe.vip/2023/03/08/%E5%BC%82%E6%AD%A5%E7%88%AC%E8%99%AB%E6%9C%BA%E5%88%B6%E4%B8%8E%E5%AE%9E%E4%BE%8B/</guid>
            <title>异步爬虫机制与实例</title>
            <link>https://www.asxe.vip/2023/03/08/%E5%BC%82%E6%AD%A5%E7%88%AC%E8%99%AB%E6%9C%BA%E5%88%B6%E4%B8%8E%E5%AE%9E%E4%BE%8B/</link>
            <category term="Python" scheme="https://www.asxe.vip/categories/python/" />
            <category term="爬虫" scheme="https://www.asxe.vip/categories/python/spider/" />
            <category term="python" scheme="https://www.asxe.vip/tags/python/" />
            <category term="爬虫" scheme="https://www.asxe.vip/tags/%E7%88%AC%E8%99%AB/" />
            <pubDate>Wed, 08 Mar 2023 09:19:08 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;环境准备&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#环境准备&#34;&gt;#&lt;/a&gt; 环境准备&lt;/h1&gt;
&lt;p&gt;python 版本 3.5 及以上，aiohttp 库&lt;/p&gt;
&lt;h1 id=&#34;开始&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#开始&#34;&gt;#&lt;/a&gt; 开始&lt;/h1&gt;
&lt;h2 id=&#34;基础了解&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#基础了解&#34;&gt;#&lt;/a&gt; 基础了解&lt;/h2&gt;
&lt;h3 id=&#34;阻塞&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#阻塞&#34;&gt;#&lt;/a&gt; 阻塞&lt;/h3&gt;
&lt;p&gt;阻塞是程序自身无法继续执行下一步的情况，即程序未得到所需计算资源而被挂起的状态&lt;br /&gt;
常见为网络 I/O 阻塞，磁盘 I/O 阻塞，以及使用者的输入阻塞等等&lt;/p&gt;
&lt;h3 id=&#34;非阻塞&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#非阻塞&#34;&gt;#&lt;/a&gt; 非阻塞&lt;/h3&gt;
&lt;p&gt;对比阻塞进行理解，即程序可以干别的事情，其是因阻塞的存在而存在的&lt;/p&gt;
&lt;h3 id=&#34;同步&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#同步&#34;&gt;#&lt;/a&gt; 同步&lt;/h3&gt;
&lt;p&gt;顾名思义，强制让不同的请求按顺序执行，即有序&lt;/p&gt;
&lt;h3 id=&#34;异步&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#异步&#34;&gt;#&lt;/a&gt; 异步&lt;/h3&gt;
&lt;p&gt;相对同步理解，即无序&lt;/p&gt;
&lt;h3 id=&#34;多进程&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#多进程&#34;&gt;#&lt;/a&gt; 多进程&lt;/h3&gt;
&lt;p&gt;利用 CPU 的多核，在同一时间内执行多个不同的任务&lt;/p&gt;
&lt;h3 id=&#34;协程&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#协程&#34;&gt;#&lt;/a&gt; 协程&lt;/h3&gt;
&lt;p&gt;协程本质上是单个进程，拥有自身的寄存器和栈，可以使用其实现异步操作&lt;/p&gt;
&lt;h4 id=&#34;协程中的几个概念&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#协程中的几个概念&#34;&gt;#&lt;/a&gt; 协程中的几个概念&lt;/h4&gt;
&lt;p&gt;&lt;span class=&#34;label&#34;&gt;event_loop&lt;/span&gt;：事件循环，可以将某些函数放到这上面，当运行条件满足时，就调用这个函数或者方法&lt;br /&gt;
&lt;span class=&#34;label&#34;&gt; coroutine&lt;/span&gt;：即协程，在 python 中，指代协程对象类型，可以将协程对象放到&lt;span class=&#34;label info&#34;&gt;事件循环&lt;/span&gt;中。可以使用&lt;span class=&#34;label info&#34;&gt; async 关键字&lt;/span&gt;来定义一个方法，当调用这个方法时，并不会立即执行这个方法，而是返回一个&lt;span class=&#34;label info&#34;&gt;协程对象&lt;/span&gt;&lt;br /&gt;
&lt;span class=&#34;label&#34;&gt; task&lt;/span&gt;：任务，是对协程对象的进一步封装，包含了协程对象的各个状态&lt;br /&gt;
&lt;span class=&#34;label&#34;&gt; future&lt;/span&gt;：即将执行或没有执行的任务结果，与&lt;span class=&#34;label info&#34;&gt; task&lt;/span&gt; 没有本质区别&lt;/p&gt;
&lt;h2 id=&#34;举例&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#举例&#34;&gt;#&lt;/a&gt; 举例&lt;/h2&gt;
&lt;h3 id=&#34;定义一个协程&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#定义一个协程&#34;&gt;#&lt;/a&gt; 定义一个协程&lt;/h3&gt;
&lt;p&gt;&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;div class=&#34;caption&#34;&gt;&lt;span&gt;定义协程&lt;/span&gt;&lt;/div&gt;&lt;code class=&#34;language-python&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; asyncio

&lt;span class=&#34;token keyword&#34;&gt;async&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;add&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;x&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string-interpolation&#34;&gt;&lt;span class=&#34;token string&#34;&gt;f&#39;number:&lt;/span&gt;&lt;span class=&#34;token interpolation&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;x&lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;

coroutine&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;add&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string-interpolation&#34;&gt;&lt;span class=&#34;token string&#34;&gt;f&#39;1:&lt;/span&gt;&lt;span class=&#34;token interpolation&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;coroutine&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;now1&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
event_loop&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;asyncio&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;new_event_loop&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
event_loop&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;run_until_complete&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;coroutine&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;now2&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;br /&gt;
 注：以上代码第九行&lt;span class=&#34;label info&#34;&gt; event_loop=asyncio.new_event_loop ()&lt;/span&gt; 也可以换成&lt;span class=&#34;label info&#34;&gt; event_loop=asyncio.get_event_loop ()&lt;/span&gt;, 但是后者在新版 python 中会收到警告&lt;span class=&#34;label danger&#34;&gt; DeprecationWarning: There is no current event loop   event_loop=asyncio.get_event_loop ()&lt;/span&gt;&lt;br /&gt;
 输出结果如下：&lt;br /&gt;
&lt;pre class=&#34;line-numbers language-none&#34;&gt;&lt;code class=&#34;language-none&#34;&gt;1:&amp;lt;coroutine object add at 0x0000025B7FECF840&amp;gt;
now1
number:2
now2&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;br /&gt;
 首先我们直接调用了&lt;span class=&#34;label info&#34;&gt; add&lt;/span&gt; 方法并打印其调用，但是我们得到的并不是答案，而是一个协程对象，接着我们使用&lt;span class=&#34;label info&#34;&gt; new_event_loop&lt;/span&gt; 方法创建了一个事件循环&lt;span class=&#34;label&#34;&gt; event_loop&lt;/span&gt;，并调用&lt;span class=&#34;label&#34;&gt; event_loop&lt;/span&gt; 的&lt;span class=&#34;label info&#34;&gt; run_until_complete&lt;/span&gt; 方法，最终才看到&lt;span class=&#34;label info&#34;&gt; add&lt;/span&gt; 方法打印出的答案&lt;br /&gt;
此处也可以将 coroutine 封装成 task 对象（甚至可以不借助 event_loop 对象），此处不做解释，仅提供代码，请读者自行理解，如下&lt;br /&gt;
 &lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;div class=&#34;caption&#34;&gt;&lt;span&gt;task&lt;/span&gt;&lt;/div&gt;&lt;code class=&#34;language-python&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; asyncio

&lt;span class=&#34;token keyword&#34;&gt;async&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;add&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;x&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string-interpolation&#34;&gt;&lt;span class=&#34;token string&#34;&gt;f&#39;number:&lt;/span&gt;&lt;span class=&#34;token interpolation&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;x&lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;

coroutine&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;add&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
loop&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;asyncio&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;new_event_loop&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
task&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;loop&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;create_task&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;coroutine&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string-interpolation&#34;&gt;&lt;span class=&#34;token string&#34;&gt;f&#39;1:&lt;/span&gt;&lt;span class=&#34;token interpolation&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;task&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;now1&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
loop&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;run_until_complete&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;task&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string-interpolation&#34;&gt;&lt;span class=&#34;token string&#34;&gt;f&#39;2:&lt;/span&gt;&lt;span class=&#34;token interpolation&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;task&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;now2&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;token triple-quoted-string string&#34;&gt;&#34;&#34;&#34;
运行结果
1:&amp;lt;Task pending name=&#39;Task-1&#39; coro=&amp;lt;add() running at F:\WorkSpace\py-case\main.py:3&gt;&gt;
now1
number:2
2:&amp;lt;Task finished name=&#39;Task-1&#39; coro=&amp;lt;add() done, defined at F:\WorkSpace\py-case\main.py:3&gt; result=None&gt;
now2
&#34;&#34;&#34;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/p&gt;
&lt;p&gt;&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;div class=&#34;caption&#34;&gt;&lt;span&gt;不借助loop对象的task&lt;/span&gt;&lt;/div&gt;&lt;code class=&#34;language-python&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; asyncio

&lt;span class=&#34;token keyword&#34;&gt;async&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;add&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;x&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string-interpolation&#34;&gt;&lt;span class=&#34;token string&#34;&gt;f&#39;number:&lt;/span&gt;&lt;span class=&#34;token interpolation&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;x&lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;

coroutine&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;add&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
task&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;asyncio&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;ensure_future&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;coroutine&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string-interpolation&#34;&gt;&lt;span class=&#34;token string&#34;&gt;f&#39;1:&lt;/span&gt;&lt;span class=&#34;token interpolation&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;task&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;now1&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
loop&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;asyncio&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;get_event_loop&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
loop&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;run_until_complete&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;task&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string-interpolation&#34;&gt;&lt;span class=&#34;token string&#34;&gt;f&#39;2:&lt;/span&gt;&lt;span class=&#34;token interpolation&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;task&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;now2&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;token triple-quoted-string string&#34;&gt;&#34;&#34;&#34;
运行结果
1:&amp;lt;Task pending name=&#39;Task-2&#39; coro=&amp;lt;add() running at F:\WorkSpace\py-case\main.py:18&gt;&gt;
now1
number:2
2:&amp;lt;Task finished name=&#39;Task-2&#39; coro=&amp;lt;add() done, defined at F:\WorkSpace\py-case\main.py:18&gt; result=None&gt;
now2
&#34;&#34;&#34;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/p&gt;
&lt;h3 id=&#34;多任务协程&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#多任务协程&#34;&gt;#&lt;/a&gt; 多任务协程&lt;/h3&gt;
&lt;p&gt;&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;div class=&#34;caption&#34;&gt;&lt;span&gt;多任务协程&lt;/span&gt;&lt;/div&gt;&lt;code class=&#34;language-python&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; asyncio
&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; requests

&lt;span class=&#34;token keyword&#34;&gt;async&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;get_response&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    url&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;https://www.baidu.com&#39;&lt;/span&gt;
    res&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;requests&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;get&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;url&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; res

tasks&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;list&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;asyncio&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;ensure_future&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;get_response&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;for&lt;/span&gt; _ &lt;span class=&#34;token keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;token builtin&#34;&gt;range&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string-interpolation&#34;&gt;&lt;span class=&#34;token string&#34;&gt;f&#39;task:&lt;/span&gt;&lt;span class=&#34;token interpolation&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;tasks&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
loop&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;asyncio&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;get_event_loop&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
loop&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;run_until_complete&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;asyncio&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;wait&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;tasks&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;for&lt;/span&gt; task &lt;span class=&#34;token keyword&#34;&gt;in&lt;/span&gt; tasks&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string-interpolation&#34;&gt;&lt;span class=&#34;token string&#34;&gt;f&#39;result:&lt;/span&gt;&lt;span class=&#34;token interpolation&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;task&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;result&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;br /&gt;
 此处我们创建 3 个请求并组成列表，然后通过&lt;span class=&#34;label info&#34;&gt; wait&lt;/span&gt; 方法将其放到事件循环中，即可发起 3 次请求&lt;/p&gt;
&lt;p&gt;但是此时仍然是没有异步处理的，因为 requests 库并不支持异步，需要换成 aiohttp，况且上文还说了，实现异步就得有挂起操作，实现如下：&lt;br /&gt;
&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;div class=&#34;caption&#34;&gt;&lt;span&gt;异步&lt;/span&gt;&lt;/div&gt;&lt;code class=&#34;language-python&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; aiohttp
&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; asyncio
&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; time

start_time&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;time&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;time&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;token keyword&#34;&gt;async&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;get_url&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;url&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    session&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;aiohttp&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;ClientSession&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
    res&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;await&lt;/span&gt; session&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;get&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;url&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;await&lt;/span&gt; res&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;text&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;await&lt;/span&gt; session&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;close&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; res
&lt;span class=&#34;token keyword&#34;&gt;async&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;req&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    url&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;https://www.httpbin.org/delay/5&#39;&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;waiting&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;url&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
    res&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;await&lt;/span&gt; get_url&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;url&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string-interpolation&#34;&gt;&lt;span class=&#34;token string&#34;&gt;f&#39;&lt;/span&gt;&lt;span class=&#34;token interpolation&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;res&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt; - &lt;/span&gt;&lt;span class=&#34;token interpolation&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;url&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;

tasks&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;list&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;asyncio&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;ensure_future&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;req&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;for&lt;/span&gt; _ &lt;span class=&#34;token keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;token builtin&#34;&gt;range&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;6&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
event_loop&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;asyncio&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;get_event_loop&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
event_loop&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;run_until_complete&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;asyncio&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;wait&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;tasks&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;

end_time&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;time&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;time&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
time_consuming&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;end_time&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;start_time
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;time_consuming&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;br /&gt;
 此代码即可实现异步操作，其中 await 关键字的作用就是将协程挂起，可看到，原本需要至少 30 秒的请求时间只用了 10 秒，大大提升了爬取速度，（耗时与网络状况有关）&lt;br /&gt;
&lt;img data-src=&#34;https://i.imgloc.com/2023/03/08/51KDd.png&#34; alt=&#34;51KDd.png&#34; /&gt;&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://www.asxe.vip/2023/03/06/%E7%BA%A2%E4%BA%BA%E7%82%B9%E9%9B%86js%E9%80%86%E5%90%91%E7%88%AC%E8%99%AB/</guid>
            <title>红人点集js逆向爬虫</title>
            <link>https://www.asxe.vip/2023/03/06/%E7%BA%A2%E4%BA%BA%E7%82%B9%E9%9B%86js%E9%80%86%E5%90%91%E7%88%AC%E8%99%AB/</link>
            <category term="Python" scheme="https://www.asxe.vip/categories/python/" />
            <category term="爬虫" scheme="https://www.asxe.vip/categories/python/spider/" />
            <category term="爬虫" scheme="https://www.asxe.vip/tags/%E7%88%AC%E8%99%AB/" />
            <category term="js逆向" scheme="https://www.asxe.vip/tags/js%E9%80%86%E5%90%91/" />
            <pubDate>Mon, 06 Mar 2023 23:45:50 +0800</pubDate>
            <description><![CDATA[ &lt;h2 id=&#34;前戏&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#前戏&#34;&gt;#&lt;/a&gt; 前戏&lt;/h2&gt;
&lt;p&gt;之前的博客由于太久没有维护，又懒得翻新了，所以索性重新搭建了一个，看着主页空荡荡的，所以随便写一篇 js 逆向爬虫，这次的 “受害者” 是红人点集。&lt;br /&gt;
废话不多说，教程开始。&lt;br /&gt;
网址:&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cuaHJkanl1bi5jb20vIy9yYW5rbGlzdC9yYW5rbGlzdA==&#34;&gt; 网址&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;正片&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#正片&#34;&gt;#&lt;/a&gt; 正片&lt;/h3&gt;
&lt;h4 id=&#34;逻辑分析&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#逻辑分析&#34;&gt;#&lt;/a&gt; 逻辑分析&lt;/h4&gt;
&lt;p&gt;打开控制台，刷新网页，在网络记录里选择&lt;span class=&#34;label info&#34;&gt; XHR 类&lt;/span&gt;（别问，问就是&lt;span class=&#34;label info&#34;&gt; Ajax&lt;/span&gt;），可以看到一个 api 如下 (图片有点糊，将就一下吧)&lt;br /&gt;
&lt;img data-src=&#34;https://i.imgloc.com/2023/03/07/5kZbF.jpeg&#34; alt=&#34;5kZbF.jpeg&#34; /&gt;&lt;/p&gt;
&lt;p&gt;点开 api 的表单数据，可以看到&lt;br /&gt;
&lt;img data-src=&#34;https://i.imgloc.com/2023/03/07/5knRt.jpeg&#34; alt=&#34;5knRt.jepg&#34; /&gt;&lt;/p&gt;
&lt;p&gt;对这几个参数，&lt;span class=&#34;label info&#34;&gt;param 和 tenant&lt;/span&gt; 不用说肯定是定值，对于&lt;span class=&#34;label info&#34;&gt; sign&lt;/span&gt;，&lt;span class=&#34;label info&#34;&gt;timestamp&lt;/span&gt;，&lt;span class=&#34;label info&#34;&gt;token&lt;/span&gt; 则有可能是加密变化参数，&lt;span class=&#34;label danger&#34;&gt;（不要忘了，对于 token，有可能是定值，例如登录账号后会生成一个此账号的固定 token）&lt;/span&gt;，对页面进行多次刷新，比对可以发现&lt;span class=&#34;label info&#34;&gt; token&lt;/span&gt; 确实是不变的，仅是&lt;span class=&#34;label info&#34;&gt; sign&lt;/span&gt; 和&lt;span class=&#34;label info&#34;&gt; timestamp&lt;/span&gt; 变化。&lt;br /&gt;
则搜索源代码&lt;span class=&#34;label info&#34;&gt; sign&lt;/span&gt;，即可找到&lt;span class=&#34;label info&#34;&gt; sign&lt;/span&gt; 在代码中的位置，如下（搜索找位置此处省略）&lt;br /&gt;
&lt;img data-src=&#34;https://i.imgloc.com/2023/03/07/5ktSJ.jpeg&#34; alt=&#34;5ktSJ.jpeg&#34; /&gt;&lt;/p&gt;
&lt;p&gt;可以看到四个参数都在，并且参数值为变量，则可以判断是此处无疑&lt;br /&gt;
在&lt;span class=&#34;label info&#34;&gt; sign&lt;/span&gt; 处打上断点（&lt;span class=&#34;label info&#34;&gt;timestamp&lt;/span&gt; 打也是一样的），刷新网页，此时页面停在断点处（再次证明此处代码是要找的）&lt;br /&gt;
将鼠标停在加密&lt;span class=&#34;label info&#34;&gt; sign&lt;/span&gt; 的&lt;span class=&#34;label info&#34;&gt; E 函数&lt;/span&gt;上，则可跳转到&lt;span class=&#34;label info&#34;&gt; E 函数&lt;/span&gt;（省略图片），如下&lt;br /&gt;
&lt;img data-src=&#34;https://i.imgloc.com/2023/03/07/50hda.jpeg&#34; alt=&#34;50hda.jpeg&#34; /&gt;&lt;/p&gt;
&lt;p&gt;发现&lt;span class=&#34;label info&#34;&gt; E 函数&lt;/span&gt;是返回了一个值，这个值是通过&lt;span class=&#34;label info&#34;&gt; k 函数&lt;/span&gt;进行加密的，于是用同上方法跳转到&lt;span class=&#34;label info&#34;&gt; k 函数&lt;/span&gt;，如下&lt;br /&gt;
&lt;img data-src=&#34;https://i.imgloc.com/2023/03/07/5CmJv.jpeg&#34; alt=&#34;5CmJv.jpeg&#34; /&gt;&lt;/p&gt;
&lt;h4 id=&#34;逻辑梳理&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#逻辑梳理&#34;&gt;#&lt;/a&gt; 逻辑梳理&lt;/h4&gt;
&lt;p&gt;看到整个加密逻辑了过后，来进行一遍梳理，并运用 python 模拟加密逻辑&lt;br /&gt;
其中&lt;span class=&#34;label info&#34;&gt; timestamp&lt;/span&gt; 为时间戳，即&lt;br /&gt;
 &lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;div class=&#34;caption&#34;&gt;&lt;span&gt;时间戳&lt;/span&gt;&lt;/div&gt;&lt;code class=&#34;language-python&#34;&gt;time_get&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;time&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;time&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1000&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;br /&gt;
 对于&lt;span class=&#34;label info&#34;&gt; sign&lt;/span&gt;, 我们先分析&lt;span class=&#34;label info&#34;&gt; k 函数&lt;/span&gt;，&lt;span class=&#34;label info&#34;&gt;k 函数&lt;/span&gt;是对传入的参数进行&lt;span class=&#34;label info&#34;&gt; sha256 加密&lt;/span&gt;，即&lt;br /&gt;
 &lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;div class=&#34;caption&#34;&gt;&lt;span&gt;sha256加密&lt;/span&gt;&lt;/div&gt;&lt;code class=&#34;language-python&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;sha256&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;self&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;value&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    sha&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;hashlib&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;sha256&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
    sha&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;update&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;value&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;encode&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;utf-8&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; sha&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;hexdigest&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;br /&gt;
 而&lt;span class=&#34;label info&#34;&gt; E 函数&lt;/span&gt;则是将&lt;span class=&#34;label info&#34;&gt; param&lt;/span&gt;,&lt;span class=&#34;label info&#34;&gt;timestamp&lt;/span&gt;,&lt;span class=&#34;label info&#34;&gt;tenant&lt;/span&gt;,&lt;span class=&#34;label info&#34;&gt;salt&lt;/span&gt; 进行拼接并返回其进行&lt;span class=&#34;label info&#34;&gt; sha256 加密&lt;/span&gt;的值（对于&lt;span class=&#34;label info&#34;&gt; salt&lt;/span&gt; 的值，即 C，可以将鼠标放在上面查看）&lt;br /&gt;
注：此处拼接结果为&lt;br /&gt;
 &lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;div class=&#34;caption&#34;&gt;&lt;span&gt;拼接结果&lt;/span&gt;&lt;/div&gt;&lt;code class=&#34;language-python&#34;&gt;time_get&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;time&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;time&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1000&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
        params&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;no&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;dy0002&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;data&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;days&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;rankType&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;7&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;
        dd&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;json&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;dumps&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;params&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
        text &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string-interpolation&#34;&gt;&lt;span class=&#34;token string&#34;&gt;f&#39;param=&lt;/span&gt;&lt;span class=&#34;token interpolation&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;dd&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&amp;amp;timestamp=&lt;/span&gt;&lt;span class=&#34;token interpolation&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;time_get&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&amp;amp;tenant=1&amp;amp;salt=kbn%&amp;amp;)@&amp;lt;?FGkfs8sdf4Vg1*+;`kf5ndl$&#39;&lt;/span&gt;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;br /&gt;
 其中 text 则为拼接结果&lt;/p&gt;
&lt;h4 id=&#34;结果&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#结果&#34;&gt;#&lt;/a&gt; 结果&lt;/h4&gt;
&lt;p&gt;最后请求 api 的时候带上 headers 和表单数据，即可返回 json 类型的数据，对数据进行处理即可，效果图如下：&lt;br /&gt;
&lt;img data-src=&#34;https://i.imgloc.com/2023/03/07/5wKBV.jpeg&#34; alt=&#34;5wKBV.jpeg&#34; /&gt;&lt;/p&gt;
&lt;h4 id=&#34;完整代码&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#完整代码&#34;&gt;#&lt;/a&gt; 完整代码&lt;/h4&gt;
&lt;p&gt;代码中的&lt;span class=&#34;label danger&#34;&gt; token&lt;/span&gt; 值请各位自行登录获取&lt;br /&gt;
 &lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; requests
&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; hashlib
&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; time
&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; json

&lt;span class=&#34;token keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;Spider&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;

    &lt;span class=&#34;token keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;__init__&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;self&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
        self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;api&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;https://ucp.hrdjyun.com:60359/api/dy&#39;&lt;/span&gt;
        self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;headers&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;
    &lt;span class=&#34;token string&#34;&gt;&#34;Accept&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;application/json, text/plain, */*&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;token string&#34;&gt;&#34;Accept-Encoding&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;gzip, deflate, br&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;token string&#34;&gt;&#34;Accept-Language&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;zh-CN,zh;q=0.9,en;q=0.8,en-GB;q=0.7,en-US;q=0.6&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;token string&#34;&gt;&#34;Connection&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;keep-alive&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;token string&#34;&gt;&#34;Content-Length&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;248&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;token string&#34;&gt;&#34;Content-Type&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;application/json;charset=UTF-8&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;token string&#34;&gt;&#34;Host&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;ucp.hrdjyun.com:60359&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;token string&#34;&gt;&#34;Origin&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;http://www.hh1024.com&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;token string&#34;&gt;&#34;sec-ch-ua&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;\&#34;Not_A Brand\&#34;;v=\&#34;99\&#34;, \&#34;Microsoft Edge\&#34;;v=\&#34;109\&#34;, \&#34;Chromium\&#34;;v=\&#34;109\&#34;&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;token string&#34;&gt;&#34;sec-ch-ua-mobile&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;?0&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;token string&#34;&gt;&#34;sec-ch-ua-platform&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;\&#34;Windows\&#34;&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;token string&#34;&gt;&#34;Sec-Fetch-Dest&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;empty&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;token string&#34;&gt;&#34;Sec-Fetch-Mode&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;cors&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;token string&#34;&gt;&#34;Sec-Fetch-Site&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;cross-site&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;token string&#34;&gt;&#34;User-Agent&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/109.0.0.0 Safari/537.36 Edg/109.0.1518.52&#34;&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;

    &lt;span class=&#34;token keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;sha256&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;self&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;value&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
        sha&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;hashlib&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;sha256&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
        sha&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;update&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;value&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;encode&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;utf-8&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
        &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; sha&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;hexdigest&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;

    &lt;span class=&#34;token keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;spider&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;self&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
        time_get&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;time&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;time&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1000&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
        params&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;no&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;dy0002&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;data&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;days&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;rankType&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;7&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;
        dd&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;json&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;dumps&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;params&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
        text &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string-interpolation&#34;&gt;&lt;span class=&#34;token string&#34;&gt;f&#39;param=&lt;/span&gt;&lt;span class=&#34;token interpolation&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;dd&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&amp;amp;timestamp=&lt;/span&gt;&lt;span class=&#34;token interpolation&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;time_get&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&amp;amp;tenant=1&amp;amp;salt=kbn%&amp;amp;)@&amp;lt;?FGkfs8sdf4Vg1*+;`kf5ndl$&#39;&lt;/span&gt;&lt;/span&gt;
        sign &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;sha256&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;text&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
        data&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;
            &lt;span class=&#34;token string&#34;&gt;&#34;param&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;dd&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
            &lt;span class=&#34;token string&#34;&gt;&#34;sign&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;sign&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
            &lt;span class=&#34;token string&#34;&gt;&#34;tenant&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;1&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
            &lt;span class=&#34;token string&#34;&gt;&#34;timestamp&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;time_get&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
            &lt;span class=&#34;token string&#34;&gt;&#34;token&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;你的token&#34;&lt;/span&gt;
        &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;
        session&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;requests&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;session&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
        session&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;headers&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;headers
        response&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;session&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;post&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;api&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;data&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;json&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;dumps&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;data&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
        &lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;response&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;json&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
        &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; response&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;json&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;get&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;status&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
            data &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; response&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;json&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;get&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;data&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;rankList&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;
            &lt;span class=&#34;token keyword&#34;&gt;for&lt;/span&gt; d &lt;span class=&#34;token keyword&#34;&gt;in&lt;/span&gt; data&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
                items &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;
                items&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;抖音名&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; d&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;get&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;anchorName&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
                items&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;销量&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; d&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;get&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;displaySales&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
                items&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;销售额&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;d&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;get&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;displayMoney&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
                items&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;粉丝&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;%.2f&#39;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;%&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;d&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;get&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;fans&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;10000&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;万&#39;&lt;/span&gt;
                items&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;热度&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;d&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;get&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;gmv_score&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
                &lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;items&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; __name__&lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;__main__&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    Spider&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;spider&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/p&gt;
 ]]></description>
        </item>
    </channel>
</rss>
